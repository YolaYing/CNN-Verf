<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="438" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="421.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="421.00"> </text><svg id="frames" x="10" width="1180" total_samples="4114"><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.05%)</title><rect x="0.0000%" y="277" width="0.0486%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="287.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ff::fields::models::fp::montgomery_backend::MontConfig::from_bigint (2 samples, 0.05%)</title><rect x="0.0000%" y="261" width="0.0486%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2"/><text x="0.2500%" y="271.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::convert::From&lt;i64&gt;&gt;::from (1 samples, 0.02%)</title><rect x="0.0486%" y="277" width="0.0243%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="1"/><text x="0.2986%" y="287.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (2 samples, 0.05%)</title><rect x="0.0729%" y="277" width="0.0486%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="2"/><text x="0.3229%" y="287.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`criterion::html::Html::new (1 samples, 0.02%)</title><rect x="0.1215%" y="261" width="0.0243%" height="15" fill="rgb(208,68,35)" fg:x="5" fg:w="1"/><text x="0.3715%" y="271.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`tinytemplate::TinyTemplate::add_template (1 samples, 0.02%)</title><rect x="0.1215%" y="245" width="0.0243%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="1"/><text x="0.3715%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`core::str::_&lt;impl str&gt;::trim_matches (1 samples, 0.02%)</title><rect x="0.1215%" y="229" width="0.0243%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="1"/><text x="0.3715%" y="239.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;criterion::Criterion as core::default::Default&gt;::default (2 samples, 0.05%)</title><rect x="0.1215%" y="277" width="0.0486%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="2"/><text x="0.3715%" y="287.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.02%)</title><rect x="0.1458%" y="261" width="0.0243%" height="15" fill="rgb(218,30,26)" fg:x="6" fg:w="1"/><text x="0.3958%" y="271.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`once_cell::imp::initialize_or_wait (1 samples, 0.02%)</title><rect x="0.1458%" y="245" width="0.0243%" height="15" fill="rgb(220,122,19)" fg:x="6" fg:w="1"/><text x="0.3958%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.02%)</title><rect x="0.1458%" y="229" width="0.0243%" height="15" fill="rgb(250,228,42)" fg:x="6" fg:w="1"/><text x="0.3958%" y="239.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="0.1458%" y="213" width="0.0243%" height="15" fill="rgb(240,193,28)" fg:x="6" fg:w="1"/><text x="0.3958%" y="223.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.02%)</title><rect x="0.1458%" y="197" width="0.0243%" height="15" fill="rgb(216,20,37)" fg:x="6" fg:w="1"/><text x="0.3958%" y="207.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`once_cell::imp::initialize_or_wait (1 samples, 0.02%)</title><rect x="0.1458%" y="181" width="0.0243%" height="15" fill="rgb(206,188,39)" fg:x="6" fg:w="1"/><text x="0.3958%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.02%)</title><rect x="0.1458%" y="165" width="0.0243%" height="15" fill="rgb(217,207,13)" fg:x="6" fg:w="1"/><text x="0.3958%" y="175.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`criterion_plot::version (1 samples, 0.02%)</title><rect x="0.1458%" y="149" width="0.0243%" height="15" fill="rgb(231,73,38)" fg:x="6" fg:w="1"/><text x="0.3958%" y="159.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`std::process::Command::output (1 samples, 0.02%)</title><rect x="0.1458%" y="133" width="0.0243%" height="15" fill="rgb(225,20,46)" fg:x="6" fg:w="1"/><text x="0.3958%" y="143.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`std::sys::pal::unix::process::process_inner::_&lt;impl std::sys::pal::unix::process::process_common::Command&gt;::spawn (1 samples, 0.02%)</title><rect x="0.1458%" y="117" width="0.0243%" height="15" fill="rgb(210,31,41)" fg:x="6" fg:w="1"/><text x="0.3958%" y="127.50"></text></g><g><title>libsystem_c.dylib`posix_spawnp (1 samples, 0.02%)</title><rect x="0.1458%" y="101" width="0.0243%" height="15" fill="rgb(221,200,47)" fg:x="6" fg:w="1"/><text x="0.3958%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`__posix_spawn (1 samples, 0.02%)</title><rect x="0.1458%" y="85" width="0.0243%" height="15" fill="rgb(226,26,5)" fg:x="6" fg:w="1"/><text x="0.3958%" y="95.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ff::fields::models::fp::montgomery_backend::MontConfig::from_bigint (3 samples, 0.07%)</title><rect x="0.1702%" y="277" width="0.0729%" height="15" fill="rgb(249,33,26)" fg:x="7" fg:w="3"/><text x="0.4202%" y="287.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="0.2431%" y="213" width="0.0243%" height="15" fill="rgb(235,183,28)" fg:x="10" fg:w="1"/><text x="0.4931%" y="223.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ff::fields::models::fp::montgomery_backend::MontConfig::from_bigint (2 samples, 0.05%)</title><rect x="0.2674%" y="213" width="0.0486%" height="15" fill="rgb(221,5,38)" fg:x="11" fg:w="2"/><text x="0.5174%" y="223.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ff::fields::models::fp::montgomery_backend::MontConfig::from_bigint (10 samples, 0.24%)</title><rect x="0.4132%" y="197" width="0.2431%" height="15" fill="rgb(247,18,42)" fg:x="17" fg:w="10"/><text x="0.6632%" y="207.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`core::ops::function::FnMut::call_mut (10 samples, 0.24%)</title><rect x="0.6563%" y="181" width="0.2431%" height="15" fill="rgb(241,131,45)" fg:x="27" fg:w="10"/><text x="0.9063%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`zkconv::relu::prover::Prover::compute_table_set (25 samples, 0.61%)</title><rect x="0.3160%" y="213" width="0.6077%" height="15" fill="rgb(249,31,29)" fg:x="13" fg:w="25"/><text x="0.5660%" y="223.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`core::slice::sort::stable::driftsort_main (11 samples, 0.27%)</title><rect x="0.6563%" y="197" width="0.2674%" height="15" fill="rgb(225,111,53)" fg:x="27" fg:w="11"/><text x="0.9063%" y="207.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`core::slice::sort::stable::drift::sort (1 samples, 0.02%)</title><rect x="0.8994%" y="181" width="0.0243%" height="15" fill="rgb(238,160,17)" fg:x="37" fg:w="1"/><text x="1.1494%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="1.0209%" y="165" width="0.0243%" height="15" fill="rgb(214,148,48)" fg:x="42" fg:w="1"/><text x="1.2709%" y="175.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="0.9966%" y="181" width="0.0729%" height="15" fill="rgb(232,36,49)" fg:x="41" fg:w="3"/><text x="1.2466%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="1.0452%" y="165" width="0.0243%" height="15" fill="rgb(209,103,24)" fg:x="43" fg:w="1"/><text x="1.2952%" y="175.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.15%)</title><rect x="0.9480%" y="197" width="0.1458%" height="15" fill="rgb(229,88,8)" fg:x="39" fg:w="6"/><text x="1.1980%" y="207.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="1.0695%" y="181" width="0.0243%" height="15" fill="rgb(213,181,19)" fg:x="44" fg:w="1"/><text x="1.3195%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::add_assign (1 samples, 0.02%)</title><rect x="1.0938%" y="197" width="0.0243%" height="15" fill="rgb(254,191,54)" fg:x="45" fg:w="1"/><text x="1.3438%" y="207.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (62 samples, 1.51%)</title><rect x="1.1181%" y="197" width="1.5070%" height="15" fill="rgb(241,83,37)" fg:x="46" fg:w="62"/><text x="1.3681%" y="207.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (11 samples, 0.27%)</title><rect x="2.6252%" y="197" width="0.2674%" height="15" fill="rgb(233,36,39)" fg:x="108" fg:w="11"/><text x="2.8752%" y="207.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::prime::PrimeField&gt;::into_bigint (2 samples, 0.05%)</title><rect x="2.9169%" y="149" width="0.0486%" height="15" fill="rgb(226,3,54)" fg:x="120" fg:w="2"/><text x="3.1669%" y="159.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (2 samples, 0.05%)</title><rect x="4.1079%" y="117" width="0.0486%" height="15" fill="rgb(245,192,40)" fg:x="169" fg:w="2"/><text x="4.3579%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (3 samples, 0.07%)</title><rect x="4.1565%" y="117" width="0.0729%" height="15" fill="rgb(238,167,29)" fg:x="171" fg:w="3"/><text x="4.4065%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::SubAssign&lt;T&gt;&gt;::sub_assign (3 samples, 0.07%)</title><rect x="4.2295%" y="117" width="0.0729%" height="15" fill="rgb(232,182,51)" fg:x="174" fg:w="3"/><text x="4.4795%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (20 samples, 0.49%)</title><rect x="5.0316%" y="101" width="0.4861%" height="15" fill="rgb(231,60,39)" fg:x="207" fg:w="20"/><text x="5.2816%" y="111.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (91 samples, 2.21%)</title><rect x="5.5177%" y="101" width="2.2120%" height="15" fill="rgb(208,69,12)" fg:x="227" fg:w="91"/><text x="5.7677%" y="111.50">b..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::SubAssign&lt;T&gt;&gt;::sub_assign (99 samples, 2.41%)</title><rect x="7.7297%" y="101" width="2.4064%" height="15" fill="rgb(235,93,37)" fg:x="318" fg:w="99"/><text x="7.9797%" y="111.50">be..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (56 samples, 1.36%)</title><rect x="10.1361%" y="101" width="1.3612%" height="15" fill="rgb(213,116,39)" fg:x="417" fg:w="56"/><text x="10.3861%" y="111.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (176 samples, 4.28%)</title><rect x="11.4973%" y="101" width="4.2781%" height="15" fill="rgb(222,207,29)" fg:x="473" fg:w="176"/><text x="11.7473%" y="111.50">bench..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (456 samples, 11.08%)</title><rect x="15.7754%" y="101" width="11.0841%" height="15" fill="rgb(206,96,30)" fg:x="649" fg:w="456"/><text x="16.0254%" y="111.50">bench_relu_real_..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (7 samples, 0.17%)</title><rect x="26.8595%" y="101" width="0.1702%" height="15" fill="rgb(218,138,4)" fg:x="1105" fg:w="7"/><text x="27.1095%" y="111.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (116 samples, 2.82%)</title><rect x="27.0297%" y="101" width="2.8196%" height="15" fill="rgb(250,191,14)" fg:x="1112" fg:w="116"/><text x="27.2797%" y="111.50">be..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,160 samples, 28.20%)</title><rect x="4.3024%" y="117" width="28.1964%" height="15" fill="rgb(239,60,40)" fg:x="177" fg:w="1160"/><text x="4.5524%" y="127.50">bench_relu_real_data-ca68ff78096a3c87`&lt;core::..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_bn254::fields::fq::_::_&lt;impl ark_ff::fields::models::fp::montgomery_backend::MontConfig&lt;4_usize&gt; for ark_bn254::fields::fq::FqConfig&gt;::sum_of_products (109 samples, 2.65%)</title><rect x="29.8493%" y="101" width="2.6495%" height="15" fill="rgb(206,27,48)" fg:x="1228" fg:w="109"/><text x="30.0993%" y="111.50">be..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,230 samples, 29.90%)</title><rect x="2.9898%" y="133" width="29.8979%" height="15" fill="rgb(225,35,8)" fg:x="123" fg:w="1230"/><text x="3.2398%" y="143.50">bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::ve..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (16 samples, 0.39%)</title><rect x="32.4988%" y="117" width="0.3889%" height="15" fill="rgb(250,213,24)" fg:x="1337" fg:w="16"/><text x="32.7488%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="32.8877%" y="133" width="0.0243%" height="15" fill="rgb(247,123,22)" fg:x="1353" fg:w="1"/><text x="33.1377%" y="143.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,235 samples, 30.02%)</title><rect x="2.9169%" y="181" width="30.0194%" height="15" fill="rgb(231,138,38)" fg:x="120" fg:w="1235"/><text x="3.1669%" y="191.50">bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::ve..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,235 samples, 30.02%)</title><rect x="2.9169%" y="165" width="30.0194%" height="15" fill="rgb(231,145,46)" fg:x="120" fg:w="1235"/><text x="3.1669%" y="175.50">bench_relu_real_data-ca68ff78096a3c87`&lt;core::ite..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ec::scalar_mul::variable_base::VariableBaseMSM::msm_unchecked (1,233 samples, 29.97%)</title><rect x="2.9655%" y="149" width="29.9708%" height="15" fill="rgb(251,118,11)" fg:x="122" fg:w="1233"/><text x="3.2155%" y="159.50">bench_relu_real_data-ca68ff78096a3c87`ark_ec::sc..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="32.9120%" y="133" width="0.0243%" height="15" fill="rgb(217,147,25)" fg:x="1354" fg:w="1"/><text x="33.1620%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="32.9363%" y="181" width="0.0243%" height="15" fill="rgb(247,81,37)" fg:x="1355" fg:w="1"/><text x="33.1863%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="32.9363%" y="165" width="0.0243%" height="15" fill="rgb(209,12,38)" fg:x="1355" fg:w="1"/><text x="33.1863%" y="175.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;pcs::hyrax_kzg::hyrax_kzg_1::HyraxKzgPCS1&lt;E&gt; as pcs::PolynomialCommitmentScheme&lt;E&gt;&gt;::commit (1,238 samples, 30.09%)</title><rect x="2.8926%" y="197" width="30.0924%" height="15" fill="rgb(227,1,9)" fg:x="119" fg:w="1238"/><text x="3.1426%" y="207.50">bench_relu_real_data-ca68ff78096a3c87`&lt;pcs::hyrax..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="32.9606%" y="181" width="0.0243%" height="15" fill="rgb(248,47,43)" fg:x="1356" fg:w="1"/><text x="33.2106%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (8 samples, 0.19%)</title><rect x="32.9849%" y="181" width="0.1945%" height="15" fill="rgb(221,10,30)" fg:x="1357" fg:w="8"/><text x="33.2349%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (3 samples, 0.07%)</title><rect x="33.1794%" y="181" width="0.0729%" height="15" fill="rgb(210,229,1)" fg:x="1365" fg:w="3"/><text x="33.4294%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`arithmetic::multilinear_poly::bind_vars (1 samples, 0.02%)</title><rect x="33.2523%" y="181" width="0.0243%" height="15" fill="rgb(222,148,37)" fg:x="1368" fg:w="1"/><text x="33.5023%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (10 samples, 0.24%)</title><rect x="33.6412%" y="117" width="0.2431%" height="15" fill="rgb(234,67,33)" fg:x="1384" fg:w="10"/><text x="33.8912%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (15 samples, 0.36%)</title><rect x="33.8843%" y="117" width="0.3646%" height="15" fill="rgb(247,98,35)" fg:x="1394" fg:w="15"/><text x="34.1343%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::SubAssign&lt;T&gt;&gt;::sub_assign (25 samples, 0.61%)</title><rect x="34.2489%" y="117" width="0.6077%" height="15" fill="rgb(247,138,52)" fg:x="1409" fg:w="25"/><text x="34.4989%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (21 samples, 0.51%)</title><rect x="34.8566%" y="117" width="0.5105%" height="15" fill="rgb(213,79,30)" fg:x="1434" fg:w="21"/><text x="35.1066%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (31 samples, 0.75%)</title><rect x="35.3670%" y="117" width="0.7535%" height="15" fill="rgb(246,177,23)" fg:x="1455" fg:w="31"/><text x="35.6170%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (113 samples, 2.75%)</title><rect x="36.1206%" y="117" width="2.7467%" height="15" fill="rgb(230,62,27)" fg:x="1486" fg:w="113"/><text x="36.3706%" y="127.50">be..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="38.8673%" y="117" width="0.0243%" height="15" fill="rgb(216,154,8)" fg:x="1599" fg:w="1"/><text x="39.1173%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (31 samples, 0.75%)</title><rect x="38.8916%" y="117" width="0.7535%" height="15" fill="rgb(244,35,45)" fg:x="1600" fg:w="31"/><text x="39.1416%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (274 samples, 6.66%)</title><rect x="33.4225%" y="133" width="6.6602%" height="15" fill="rgb(251,115,12)" fg:x="1375" fg:w="274"/><text x="33.6725%" y="143.50">bench_rel..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_bn254::fields::fq::_::_&lt;impl ark_ff::fields::models::fp::montgomery_backend::MontConfig&lt;4_usize&gt; for ark_bn254::fields::fq::FqConfig&gt;::sum_of_products (18 samples, 0.44%)</title><rect x="39.6451%" y="117" width="0.4375%" height="15" fill="rgb(240,54,50)" fg:x="1631" fg:w="18"/><text x="39.8951%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="40.0826%" y="133" width="0.0243%" height="15" fill="rgb(233,84,52)" fg:x="1649" fg:w="1"/><text x="40.3326%" y="143.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="40.0826%" y="117" width="0.0243%" height="15" fill="rgb(207,117,47)" fg:x="1649" fg:w="1"/><text x="40.3326%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.02%)</title><rect x="40.0826%" y="101" width="0.0243%" height="15" fill="rgb(249,43,39)" fg:x="1649" fg:w="1"/><text x="40.3326%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.02%)</title><rect x="40.0826%" y="85" width="0.0243%" height="15" fill="rgb(209,38,44)" fg:x="1649" fg:w="1"/><text x="40.3326%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="40.0826%" y="69" width="0.0243%" height="15" fill="rgb(236,212,23)" fg:x="1649" fg:w="1"/><text x="40.3326%" y="79.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (282 samples, 6.85%)</title><rect x="33.3009%" y="149" width="6.8546%" height="15" fill="rgb(242,79,21)" fg:x="1370" fg:w="282"/><text x="33.5509%" y="159.50">bench_rel..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.05%)</title><rect x="40.1070%" y="133" width="0.0486%" height="15" fill="rgb(211,96,35)" fg:x="1650" fg:w="2"/><text x="40.3570%" y="143.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (1 samples, 0.02%)</title><rect x="40.1556%" y="149" width="0.0243%" height="15" fill="rgb(253,215,40)" fg:x="1652" fg:w="1"/><text x="40.4056%" y="159.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;pcs::hyrax_kzg::hyrax_kzg_1::HyraxKzgPCS1&lt;E&gt; as pcs::PolynomialCommitmentScheme&lt;E&gt;&gt;::open (297 samples, 7.22%)</title><rect x="32.9849%" y="197" width="7.2193%" height="15" fill="rgb(211,81,21)" fg:x="1357" fg:w="297"/><text x="33.2349%" y="207.50">bench_relu..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`pcs::multilinear_kzg::open_internal (285 samples, 6.93%)</title><rect x="33.2766%" y="181" width="6.9276%" height="15" fill="rgb(208,190,38)" fg:x="1369" fg:w="285"/><text x="33.5266%" y="191.50">bench_rel..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ec::scalar_mul::variable_base::VariableBaseMSM::msm_unchecked (284 samples, 6.90%)</title><rect x="33.3009%" y="165" width="6.9033%" height="15" fill="rgb(235,213,38)" fg:x="1370" fg:w="284"/><text x="33.5509%" y="175.50">bench_rel..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (1 samples, 0.02%)</title><rect x="40.1799%" y="149" width="0.0243%" height="15" fill="rgb(237,122,38)" fg:x="1653" fg:w="1"/><text x="40.4299%" y="159.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`arithmetic::batch_inverse (1 samples, 0.02%)</title><rect x="40.2042%" y="197" width="0.0243%" height="15" fill="rgb(244,218,35)" fg:x="1654" fg:w="1"/><text x="40.4542%" y="207.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (5 samples, 0.12%)</title><rect x="40.2285%" y="181" width="0.1215%" height="15" fill="rgb(240,68,47)" fg:x="1655" fg:w="5"/><text x="40.4785%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`arithmetic::multilinear_poly::new_eq (6 samples, 0.15%)</title><rect x="40.2285%" y="197" width="0.1458%" height="15" fill="rgb(210,16,53)" fg:x="1655" fg:w="6"/><text x="40.4785%" y="207.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (1 samples, 0.02%)</title><rect x="40.3500%" y="181" width="0.0243%" height="15" fill="rgb(235,124,12)" fg:x="1660" fg:w="1"/><text x="40.6000%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.02%)</title><rect x="40.3743%" y="197" width="0.0243%" height="15" fill="rgb(224,169,11)" fg:x="1661" fg:w="1"/><text x="40.6243%" y="207.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`__rdl_alloc (1 samples, 0.02%)</title><rect x="41.1279%" y="165" width="0.0243%" height="15" fill="rgb(250,166,2)" fg:x="1692" fg:w="1"/><text x="41.3779%" y="175.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="41.1522%" y="165" width="0.0243%" height="15" fill="rgb(242,216,29)" fg:x="1693" fg:w="1"/><text x="41.4022%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.05%)</title><rect x="41.1765%" y="165" width="0.0486%" height="15" fill="rgb(230,116,27)" fg:x="1694" fg:w="2"/><text x="41.4265%" y="175.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (14 samples, 0.34%)</title><rect x="41.1035%" y="181" width="0.3403%" height="15" fill="rgb(228,99,48)" fg:x="1691" fg:w="14"/><text x="41.3535%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.22%)</title><rect x="41.2251%" y="165" width="0.2188%" height="15" fill="rgb(253,11,6)" fg:x="1696" fg:w="9"/><text x="41.4751%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (14 samples, 0.34%)</title><rect x="41.4439%" y="181" width="0.3403%" height="15" fill="rgb(247,143,39)" fg:x="1705" fg:w="14"/><text x="41.6939%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="41.7842%" y="181" width="0.0243%" height="15" fill="rgb(236,97,10)" fg:x="1719" fg:w="1"/><text x="42.0342%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="41.7842%" y="165" width="0.0243%" height="15" fill="rgb(233,208,19)" fg:x="1719" fg:w="1"/><text x="42.0342%" y="175.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`poly_iop::sum_check::SumCheck::prove (59 samples, 1.43%)</title><rect x="40.3986%" y="197" width="1.4341%" height="15" fill="rgb(216,164,2)" fg:x="1662" fg:w="59"/><text x="40.6486%" y="207.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.02%)</title><rect x="41.8085%" y="181" width="0.0243%" height="15" fill="rgb(220,129,5)" fg:x="1720" fg:w="1"/><text x="42.0585%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.07%)</title><rect x="41.8328%" y="197" width="0.0729%" height="15" fill="rgb(242,17,10)" fg:x="1721" fg:w="3"/><text x="42.0828%" y="207.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`zkconv::relu::prover::Prover::prove_logup (1,687 samples, 41.01%)</title><rect x="0.9237%" y="213" width="41.0063%" height="15" fill="rgb(242,107,0)" fg:x="38" fg:w="1687"/><text x="1.1737%" y="223.50">bench_relu_real_data-ca68ff78096a3c87`zkconv::relu::prover::Prover:..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="41.9057%" y="197" width="0.0243%" height="15" fill="rgb(251,28,31)" fg:x="1724" fg:w="1"/><text x="42.1557%" y="207.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (1 samples, 0.02%)</title><rect x="41.9300%" y="101" width="0.0243%" height="15" fill="rgb(233,223,10)" fg:x="1725" fg:w="1"/><text x="42.1800%" y="111.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ec::scalar_mul::variable_base::VariableBaseMSM::msm_unchecked (3 samples, 0.07%)</title><rect x="41.9300%" y="165" width="0.0729%" height="15" fill="rgb(215,21,27)" fg:x="1725" fg:w="3"/><text x="42.1800%" y="175.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ec::scalar_mul::variable_base::msm_bigint_wnaf (3 samples, 0.07%)</title><rect x="41.9300%" y="149" width="0.0729%" height="15" fill="rgb(232,23,21)" fg:x="1725" fg:w="3"/><text x="42.1800%" y="159.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="41.9300%" y="133" width="0.0729%" height="15" fill="rgb(244,5,23)" fg:x="1725" fg:w="3"/><text x="42.1800%" y="143.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="41.9300%" y="117" width="0.0729%" height="15" fill="rgb(226,81,46)" fg:x="1725" fg:w="3"/><text x="42.1800%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (2 samples, 0.05%)</title><rect x="41.9543%" y="101" width="0.0486%" height="15" fill="rgb(247,70,30)" fg:x="1726" fg:w="2"/><text x="42.2043%" y="111.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (1 samples, 0.02%)</title><rect x="42.0029%" y="117" width="0.0243%" height="15" fill="rgb(212,68,19)" fg:x="1728" fg:w="1"/><text x="42.2529%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::quadratic_extension::QuadExtField&lt;P&gt; as ark_ff::fields::Field&gt;::square_in_place (1 samples, 0.02%)</title><rect x="42.0272%" y="117" width="0.0243%" height="15" fill="rgb(240,187,13)" fg:x="1729" fg:w="1"/><text x="42.2772%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::bn::g2::G2Prepared&lt;P&gt; as core::convert::From&lt;ark_ec::models::short_weierstrass::affine::Affine&lt;&lt;P as ark_ec::models::bn::BnConfig&gt;::G2Config&gt;&gt;&gt;::from (3 samples, 0.07%)</title><rect x="42.0029%" y="133" width="0.0729%" height="15" fill="rgb(223,113,26)" fg:x="1728" fg:w="3"/><text x="42.2529%" y="143.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ec::models::bn::g2::G2HomProjective&lt;P&gt;::add_in_place (1 samples, 0.02%)</title><rect x="42.0515%" y="117" width="0.0243%" height="15" fill="rgb(206,192,2)" fg:x="1730" fg:w="1"/><text x="42.3015%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="42.0515%" y="101" width="0.0243%" height="15" fill="rgb(241,108,4)" fg:x="1730" fg:w="1"/><text x="42.3015%" y="111.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (1 samples, 0.02%)</title><rect x="42.0758%" y="133" width="0.0243%" height="15" fill="rgb(247,173,49)" fg:x="1731" fg:w="1"/><text x="42.3258%" y="143.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::quadratic_extension::QuadExtField&lt;P&gt; as ark_ff::fields::AdditiveGroup&gt;::double_in_place (1 samples, 0.02%)</title><rect x="42.1001%" y="117" width="0.0243%" height="15" fill="rgb(224,114,35)" fg:x="1732" fg:w="1"/><text x="42.3501%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::windowed_mul (3 samples, 0.07%)</title><rect x="42.1001%" y="133" width="0.0729%" height="15" fill="rgb(245,159,27)" fg:x="1732" fg:w="3"/><text x="42.3501%" y="143.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_bn254::fields::fq::_::_&lt;impl ark_ff::fields::models::fp::montgomery_backend::MontConfig&lt;4_usize&gt; for ark_bn254::fields::fq::FqConfig&gt;::sum_of_products (2 samples, 0.05%)</title><rect x="42.1245%" y="117" width="0.0486%" height="15" fill="rgb(245,172,44)" fg:x="1733" fg:w="2"/><text x="42.3745%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.22%)</title><rect x="42.0029%" y="149" width="0.2188%" height="15" fill="rgb(236,23,11)" fg:x="1728" fg:w="9"/><text x="42.2529%" y="159.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ff::fields::models::fp::montgomery_backend::MontConfig::inverse (2 samples, 0.05%)</title><rect x="42.1731%" y="133" width="0.0486%" height="15" fill="rgb(205,117,38)" fg:x="1735" fg:w="2"/><text x="42.4231%" y="143.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ff::biginteger::arithmetic::find_naf (1 samples, 0.02%)</title><rect x="42.2217%" y="133" width="0.0243%" height="15" fill="rgb(237,72,25)" fg:x="1737" fg:w="1"/><text x="42.4717%" y="143.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (1 samples, 0.02%)</title><rect x="42.2217%" y="117" width="0.0243%" height="15" fill="rgb(244,70,9)" fg:x="1737" fg:w="1"/><text x="42.4717%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="42.2217%" y="101" width="0.0243%" height="15" fill="rgb(217,125,39)" fg:x="1737" fg:w="1"/><text x="42.4717%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.02%)</title><rect x="42.2217%" y="85" width="0.0243%" height="15" fill="rgb(235,36,10)" fg:x="1737" fg:w="1"/><text x="42.4717%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.02%)</title><rect x="42.2217%" y="69" width="0.0243%" height="15" fill="rgb(251,123,47)" fg:x="1737" fg:w="1"/><text x="42.4717%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.02%)</title><rect x="42.2217%" y="53" width="0.0243%" height="15" fill="rgb(221,13,13)" fg:x="1737" fg:w="1"/><text x="42.4717%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="42.2217%" y="37" width="0.0243%" height="15" fill="rgb(238,131,9)" fg:x="1737" fg:w="1"/><text x="42.4717%" y="47.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ec::models::bn::BnConfig::final_exponentiation (2 samples, 0.05%)</title><rect x="42.2217%" y="149" width="0.0486%" height="15" fill="rgb(211,50,8)" fg:x="1737" fg:w="2"/><text x="42.4717%" y="159.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ff::fields::cyclotomic::exp_loop (1 samples, 0.02%)</title><rect x="42.2460%" y="133" width="0.0243%" height="15" fill="rgb(245,182,24)" fg:x="1738" fg:w="1"/><text x="42.4960%" y="143.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::quadratic_extension::QuadExtField&lt;P&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::quadratic_extension::QuadExtField&lt;P&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="42.2460%" y="117" width="0.0243%" height="15" fill="rgb(242,14,37)" fg:x="1738" fg:w="1"/><text x="42.4960%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_bn254::fields::fq::_::_&lt;impl ark_ff::fields::models::fp::montgomery_backend::MontConfig&lt;4_usize&gt; for ark_bn254::fields::fq::FqConfig&gt;::sum_of_products (1 samples, 0.02%)</title><rect x="42.2460%" y="101" width="0.0243%" height="15" fill="rgb(246,228,12)" fg:x="1738" fg:w="1"/><text x="42.4960%" y="111.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_bn254::fields::fq::_::_&lt;impl ark_ff::fields::models::fp::montgomery_backend::MontConfig&lt;4_usize&gt; for ark_bn254::fields::fq::FqConfig&gt;::sum_of_products (1 samples, 0.02%)</title><rect x="42.2703%" y="117" width="0.0243%" height="15" fill="rgb(213,55,15)" fg:x="1739" fg:w="1"/><text x="42.5203%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (2 samples, 0.05%)</title><rect x="42.3432%" y="101" width="0.0486%" height="15" fill="rgb(209,9,3)" fg:x="1742" fg:w="2"/><text x="42.5932%" y="111.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_bn254::fields::fq::_::_&lt;impl ark_ff::fields::models::fp::montgomery_backend::MontConfig&lt;4_usize&gt; for ark_bn254::fields::fq::FqConfig&gt;::sum_of_products (3 samples, 0.07%)</title><rect x="42.3918%" y="101" width="0.0729%" height="15" fill="rgb(230,59,30)" fg:x="1744" fg:w="3"/><text x="42.6418%" y="111.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ec::models::bn::BnConfig::multi_miller_loop (11 samples, 0.27%)</title><rect x="42.2703%" y="149" width="0.2674%" height="15" fill="rgb(209,121,21)" fg:x="1739" fg:w="11"/><text x="42.5203%" y="159.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.27%)</title><rect x="42.2703%" y="133" width="0.2674%" height="15" fill="rgb(220,109,13)" fg:x="1739" fg:w="11"/><text x="42.5203%" y="143.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ff::fields::models::fp12_2over3over2::_&lt;impl ark_ff::fields::models::quadratic_extension::QuadExtField&lt;ark_ff::fields::models::fp12_2over3over2::Fp12ConfigWrapper&lt;P&gt;&gt;&gt;::mul_by_034 (10 samples, 0.24%)</title><rect x="42.2946%" y="117" width="0.2431%" height="15" fill="rgb(232,18,1)" fg:x="1740" fg:w="10"/><text x="42.5446%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ff::fields::models::fp6_3over2::_&lt;impl ark_ff::fields::models::cubic_extension::CubicExtField&lt;ark_ff::fields::models::fp6_3over2::Fp6ConfigWrapper&lt;P&gt;&gt;&gt;::mul_by_01 (3 samples, 0.07%)</title><rect x="42.4648%" y="101" width="0.0729%" height="15" fill="rgb(215,41,42)" fg:x="1747" fg:w="3"/><text x="42.7148%" y="111.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="42.5377%" y="133" width="0.0729%" height="15" fill="rgb(224,123,36)" fg:x="1750" fg:w="3"/><text x="42.7877%" y="143.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (3 samples, 0.07%)</title><rect x="42.5377%" y="117" width="0.0729%" height="15" fill="rgb(240,125,3)" fg:x="1750" fg:w="3"/><text x="42.7877%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ff::fields::serial_batch_inversion_and_mul (3 samples, 0.07%)</title><rect x="42.5377%" y="101" width="0.0729%" height="15" fill="rgb(205,98,50)" fg:x="1750" fg:w="3"/><text x="42.7877%" y="111.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ff::fields::models::fp::montgomery_backend::MontConfig::inverse (3 samples, 0.07%)</title><rect x="42.5377%" y="85" width="0.0729%" height="15" fill="rgb(205,185,37)" fg:x="1750" fg:w="3"/><text x="42.7877%" y="95.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ff::fields::AdditiveGroup&gt;::double_in_place (1 samples, 0.02%)</title><rect x="42.6106%" y="133" width="0.0243%" height="15" fill="rgb(238,207,15)" fg:x="1753" fg:w="1"/><text x="42.8606%" y="143.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="42.6106%" y="117" width="0.0243%" height="15" fill="rgb(213,199,42)" fg:x="1753" fg:w="1"/><text x="42.8606%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="42.6349%" y="117" width="0.0243%" height="15" fill="rgb(235,201,11)" fg:x="1754" fg:w="1"/><text x="42.8849%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (2 samples, 0.05%)</title><rect x="42.6349%" y="133" width="0.0486%" height="15" fill="rgb(207,46,11)" fg:x="1754" fg:w="2"/><text x="42.8849%" y="143.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_bn254::fields::fq::_::_&lt;impl ark_ff::fields::models::fp::montgomery_backend::MontConfig&lt;4_usize&gt; for ark_bn254::fields::fq::FqConfig&gt;::sum_of_products (1 samples, 0.02%)</title><rect x="42.6592%" y="117" width="0.0243%" height="15" fill="rgb(241,35,35)" fg:x="1755" fg:w="1"/><text x="42.9092%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::quadratic_extension::QuadExtField&lt;P&gt; as ark_ff::fields::AdditiveGroup&gt;::double_in_place (1 samples, 0.02%)</title><rect x="42.6835%" y="133" width="0.0243%" height="15" fill="rgb(243,32,47)" fg:x="1756" fg:w="1"/><text x="42.9335%" y="143.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;pcs::hyrax_kzg::hyrax_kzg_1::HyraxKzgPCS1&lt;E&gt; as pcs::PolynomialCommitmentScheme&lt;E&gt;&gt;::verify (34 samples, 0.83%)</title><rect x="41.9300%" y="181" width="0.8264%" height="15" fill="rgb(247,202,23)" fg:x="1725" fg:w="34"/><text x="42.1800%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`pcs::multilinear_kzg::verify_internal (31 samples, 0.75%)</title><rect x="42.0029%" y="165" width="0.7535%" height="15" fill="rgb(219,102,11)" fg:x="1728" fg:w="31"/><text x="42.2529%" y="175.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::with_num_scalars_and_scalar_size (9 samples, 0.22%)</title><rect x="42.5377%" y="149" width="0.2188%" height="15" fill="rgb(243,110,44)" fg:x="1750" fg:w="9"/><text x="42.7877%" y="159.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_bn254::fields::fq::_::_&lt;impl ark_ff::fields::models::fp::montgomery_backend::MontConfig&lt;4_usize&gt; for ark_bn254::fields::fq::FqConfig&gt;::sum_of_products (2 samples, 0.05%)</title><rect x="42.7078%" y="133" width="0.0486%" height="15" fill="rgb(222,74,54)" fg:x="1757" fg:w="2"/><text x="42.9578%" y="143.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (2 samples, 0.05%)</title><rect x="42.7564%" y="165" width="0.0486%" height="15" fill="rgb(216,99,12)" fg:x="1759" fg:w="2"/><text x="43.0064%" y="175.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (1 samples, 0.02%)</title><rect x="42.8051%" y="165" width="0.0243%" height="15" fill="rgb(226,22,26)" fg:x="1761" fg:w="1"/><text x="43.0551%" y="175.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`arithmetic::multilinear_poly::evaluate_on_point (4 samples, 0.10%)</title><rect x="42.7564%" y="181" width="0.0972%" height="15" fill="rgb(217,163,10)" fg:x="1759" fg:w="4"/><text x="43.0064%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`arithmetic::multilinear_poly::bind_vars (1 samples, 0.02%)</title><rect x="42.8294%" y="165" width="0.0243%" height="15" fill="rgb(213,25,53)" fg:x="1762" fg:w="1"/><text x="43.0794%" y="175.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`zkconv::relu::verifier::Verifier::verify_logup (40 samples, 0.97%)</title><rect x="41.9300%" y="213" width="0.9723%" height="15" fill="rgb(252,105,26)" fg:x="1725" fg:w="40"/><text x="42.1800%" y="223.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`logup::verifier::_&lt;impl logup::Logup&gt;::verify (40 samples, 0.97%)</title><rect x="41.9300%" y="197" width="0.9723%" height="15" fill="rgb(220,39,43)" fg:x="1725" fg:w="40"/><text x="42.1800%" y="207.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ff::fields::models::fp::montgomery_backend::MontConfig::inverse (2 samples, 0.05%)</title><rect x="42.8537%" y="181" width="0.0486%" height="15" fill="rgb(229,68,48)" fg:x="1763" fg:w="2"/><text x="43.1037%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`criterion::bencher::Bencher&lt;M&gt;::iter (1,757 samples, 42.71%)</title><rect x="0.2431%" y="229" width="42.7078%" height="15" fill="rgb(252,8,32)" fg:x="10" fg:w="1757"/><text x="0.4931%" y="239.50">bench_relu_real_data-ca68ff78096a3c87`criterion::bencher::Bencher&lt;M&gt;::..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.05%)</title><rect x="42.9023%" y="213" width="0.0486%" height="15" fill="rgb(223,20,43)" fg:x="1765" fg:w="2"/><text x="43.1523%" y="223.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,758 samples, 42.73%)</title><rect x="0.2431%" y="277" width="42.7321%" height="15" fill="rgb(229,81,49)" fg:x="10" fg:w="1758"/><text x="0.4931%" y="287.50">bench_relu_real_data-ca68ff78096a3c87`criterion::benchmark_group::Benc..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,758 samples, 42.73%)</title><rect x="0.2431%" y="261" width="42.7321%" height="15" fill="rgb(236,28,36)" fg:x="10" fg:w="1758"/><text x="0.4931%" y="271.50">bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::vec::Vec&lt;T&gt; as alloc::ve..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,758 samples, 42.73%)</title><rect x="0.2431%" y="245" width="42.7321%" height="15" fill="rgb(249,185,26)" fg:x="10" fg:w="1758"/><text x="0.4931%" y="255.50">bench_relu_real_data-ca68ff78096a3c87`&lt;core::iter::adapters::map::Map&lt;..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="42.9509%" y="229" width="0.0243%" height="15" fill="rgb(249,174,33)" fg:x="1767" fg:w="1"/><text x="43.2009%" y="239.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::convert::From&lt;i64&gt;&gt;::from (1 samples, 0.02%)</title><rect x="43.1454%" y="261" width="0.0243%" height="15" fill="rgb(233,201,37)" fg:x="1775" fg:w="1"/><text x="43.3954%" y="271.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ff::fields::models::fp::montgomery_backend::MontConfig::from_bigint (7 samples, 0.17%)</title><rect x="43.1697%" y="261" width="0.1702%" height="15" fill="rgb(221,78,26)" fg:x="1776" fg:w="7"/><text x="43.4197%" y="271.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`core::ops::function::FnMut::call_mut (7 samples, 0.17%)</title><rect x="43.3398%" y="245" width="0.1702%" height="15" fill="rgb(250,127,30)" fg:x="1783" fg:w="7"/><text x="43.5898%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`zkconv::relu::prover::Prover::compute_table_set (24 samples, 0.58%)</title><rect x="42.9752%" y="277" width="0.5834%" height="15" fill="rgb(230,49,44)" fg:x="1768" fg:w="24"/><text x="43.2252%" y="287.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`core::slice::sort::stable::driftsort_main (9 samples, 0.22%)</title><rect x="43.3398%" y="261" width="0.2188%" height="15" fill="rgb(229,67,23)" fg:x="1783" fg:w="9"/><text x="43.5898%" y="271.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`core::slice::sort::stable::drift::sort (2 samples, 0.05%)</title><rect x="43.5100%" y="245" width="0.0486%" height="15" fill="rgb(249,83,47)" fg:x="1790" fg:w="2"/><text x="43.7600%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (7 samples, 0.17%)</title><rect x="43.6801%" y="165" width="0.1702%" height="15" fill="rgb(215,43,3)" fg:x="1797" fg:w="7"/><text x="43.9301%" y="175.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (7 samples, 0.17%)</title><rect x="43.8503%" y="165" width="0.1702%" height="15" fill="rgb(238,154,13)" fg:x="1804" fg:w="7"/><text x="44.1003%" y="175.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::SubAssign&lt;T&gt;&gt;::sub_assign (11 samples, 0.27%)</title><rect x="44.0204%" y="165" width="0.2674%" height="15" fill="rgb(219,56,2)" fg:x="1811" fg:w="11"/><text x="44.2704%" y="175.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (10 samples, 0.24%)</title><rect x="44.2878%" y="165" width="0.2431%" height="15" fill="rgb(233,0,4)" fg:x="1822" fg:w="10"/><text x="44.5378%" y="175.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (14 samples, 0.34%)</title><rect x="44.5309%" y="165" width="0.3403%" height="15" fill="rgb(235,30,7)" fg:x="1832" fg:w="14"/><text x="44.7809%" y="175.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (61 samples, 1.48%)</title><rect x="44.8712%" y="165" width="1.4827%" height="15" fill="rgb(250,79,13)" fg:x="1846" fg:w="61"/><text x="45.1212%" y="175.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (17 samples, 0.41%)</title><rect x="46.3539%" y="165" width="0.4132%" height="15" fill="rgb(211,146,34)" fg:x="1907" fg:w="17"/><text x="46.6039%" y="175.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (142 samples, 3.45%)</title><rect x="43.5829%" y="181" width="3.4516%" height="15" fill="rgb(228,22,38)" fg:x="1793" fg:w="142"/><text x="43.8329%" y="191.50">ben..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_bn254::fields::fq::_::_&lt;impl ark_ff::fields::models::fp::montgomery_backend::MontConfig&lt;4_usize&gt; for ark_bn254::fields::fq::FqConfig&gt;::sum_of_products (11 samples, 0.27%)</title><rect x="46.7671%" y="165" width="0.2674%" height="15" fill="rgb(235,168,5)" fg:x="1924" fg:w="11"/><text x="47.0171%" y="175.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;pcs::hyrax_kzg::hyrax_kzg_1::HyraxKzgPCS1&lt;E&gt; as pcs::PolynomialCommitmentScheme&lt;E&gt;&gt;::commit (146 samples, 3.55%)</title><rect x="43.5586%" y="261" width="3.5489%" height="15" fill="rgb(221,155,16)" fg:x="1792" fg:w="146"/><text x="43.8086%" y="271.50">benc..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (146 samples, 3.55%)</title><rect x="43.5586%" y="245" width="3.5489%" height="15" fill="rgb(215,215,53)" fg:x="1792" fg:w="146"/><text x="43.8086%" y="255.50">benc..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (146 samples, 3.55%)</title><rect x="43.5586%" y="229" width="3.5489%" height="15" fill="rgb(223,4,10)" fg:x="1792" fg:w="146"/><text x="43.8086%" y="239.50">benc..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ec::scalar_mul::variable_base::VariableBaseMSM::msm_unchecked (146 samples, 3.55%)</title><rect x="43.5586%" y="213" width="3.5489%" height="15" fill="rgb(234,103,6)" fg:x="1792" fg:w="146"/><text x="43.8086%" y="223.50">benc..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (146 samples, 3.55%)</title><rect x="43.5586%" y="197" width="3.5489%" height="15" fill="rgb(227,97,0)" fg:x="1792" fg:w="146"/><text x="43.8086%" y="207.50">benc..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.07%)</title><rect x="47.0345%" y="181" width="0.0729%" height="15" fill="rgb(234,150,53)" fg:x="1935" fg:w="3"/><text x="47.2845%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="47.1074%" y="229" width="0.0243%" height="15" fill="rgb(228,201,54)" fg:x="1938" fg:w="1"/><text x="47.3574%" y="239.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="47.1317%" y="229" width="0.0729%" height="15" fill="rgb(222,22,37)" fg:x="1939" fg:w="3"/><text x="47.3817%" y="239.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`__rdl_realloc (1 samples, 0.02%)</title><rect x="47.7880%" y="181" width="0.0243%" height="15" fill="rgb(237,53,32)" fg:x="1966" fg:w="1"/><text x="48.0380%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.05%)</title><rect x="47.8367%" y="165" width="0.0486%" height="15" fill="rgb(233,25,53)" fg:x="1968" fg:w="2"/><text x="48.0867%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (1 samples, 0.02%)</title><rect x="47.8853%" y="149" width="0.0243%" height="15" fill="rgb(210,40,34)" fg:x="1970" fg:w="1"/><text x="48.1353%" y="159.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (20 samples, 0.49%)</title><rect x="47.5207%" y="213" width="0.4861%" height="15" fill="rgb(241,220,44)" fg:x="1955" fg:w="20"/><text x="47.7707%" y="223.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (9 samples, 0.22%)</title><rect x="47.7880%" y="197" width="0.2188%" height="15" fill="rgb(235,28,35)" fg:x="1966" fg:w="9"/><text x="48.0380%" y="207.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`alloc::raw_vec::finish_grow (8 samples, 0.19%)</title><rect x="47.8123%" y="181" width="0.1945%" height="15" fill="rgb(210,56,17)" fg:x="1967" fg:w="8"/><text x="48.0623%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (5 samples, 0.12%)</title><rect x="47.8853%" y="165" width="0.1215%" height="15" fill="rgb(224,130,29)" fg:x="1970" fg:w="5"/><text x="48.1353%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (4 samples, 0.10%)</title><rect x="47.9096%" y="149" width="0.0972%" height="15" fill="rgb(235,212,8)" fg:x="1971" fg:w="4"/><text x="48.1596%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (4 samples, 0.10%)</title><rect x="47.9096%" y="133" width="0.0972%" height="15" fill="rgb(223,33,50)" fg:x="1971" fg:w="4"/><text x="48.1596%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.07%)</title><rect x="47.9339%" y="117" width="0.0729%" height="15" fill="rgb(219,149,13)" fg:x="1972" fg:w="3"/><text x="48.1839%" y="127.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (78 samples, 1.90%)</title><rect x="48.0068%" y="213" width="1.8960%" height="15" fill="rgb(250,156,29)" fg:x="1975" fg:w="78"/><text x="48.2568%" y="223.50">b..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ff::fields::Field::sum_of_products (1 samples, 0.02%)</title><rect x="49.8785%" y="197" width="0.0243%" height="15" fill="rgb(216,193,19)" fg:x="2052" fg:w="1"/><text x="50.1285%" y="207.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (24 samples, 0.58%)</title><rect x="49.9028%" y="213" width="0.5834%" height="15" fill="rgb(216,135,14)" fg:x="2053" fg:w="24"/><text x="50.1528%" y="223.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (53 samples, 1.29%)</title><rect x="50.4861%" y="213" width="1.2883%" height="15" fill="rgb(241,47,5)" fg:x="2077" fg:w="53"/><text x="50.7361%" y="223.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (156 samples, 3.79%)</title><rect x="51.7744%" y="213" width="3.7919%" height="15" fill="rgb(233,42,35)" fg:x="2130" fg:w="156"/><text x="52.0244%" y="223.50">benc..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (39 samples, 0.95%)</title><rect x="55.5664%" y="213" width="0.9480%" height="15" fill="rgb(231,13,6)" fg:x="2286" fg:w="39"/><text x="55.8164%" y="223.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (424 samples, 10.31%)</title><rect x="47.1074%" y="245" width="10.3063%" height="15" fill="rgb(207,181,40)" fg:x="1938" fg:w="424"/><text x="47.3574%" y="255.50">bench_relu_real..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::windowed_mul (420 samples, 10.21%)</title><rect x="47.2047%" y="229" width="10.2090%" height="15" fill="rgb(254,173,49)" fg:x="1942" fg:w="420"/><text x="47.4547%" y="239.50">bench_relu_real..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_bn254::fields::fq::_::_&lt;impl ark_ff::fields::models::fp::montgomery_backend::MontConfig&lt;4_usize&gt; for ark_bn254::fields::fq::FqConfig&gt;::sum_of_products (37 samples, 0.90%)</title><rect x="56.5143%" y="213" width="0.8994%" height="15" fill="rgb(221,1,38)" fg:x="2325" fg:w="37"/><text x="56.7643%" y="223.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (4 samples, 0.10%)</title><rect x="57.4380%" y="213" width="0.0972%" height="15" fill="rgb(206,124,46)" fg:x="2363" fg:w="4"/><text x="57.6880%" y="223.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.12%)</title><rect x="57.4380%" y="229" width="0.1215%" height="15" fill="rgb(249,21,11)" fg:x="2363" fg:w="5"/><text x="57.6880%" y="239.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="57.5352%" y="213" width="0.0243%" height="15" fill="rgb(222,201,40)" fg:x="2367" fg:w="1"/><text x="57.7852%" y="223.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="57.5596%" y="229" width="0.0243%" height="15" fill="rgb(235,61,29)" fg:x="2368" fg:w="1"/><text x="57.8096%" y="239.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (9 samples, 0.22%)</title><rect x="57.4137%" y="245" width="0.2188%" height="15" fill="rgb(219,207,3)" fg:x="2362" fg:w="9"/><text x="57.6637%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (2 samples, 0.05%)</title><rect x="57.5839%" y="229" width="0.0486%" height="15" fill="rgb(222,56,46)" fg:x="2369" fg:w="2"/><text x="57.8339%" y="239.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (2 samples, 0.05%)</title><rect x="57.6325%" y="245" width="0.0486%" height="15" fill="rgb(239,76,54)" fg:x="2371" fg:w="2"/><text x="57.8825%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (11 samples, 0.27%)</title><rect x="57.6811%" y="245" width="0.2674%" height="15" fill="rgb(231,124,27)" fg:x="2373" fg:w="11"/><text x="57.9311%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (3 samples, 0.07%)</title><rect x="57.9485%" y="245" width="0.0729%" height="15" fill="rgb(249,195,6)" fg:x="2384" fg:w="3"/><text x="58.1985%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="58.0214%" y="245" width="0.0243%" height="15" fill="rgb(237,174,47)" fg:x="2387" fg:w="1"/><text x="58.2714%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="58.0943%" y="197" width="0.0729%" height="15" fill="rgb(206,201,31)" fg:x="2390" fg:w="3"/><text x="58.3443%" y="207.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (3 samples, 0.07%)</title><rect x="58.0943%" y="181" width="0.0729%" height="15" fill="rgb(231,57,52)" fg:x="2390" fg:w="3"/><text x="58.3443%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.15%)</title><rect x="58.0700%" y="229" width="0.1458%" height="15" fill="rgb(248,177,22)" fg:x="2389" fg:w="6"/><text x="58.3200%" y="239.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (6 samples, 0.15%)</title><rect x="58.0700%" y="213" width="0.1458%" height="15" fill="rgb(215,211,37)" fg:x="2389" fg:w="6"/><text x="58.3200%" y="223.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (2 samples, 0.05%)</title><rect x="58.1672%" y="197" width="0.0486%" height="15" fill="rgb(241,128,51)" fg:x="2393" fg:w="2"/><text x="58.4172%" y="207.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (2 samples, 0.05%)</title><rect x="58.2158%" y="229" width="0.0486%" height="15" fill="rgb(227,165,31)" fg:x="2395" fg:w="2"/><text x="58.4658%" y="239.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (1 samples, 0.02%)</title><rect x="58.2645%" y="229" width="0.0243%" height="15" fill="rgb(228,167,24)" fg:x="2397" fg:w="1"/><text x="58.5145%" y="239.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (7 samples, 0.17%)</title><rect x="58.2888%" y="229" width="0.1702%" height="15" fill="rgb(228,143,12)" fg:x="2398" fg:w="7"/><text x="58.5388%" y="239.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="58.4589%" y="229" width="0.0243%" height="15" fill="rgb(249,149,8)" fg:x="2405" fg:w="1"/><text x="58.7089%" y="239.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (1 samples, 0.02%)</title><rect x="58.4832%" y="229" width="0.0243%" height="15" fill="rgb(243,35,44)" fg:x="2406" fg:w="1"/><text x="58.7332%" y="239.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::with_num_scalars_and_scalar_size (24 samples, 0.58%)</title><rect x="58.0457%" y="245" width="0.5834%" height="15" fill="rgb(246,89,9)" fg:x="2388" fg:w="24"/><text x="58.2957%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_bn254::fields::fq::_::_&lt;impl ark_ff::fields::models::fp::montgomery_backend::MontConfig&lt;4_usize&gt; for ark_bn254::fields::fq::FqConfig&gt;::sum_of_products (5 samples, 0.12%)</title><rect x="58.5075%" y="229" width="0.1215%" height="15" fill="rgb(233,213,13)" fg:x="2407" fg:w="5"/><text x="58.7575%" y="239.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ec::scalar_mul::glv::GLVConfig::glv_mul_projective (1 samples, 0.02%)</title><rect x="58.6291%" y="245" width="0.0243%" height="15" fill="rgb(233,141,41)" fg:x="2412" fg:w="1"/><text x="58.8791%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ff::fields::serial_batch_inversion_and_mul (1 samples, 0.02%)</title><rect x="58.6534%" y="245" width="0.0243%" height="15" fill="rgb(239,167,4)" fg:x="2413" fg:w="1"/><text x="58.9034%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="58.6534%" y="229" width="0.0243%" height="15" fill="rgb(209,217,16)" fg:x="2413" fg:w="1"/><text x="58.9034%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="58.6534%" y="213" width="0.0243%" height="15" fill="rgb(219,88,35)" fg:x="2413" fg:w="1"/><text x="58.9034%" y="223.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`pcs::utils::eq_extension (1 samples, 0.02%)</title><rect x="58.6777%" y="245" width="0.0243%" height="15" fill="rgb(220,193,23)" fg:x="2414" fg:w="1"/><text x="58.9277%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;pcs::multilinear_kzg::data_structures::MultilinearUniversalParams&lt;E&gt; as pcs::StructuredReferenceString&lt;E&gt;&gt;::gen_srs (478 samples, 11.62%)</title><rect x="47.1074%" y="261" width="11.6189%" height="15" fill="rgb(230,90,52)" fg:x="1938" fg:w="478"/><text x="47.3574%" y="271.50">bench_relu_real_d..</text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="58.7020%" y="245" width="0.0243%" height="15" fill="rgb(252,106,19)" fg:x="2415" fg:w="1"/><text x="58.9520%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="58.7020%" y="229" width="0.0243%" height="15" fill="rgb(206,74,20)" fg:x="2415" fg:w="1"/><text x="58.9520%" y="239.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`alloc::vec::in_place_collect::from_iter_in_place (8 samples, 0.19%)</title><rect x="58.7263%" y="261" width="0.1945%" height="15" fill="rgb(230,138,44)" fg:x="2416" fg:w="8"/><text x="58.9763%" y="271.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`zkconv::relu::prover::Prover::process_logup (633 samples, 15.39%)</title><rect x="43.5586%" y="277" width="15.3865%" height="15" fill="rgb(235,182,43)" fg:x="1792" fg:w="633"/><text x="43.8086%" y="287.50">bench_relu_real_data-ca6..</text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="58.9208%" y="261" width="0.0243%" height="15" fill="rgb(242,16,51)" fg:x="2424" fg:w="1"/><text x="59.1708%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="58.9208%" y="245" width="0.0243%" height="15" fill="rgb(248,9,4)" fg:x="2424" fg:w="1"/><text x="59.1708%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.10%)</title><rect x="58.9451%" y="261" width="0.0972%" height="15" fill="rgb(210,31,22)" fg:x="2425" fg:w="4"/><text x="59.1951%" y="271.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="58.9694%" y="245" width="0.0729%" height="15" fill="rgb(239,54,39)" fg:x="2426" fg:w="3"/><text x="59.2194%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::add_assign (1 samples, 0.02%)</title><rect x="59.0423%" y="261" width="0.0243%" height="15" fill="rgb(230,99,41)" fg:x="2429" fg:w="1"/><text x="59.2923%" y="271.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (62 samples, 1.51%)</title><rect x="59.0666%" y="261" width="1.5070%" height="15" fill="rgb(253,106,12)" fg:x="2430" fg:w="62"/><text x="59.3166%" y="271.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (11 samples, 0.27%)</title><rect x="60.5737%" y="261" width="0.2674%" height="15" fill="rgb(213,46,41)" fg:x="2492" fg:w="11"/><text x="60.8237%" y="271.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::prime::PrimeField&gt;::into_bigint (1 samples, 0.02%)</title><rect x="60.8653%" y="213" width="0.0243%" height="15" fill="rgb(215,133,35)" fg:x="2504" fg:w="1"/><text x="61.1153%" y="223.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (3 samples, 0.07%)</title><rect x="61.8862%" y="181" width="0.0729%" height="15" fill="rgb(213,28,5)" fg:x="2546" fg:w="3"/><text x="62.1362%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::SubAssign&lt;T&gt;&gt;::sub_assign (2 samples, 0.05%)</title><rect x="61.9592%" y="181" width="0.0486%" height="15" fill="rgb(215,77,49)" fg:x="2549" fg:w="2"/><text x="62.2092%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (21 samples, 0.51%)</title><rect x="62.8342%" y="165" width="0.5105%" height="15" fill="rgb(248,100,22)" fg:x="2585" fg:w="21"/><text x="63.0842%" y="175.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (115 samples, 2.80%)</title><rect x="63.3447%" y="165" width="2.7953%" height="15" fill="rgb(208,67,9)" fg:x="2606" fg:w="115"/><text x="63.5947%" y="175.50">be..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::SubAssign&lt;T&gt;&gt;::sub_assign (94 samples, 2.28%)</title><rect x="66.1400%" y="165" width="2.2849%" height="15" fill="rgb(219,133,21)" fg:x="2721" fg:w="94"/><text x="66.3900%" y="175.50">b..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (61 samples, 1.48%)</title><rect x="68.4249%" y="165" width="1.4827%" height="15" fill="rgb(246,46,29)" fg:x="2815" fg:w="61"/><text x="68.6749%" y="175.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (155 samples, 3.77%)</title><rect x="69.9076%" y="165" width="3.7676%" height="15" fill="rgb(246,185,52)" fg:x="2876" fg:w="155"/><text x="70.1576%" y="175.50">benc..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (456 samples, 11.08%)</title><rect x="73.6753%" y="165" width="11.0841%" height="15" fill="rgb(252,136,11)" fg:x="3031" fg:w="456"/><text x="73.9253%" y="175.50">bench_relu_real_..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (7 samples, 0.17%)</title><rect x="84.7594%" y="165" width="0.1702%" height="15" fill="rgb(219,138,53)" fg:x="3487" fg:w="7"/><text x="85.0094%" y="175.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (107 samples, 2.60%)</title><rect x="84.9295%" y="165" width="2.6009%" height="15" fill="rgb(211,51,23)" fg:x="3494" fg:w="107"/><text x="85.1795%" y="175.50">be..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,162 samples, 28.25%)</title><rect x="62.0078%" y="181" width="28.2450%" height="15" fill="rgb(247,221,28)" fg:x="2551" fg:w="1162"/><text x="62.2578%" y="191.50">bench_relu_real_data-ca68ff78096a3c87`&lt;core::..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_bn254::fields::fq::_::_&lt;impl ark_ff::fields::models::fp::montgomery_backend::MontConfig&lt;4_usize&gt; for ark_bn254::fields::fq::FqConfig&gt;::sum_of_products (112 samples, 2.72%)</title><rect x="87.5304%" y="165" width="2.7224%" height="15" fill="rgb(251,222,45)" fg:x="3601" fg:w="112"/><text x="87.7804%" y="175.50">be..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,230 samples, 29.90%)</title><rect x="60.8896%" y="197" width="29.8979%" height="15" fill="rgb(217,162,53)" fg:x="2505" fg:w="1230"/><text x="61.1396%" y="207.50">bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::ve..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (22 samples, 0.53%)</title><rect x="90.2528%" y="181" width="0.5348%" height="15" fill="rgb(229,93,14)" fg:x="3713" fg:w="22"/><text x="90.5028%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (1 samples, 0.02%)</title><rect x="90.7876%" y="197" width="0.0243%" height="15" fill="rgb(209,67,49)" fg:x="3735" fg:w="1"/><text x="91.0376%" y="207.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="90.8119%" y="197" width="0.0243%" height="15" fill="rgb(213,87,29)" fg:x="3736" fg:w="1"/><text x="91.0619%" y="207.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,236 samples, 30.04%)</title><rect x="60.8653%" y="245" width="30.0438%" height="15" fill="rgb(205,151,52)" fg:x="2504" fg:w="1236"/><text x="61.1153%" y="255.50">bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::ve..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,236 samples, 30.04%)</title><rect x="60.8653%" y="229" width="30.0438%" height="15" fill="rgb(253,215,39)" fg:x="2504" fg:w="1236"/><text x="61.1153%" y="239.50">bench_relu_real_data-ca68ff78096a3c87`&lt;core::ite..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ec::scalar_mul::variable_base::VariableBaseMSM::msm_unchecked (1,235 samples, 30.02%)</title><rect x="60.8896%" y="213" width="30.0194%" height="15" fill="rgb(221,220,41)" fg:x="2505" fg:w="1235"/><text x="61.1396%" y="223.50">bench_relu_real_data-ca68ff78096a3c87`ark_ec::sc..</text></g><g><title>libsystem_malloc.dylib`free_medium (3 samples, 0.07%)</title><rect x="90.8362%" y="197" width="0.0729%" height="15" fill="rgb(218,133,21)" fg:x="3737" fg:w="3"/><text x="91.0862%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`madvise (3 samples, 0.07%)</title><rect x="90.8362%" y="181" width="0.0729%" height="15" fill="rgb(221,193,43)" fg:x="3737" fg:w="3"/><text x="91.0862%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;pcs::hyrax_kzg::hyrax_kzg_1::HyraxKzgPCS1&lt;E&gt; as pcs::PolynomialCommitmentScheme&lt;E&gt;&gt;::commit (1,238 samples, 30.09%)</title><rect x="60.8410%" y="261" width="30.0924%" height="15" fill="rgb(240,128,52)" fg:x="2503" fg:w="1238"/><text x="61.0910%" y="271.50">bench_relu_real_data-ca68ff78096a3c87`&lt;pcs::hyrax..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="90.9091%" y="245" width="0.0243%" height="15" fill="rgb(253,114,12)" fg:x="3740" fg:w="1"/><text x="91.1591%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (8 samples, 0.19%)</title><rect x="90.9334%" y="245" width="0.1945%" height="15" fill="rgb(215,223,47)" fg:x="3741" fg:w="8"/><text x="91.1834%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (1 samples, 0.02%)</title><rect x="91.1279%" y="245" width="0.0243%" height="15" fill="rgb(248,225,23)" fg:x="3749" fg:w="1"/><text x="91.3779%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`arithmetic::multilinear_poly::bind_vars (3 samples, 0.07%)</title><rect x="91.1522%" y="245" width="0.0729%" height="15" fill="rgb(250,108,0)" fg:x="3750" fg:w="3"/><text x="91.4022%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`arithmetic::multilinear_poly::bind_vars (1 samples, 0.02%)</title><rect x="91.2494%" y="229" width="0.0243%" height="15" fill="rgb(228,208,7)" fg:x="3754" fg:w="1"/><text x="91.4994%" y="239.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (3 samples, 0.07%)</title><rect x="91.3709%" y="197" width="0.0729%" height="15" fill="rgb(244,45,10)" fg:x="3759" fg:w="3"/><text x="91.6209%" y="207.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::SubAssign&lt;T&gt;&gt;::sub_assign (1 samples, 0.02%)</title><rect x="91.4439%" y="197" width="0.0243%" height="15" fill="rgb(207,125,25)" fg:x="3762" fg:w="1"/><text x="91.6939%" y="207.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (9 samples, 0.22%)</title><rect x="91.6383%" y="181" width="0.2188%" height="15" fill="rgb(210,195,18)" fg:x="3770" fg:w="9"/><text x="91.8883%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (20 samples, 0.49%)</title><rect x="91.8571%" y="181" width="0.4861%" height="15" fill="rgb(249,80,12)" fg:x="3779" fg:w="20"/><text x="92.1071%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::SubAssign&lt;T&gt;&gt;::sub_assign (23 samples, 0.56%)</title><rect x="92.3432%" y="181" width="0.5591%" height="15" fill="rgb(221,65,9)" fg:x="3799" fg:w="23"/><text x="92.5932%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (12 samples, 0.29%)</title><rect x="92.9023%" y="181" width="0.2917%" height="15" fill="rgb(235,49,36)" fg:x="3822" fg:w="12"/><text x="93.1523%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (24 samples, 0.58%)</title><rect x="93.1940%" y="181" width="0.5834%" height="15" fill="rgb(225,32,20)" fg:x="3834" fg:w="24"/><text x="93.4440%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (130 samples, 3.16%)</title><rect x="93.7773%" y="181" width="3.1599%" height="15" fill="rgb(215,141,46)" fg:x="3858" fg:w="130"/><text x="94.0273%" y="191.50">ben..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (2 samples, 0.05%)</title><rect x="96.9373%" y="181" width="0.0486%" height="15" fill="rgb(250,160,47)" fg:x="3988" fg:w="2"/><text x="97.1873%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (21 samples, 0.51%)</title><rect x="96.9859%" y="181" width="0.5105%" height="15" fill="rgb(216,222,40)" fg:x="3990" fg:w="21"/><text x="97.2359%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (270 samples, 6.56%)</title><rect x="91.4682%" y="197" width="6.5630%" height="15" fill="rgb(234,217,39)" fg:x="3763" fg:w="270"/><text x="91.7182%" y="207.50">bench_rel..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_bn254::fields::fq::_::_&lt;impl ark_ff::fields::models::fp::montgomery_backend::MontConfig&lt;4_usize&gt; for ark_bn254::fields::fq::FqConfig&gt;::sum_of_products (22 samples, 0.53%)</title><rect x="97.4964%" y="181" width="0.5348%" height="15" fill="rgb(207,178,40)" fg:x="4011" fg:w="22"/><text x="97.7464%" y="191.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (279 samples, 6.78%)</title><rect x="91.2737%" y="213" width="6.7817%" height="15" fill="rgb(221,136,13)" fg:x="3755" fg:w="279"/><text x="91.5237%" y="223.50">bench_rel..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="98.0311%" y="197" width="0.0243%" height="15" fill="rgb(249,199,10)" fg:x="4033" fg:w="1"/><text x="98.2811%" y="207.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`pcs::multilinear_kzg::open_internal (282 samples, 6.85%)</title><rect x="91.2251%" y="245" width="6.8546%" height="15" fill="rgb(249,222,13)" fg:x="3753" fg:w="282"/><text x="91.4751%" y="255.50">bench_rel..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ec::scalar_mul::variable_base::VariableBaseMSM::msm_unchecked (280 samples, 6.81%)</title><rect x="91.2737%" y="229" width="6.8060%" height="15" fill="rgb(244,185,38)" fg:x="3755" fg:w="280"/><text x="91.5237%" y="239.50">bench_rel..</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (1 samples, 0.02%)</title><rect x="98.0554%" y="213" width="0.0243%" height="15" fill="rgb(236,202,9)" fg:x="4034" fg:w="1"/><text x="98.3054%" y="223.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;pcs::hyrax_kzg::hyrax_kzg_1::HyraxKzgPCS1&lt;E&gt; as pcs::PolynomialCommitmentScheme&lt;E&gt;&gt;::open (295 samples, 7.17%)</title><rect x="90.9334%" y="261" width="7.1706%" height="15" fill="rgb(250,229,37)" fg:x="3741" fg:w="295"/><text x="91.1834%" y="271.50">bench_relu..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="98.0797%" y="245" width="0.0243%" height="15" fill="rgb(206,174,23)" fg:x="4035" fg:w="1"/><text x="98.3297%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`arithmetic::multilinear_poly::new_eq (7 samples, 0.17%)</title><rect x="98.1040%" y="261" width="0.1702%" height="15" fill="rgb(211,33,43)" fg:x="4036" fg:w="7"/><text x="98.3540%" y="271.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (7 samples, 0.17%)</title><rect x="98.1040%" y="245" width="0.1702%" height="15" fill="rgb(245,58,50)" fg:x="4036" fg:w="7"/><text x="98.3540%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ff::fields::models::fp::montgomery_backend::MontConfig::from_bigint (1 samples, 0.02%)</title><rect x="98.2742%" y="261" width="0.0243%" height="15" fill="rgb(244,68,36)" fg:x="4043" fg:w="1"/><text x="98.5242%" y="271.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.05%)</title><rect x="98.2985%" y="261" width="0.0486%" height="15" fill="rgb(232,229,15)" fg:x="4044" fg:w="2"/><text x="98.5485%" y="271.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="98.3228%" y="245" width="0.0243%" height="15" fill="rgb(254,30,23)" fg:x="4045" fg:w="1"/><text x="98.5728%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`DYLD-STUB$$malloc (1 samples, 0.02%)</title><rect x="98.9548%" y="229" width="0.0243%" height="15" fill="rgb(235,160,14)" fg:x="4071" fg:w="1"/><text x="99.2048%" y="239.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`alloc::raw_vec::finish_grow (3 samples, 0.07%)</title><rect x="98.9791%" y="229" width="0.0729%" height="15" fill="rgb(212,155,44)" fg:x="4072" fg:w="3"/><text x="99.2291%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.07%)</title><rect x="99.0520%" y="229" width="0.0729%" height="15" fill="rgb(226,2,50)" fg:x="4075" fg:w="3"/><text x="99.3020%" y="239.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (14 samples, 0.34%)</title><rect x="98.9305%" y="245" width="0.3403%" height="15" fill="rgb(234,177,6)" fg:x="4070" fg:w="14"/><text x="99.1805%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.15%)</title><rect x="99.1249%" y="229" width="0.1458%" height="15" fill="rgb(217,24,9)" fg:x="4078" fg:w="6"/><text x="99.3749%" y="239.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`utils::get_and_append_challenge (1 samples, 0.02%)</title><rect x="99.2708%" y="245" width="0.0243%" height="15" fill="rgb(220,13,46)" fg:x="4084" fg:w="1"/><text x="99.5208%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`ark_ff::fields::models::fp::montgomery_backend::MontConfig::from_bigint (1 samples, 0.02%)</title><rect x="99.2708%" y="229" width="0.0243%" height="15" fill="rgb(239,221,27)" fg:x="4084" fg:w="1"/><text x="99.5208%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10 samples, 0.24%)</title><rect x="99.2951%" y="245" width="0.2431%" height="15" fill="rgb(222,198,25)" fg:x="4085" fg:w="10"/><text x="99.5451%" y="255.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.02%)</title><rect x="99.5382%" y="245" width="0.0243%" height="15" fill="rgb(211,99,13)" fg:x="4095" fg:w="1"/><text x="99.7882%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`poly_iop::sum_check::SumCheck::prove (51 samples, 1.24%)</title><rect x="98.3471%" y="261" width="1.2397%" height="15" fill="rgb(232,111,31)" fg:x="4046" fg:w="51"/><text x="98.5971%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="99.5625%" y="245" width="0.0243%" height="15" fill="rgb(245,82,37)" fg:x="4096" fg:w="1"/><text x="99.8125%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="99.5868%" y="261" width="0.0243%" height="15" fill="rgb(227,149,46)" fg:x="4097" fg:w="1"/><text x="99.8368%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.24%)</title><rect x="99.6111%" y="261" width="0.2431%" height="15" fill="rgb(218,36,50)" fg:x="4098" fg:w="10"/><text x="99.8611%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="99.8542%" y="261" width="0.0243%" height="15" fill="rgb(226,80,48)" fg:x="4108" fg:w="1"/><text x="100.1042%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="99.8542%" y="245" width="0.0243%" height="15" fill="rgb(238,224,15)" fg:x="4108" fg:w="1"/><text x="100.1042%" y="255.50"></text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`zkconv::relu::prover::Prover::prove_logup (1,685 samples, 40.96%)</title><rect x="58.9451%" y="277" width="40.9577%" height="15" fill="rgb(241,136,10)" fg:x="2425" fg:w="1685"/><text x="59.1951%" y="287.50">bench_relu_real_data-ca68ff78096a3c87`zkconv::relu::prover::Prover:..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="99.8785%" y="261" width="0.0243%" height="15" fill="rgb(208,32,45)" fg:x="4109" fg:w="1"/><text x="100.1285%" y="271.50"></text></g><g><title>dyld`start (4,112 samples, 99.95%)</title><rect x="0.0000%" y="373" width="99.9514%" height="15" fill="rgb(207,135,9)" fg:x="0" fg:w="4112"/><text x="0.2500%" y="383.50">dyld`start</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`main (4,112 samples, 99.95%)</title><rect x="0.0000%" y="357" width="99.9514%" height="15" fill="rgb(206,86,44)" fg:x="0" fg:w="4112"/><text x="0.2500%" y="367.50">bench_relu_real_data-ca68ff78096a3c87`main</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`std::rt::lang_start_internal (4,112 samples, 99.95%)</title><rect x="0.0000%" y="341" width="99.9514%" height="15" fill="rgb(245,177,15)" fg:x="0" fg:w="4112"/><text x="0.2500%" y="351.50">bench_relu_real_data-ca68ff78096a3c87`std::rt::lang_start_internal</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`std::rt::lang_start::_{{closure}} (4,112 samples, 99.95%)</title><rect x="0.0000%" y="325" width="99.9514%" height="15" fill="rgb(206,64,50)" fg:x="0" fg:w="4112"/><text x="0.2500%" y="335.50">bench_relu_real_data-ca68ff78096a3c87`std::rt::lang_start::_{{closure}}</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`std::sys::backtrace::__rust_begin_short_backtrace (4,112 samples, 99.95%)</title><rect x="0.0000%" y="309" width="99.9514%" height="15" fill="rgb(234,36,40)" fg:x="0" fg:w="4112"/><text x="0.2500%" y="319.50">bench_relu_real_data-ca68ff78096a3c87`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>bench_relu_real_data-ca68ff78096a3c87`bench_relu_real_data::main (4,112 samples, 99.95%)</title><rect x="0.0000%" y="293" width="99.9514%" height="15" fill="rgb(213,64,8)" fg:x="0" fg:w="4112"/><text x="0.2500%" y="303.50">bench_relu_real_data-ca68ff78096a3c87`bench_relu_real_data::main</text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.05%)</title><rect x="99.9028%" y="277" width="0.0486%" height="15" fill="rgb(210,75,36)" fg:x="4110" fg:w="2"/><text x="100.1528%" y="287.50"></text></g><g><title>all (4,114 samples, 100%)</title><rect x="0.0000%" y="389" width="100.0000%" height="15" fill="rgb(229,88,21)" fg:x="0" fg:w="4114"/><text x="0.2500%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__exit (2 samples, 0.05%)</title><rect x="99.9514%" y="373" width="0.0486%" height="15" fill="rgb(252,204,47)" fg:x="4112" fg:w="2"/><text x="100.2014%" y="383.50"></text></g></svg></svg>