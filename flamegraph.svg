<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="406" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="389.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="389.00"> </text><svg id="frames" x="10" width="1180" total_samples="4578"><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::from_bigint (2 samples, 0.04%)</title><rect x="0.0000%" y="261" width="0.0437%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="271.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (6 samples, 0.13%)</title><rect x="0.0874%" y="245" width="0.1311%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="6"/><text x="0.3374%" y="255.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`std::sys::pal::unix::process::process_common::Command::setup_io (1 samples, 0.02%)</title><rect x="0.2184%" y="69" width="0.0218%" height="15" fill="rgb(221,193,54)" fg:x="10" fg:w="1"/><text x="0.4684%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`std::sys::pal::unix::process::process_common::Stdio::to_child_stdio (1 samples, 0.02%)</title><rect x="0.2184%" y="53" width="0.0218%" height="15" fill="rgb(248,212,6)" fg:x="10" fg:w="1"/><text x="0.4684%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`__open (1 samples, 0.02%)</title><rect x="0.2184%" y="37" width="0.0218%" height="15" fill="rgb(208,68,35)" fg:x="10" fg:w="1"/><text x="0.4684%" y="47.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;criterion::Criterion as core::default::Default&gt;::default (2 samples, 0.04%)</title><rect x="0.2184%" y="245" width="0.0437%" height="15" fill="rgb(232,128,0)" fg:x="10" fg:w="2"/><text x="0.4684%" y="255.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`once_cell::imp::OnceCell&lt;T&gt;::initialize (2 samples, 0.04%)</title><rect x="0.2184%" y="229" width="0.0437%" height="15" fill="rgb(207,160,47)" fg:x="10" fg:w="2"/><text x="0.4684%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`once_cell::imp::initialize_or_wait (2 samples, 0.04%)</title><rect x="0.2184%" y="213" width="0.0437%" height="15" fill="rgb(228,23,34)" fg:x="10" fg:w="2"/><text x="0.4684%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (2 samples, 0.04%)</title><rect x="0.2184%" y="197" width="0.0437%" height="15" fill="rgb(218,30,26)" fg:x="10" fg:w="2"/><text x="0.4684%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`core::ops::function::FnOnce::call_once (2 samples, 0.04%)</title><rect x="0.2184%" y="181" width="0.0437%" height="15" fill="rgb(220,122,19)" fg:x="10" fg:w="2"/><text x="0.4684%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`once_cell::imp::OnceCell&lt;T&gt;::initialize (2 samples, 0.04%)</title><rect x="0.2184%" y="165" width="0.0437%" height="15" fill="rgb(250,228,42)" fg:x="10" fg:w="2"/><text x="0.4684%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`once_cell::imp::initialize_or_wait (2 samples, 0.04%)</title><rect x="0.2184%" y="149" width="0.0437%" height="15" fill="rgb(240,193,28)" fg:x="10" fg:w="2"/><text x="0.4684%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (2 samples, 0.04%)</title><rect x="0.2184%" y="133" width="0.0437%" height="15" fill="rgb(216,20,37)" fg:x="10" fg:w="2"/><text x="0.4684%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`criterion_plot::version (2 samples, 0.04%)</title><rect x="0.2184%" y="117" width="0.0437%" height="15" fill="rgb(206,188,39)" fg:x="10" fg:w="2"/><text x="0.4684%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`std::process::Command::output (2 samples, 0.04%)</title><rect x="0.2184%" y="101" width="0.0437%" height="15" fill="rgb(217,207,13)" fg:x="10" fg:w="2"/><text x="0.4684%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`std::sys::pal::unix::process::process_inner::_&lt;impl std::sys::pal::unix::process::process_common::Command&gt;::spawn (2 samples, 0.04%)</title><rect x="0.2184%" y="85" width="0.0437%" height="15" fill="rgb(231,73,38)" fg:x="10" fg:w="2"/><text x="0.4684%" y="95.50"></text></g><g><title>libsystem_c.dylib`posix_spawnp (1 samples, 0.02%)</title><rect x="0.2403%" y="69" width="0.0218%" height="15" fill="rgb(225,20,46)" fg:x="11" fg:w="1"/><text x="0.4903%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`__posix_spawn (1 samples, 0.02%)</title><rect x="0.2403%" y="53" width="0.0218%" height="15" fill="rgb(210,31,41)" fg:x="11" fg:w="1"/><text x="0.4903%" y="63.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`core::ptr::drop_in_place&lt;logup::LogupProof&lt;ark_ec::models::bn::Bn&lt;ark_bn254::curves::Config&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="0.2621%" y="245" width="0.0218%" height="15" fill="rgb(221,200,47)" fg:x="12" fg:w="1"/><text x="0.5121%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_small (1 samples, 0.02%)</title><rect x="0.2621%" y="229" width="0.0218%" height="15" fill="rgb(226,26,5)" fg:x="12" fg:w="1"/><text x="0.5121%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (5 samples, 0.11%)</title><rect x="0.2840%" y="181" width="0.1092%" height="15" fill="rgb(249,33,26)" fg:x="13" fg:w="5"/><text x="0.5340%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (2 samples, 0.04%)</title><rect x="0.3932%" y="165" width="0.0437%" height="15" fill="rgb(235,183,28)" fg:x="18" fg:w="2"/><text x="0.6432%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="0.4369%" y="149" width="0.0655%" height="15" fill="rgb(221,5,38)" fg:x="20" fg:w="3"/><text x="0.6869%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="0.4369%" y="133" width="0.0655%" height="15" fill="rgb(247,18,42)" fg:x="20" fg:w="3"/><text x="0.6869%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="0.4806%" y="117" width="0.0218%" height="15" fill="rgb(241,131,45)" fg:x="22" fg:w="1"/><text x="0.7306%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::add_assign (2 samples, 0.04%)</title><rect x="0.5024%" y="149" width="0.0437%" height="15" fill="rgb(249,31,29)" fg:x="23" fg:w="2"/><text x="0.7524%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (45 samples, 0.98%)</title><rect x="0.5461%" y="149" width="0.9830%" height="15" fill="rgb(225,111,53)" fg:x="25" fg:w="45"/><text x="0.7961%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (12 samples, 0.26%)</title><rect x="1.5291%" y="149" width="0.2621%" height="15" fill="rgb(238,160,17)" fg:x="70" fg:w="12"/><text x="1.7791%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::prime::PrimeField&gt;::into_bigint (2 samples, 0.04%)</title><rect x="1.7912%" y="101" width="0.0437%" height="15" fill="rgb(214,148,48)" fg:x="82" fg:w="2"/><text x="2.0412%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (4 samples, 0.09%)</title><rect x="2.4028%" y="53" width="0.0874%" height="15" fill="rgb(232,36,49)" fg:x="110" fg:w="4"/><text x="2.6528%" y="63.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (1 samples, 0.02%)</title><rect x="2.4902%" y="53" width="0.0218%" height="15" fill="rgb(209,103,24)" fg:x="114" fg:w="1"/><text x="2.7402%" y="63.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (24 samples, 0.52%)</title><rect x="2.9926%" y="37" width="0.5242%" height="15" fill="rgb(229,88,8)" fg:x="137" fg:w="24"/><text x="3.2426%" y="47.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (80 samples, 1.75%)</title><rect x="3.5168%" y="37" width="1.7475%" height="15" fill="rgb(213,181,19)" fg:x="161" fg:w="80"/><text x="3.7668%" y="47.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::SubAssign&lt;T&gt;&gt;::sub_assign (79 samples, 1.73%)</title><rect x="5.2643%" y="37" width="1.7256%" height="15" fill="rgb(254,191,54)" fg:x="241" fg:w="79"/><text x="5.5143%" y="47.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (58 samples, 1.27%)</title><rect x="6.9900%" y="37" width="1.2669%" height="15" fill="rgb(241,83,37)" fg:x="320" fg:w="58"/><text x="7.2400%" y="47.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (154 samples, 3.36%)</title><rect x="8.2569%" y="37" width="3.3639%" height="15" fill="rgb(233,36,39)" fg:x="378" fg:w="154"/><text x="8.5069%" y="47.50">ben..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (457 samples, 9.98%)</title><rect x="11.6208%" y="37" width="9.9825%" height="15" fill="rgb(226,3,54)" fg:x="532" fg:w="457"/><text x="11.8708%" y="47.50">bench_maxpool-..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (13 samples, 0.28%)</title><rect x="21.6033%" y="37" width="0.2840%" height="15" fill="rgb(245,192,40)" fg:x="989" fg:w="13"/><text x="21.8533%" y="47.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (110 samples, 2.40%)</title><rect x="21.8873%" y="37" width="2.4028%" height="15" fill="rgb(238,167,29)" fg:x="1002" fg:w="110"/><text x="22.1373%" y="47.50">be..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,110 samples, 24.25%)</title><rect x="2.5120%" y="53" width="24.2464%" height="15" fill="rgb(232,182,51)" fg:x="115" fg:w="1110"/><text x="2.7620%" y="63.50">bench_maxpool-5e935bdab8467421`&lt;core::i..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (113 samples, 2.47%)</title><rect x="24.2901%" y="37" width="2.4683%" height="15" fill="rgb(231,60,39)" fg:x="1112" fg:w="113"/><text x="24.5401%" y="47.50">be..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,155 samples, 25.23%)</title><rect x="1.8567%" y="69" width="25.2294%" height="15" fill="rgb(208,69,12)" fg:x="85" fg:w="1155"/><text x="2.1067%" y="79.50">bench_maxpool-5e935bdab8467421`&lt;alloc::v..</text></g><g><title>bench_maxpool-5e935bdab8467421`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (15 samples, 0.33%)</title><rect x="26.7584%" y="53" width="0.3277%" height="15" fill="rgb(235,93,37)" fg:x="1225" fg:w="15"/><text x="27.0084%" y="63.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ff::fields::AdditiveGroup&gt;::double_in_place (2 samples, 0.04%)</title><rect x="27.0861%" y="69" width="0.0437%" height="15" fill="rgb(213,116,39)" fg:x="1240" fg:w="2"/><text x="27.3361%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (1 samples, 0.02%)</title><rect x="27.1298%" y="69" width="0.0218%" height="15" fill="rgb(222,207,29)" fg:x="1242" fg:w="1"/><text x="27.3798%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="27.1516%" y="69" width="0.0218%" height="15" fill="rgb(206,96,30)" fg:x="1243" fg:w="1"/><text x="27.4016%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::VariableBaseMSM::msm_unchecked (1,161 samples, 25.36%)</title><rect x="1.8349%" y="101" width="25.3604%" height="15" fill="rgb(218,138,4)" fg:x="84" fg:w="1161"/><text x="2.0849%" y="111.50">bench_maxpool-5e935bdab8467421`ark_ec::s..</text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::msm_bigint_wnaf (1,160 samples, 25.34%)</title><rect x="1.8567%" y="85" width="25.3386%" height="15" fill="rgb(250,191,14)" fg:x="85" fg:w="1160"/><text x="2.1067%" y="95.50">bench_maxpool-5e935bdab8467421`ark_ec::s..</text></g><g><title>bench_maxpool-5e935bdab8467421`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="27.1734%" y="69" width="0.0218%" height="15" fill="rgb(239,60,40)" fg:x="1244" fg:w="1"/><text x="27.4234%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,164 samples, 25.43%)</title><rect x="1.7912%" y="133" width="25.4260%" height="15" fill="rgb(206,27,48)" fg:x="82" fg:w="1164"/><text x="2.0412%" y="143.50">bench_maxpool-5e935bdab8467421`&lt;alloc::ve..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,164 samples, 25.43%)</title><rect x="1.7912%" y="117" width="25.4260%" height="15" fill="rgb(225,35,8)" fg:x="82" fg:w="1164"/><text x="2.0412%" y="127.50">bench_maxpool-5e935bdab8467421`&lt;core::ite..</text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="27.1953%" y="101" width="0.0218%" height="15" fill="rgb(250,213,24)" fg:x="1245" fg:w="1"/><text x="27.4453%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="27.1953%" y="85" width="0.0218%" height="15" fill="rgb(247,123,22)" fg:x="1245" fg:w="1"/><text x="27.4453%" y="95.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;pcs::hyrax_kzg::hyrax_kzg_1::HyraxKzgPCS1&lt;E&gt; as pcs::PolynomialCommitmentScheme&lt;E&gt;&gt;::commit (1,166 samples, 25.47%)</title><rect x="1.7912%" y="149" width="25.4696%" height="15" fill="rgb(231,138,38)" fg:x="82" fg:w="1166"/><text x="2.0412%" y="159.50">bench_maxpool-5e935bdab8467421`&lt;pcs::hyra..</text></g><g><title>bench_maxpool-5e935bdab8467421`pcs::utils::vector_to_matrix (2 samples, 0.04%)</title><rect x="27.2171%" y="133" width="0.0437%" height="15" fill="rgb(231,145,46)" fg:x="1246" fg:w="2"/><text x="27.4671%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (8 samples, 0.17%)</title><rect x="27.2827%" y="133" width="0.1747%" height="15" fill="rgb(251,118,11)" fg:x="1249" fg:w="8"/><text x="27.5327%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (1 samples, 0.02%)</title><rect x="27.4574%" y="133" width="0.0218%" height="15" fill="rgb(217,147,25)" fg:x="1257" fg:w="1"/><text x="27.7074%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`arithmetic::multilinear_poly::bind_vars (2 samples, 0.04%)</title><rect x="27.4792%" y="133" width="0.0437%" height="15" fill="rgb(247,81,37)" fg:x="1258" fg:w="2"/><text x="27.7292%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (1 samples, 0.02%)</title><rect x="27.5885%" y="85" width="0.0218%" height="15" fill="rgb(209,12,38)" fg:x="1263" fg:w="1"/><text x="27.8385%" y="95.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (9 samples, 0.20%)</title><rect x="27.6977%" y="69" width="0.1966%" height="15" fill="rgb(227,1,9)" fg:x="1268" fg:w="9"/><text x="27.9477%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (22 samples, 0.48%)</title><rect x="27.8943%" y="69" width="0.4806%" height="15" fill="rgb(248,47,43)" fg:x="1277" fg:w="22"/><text x="28.1443%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::SubAssign&lt;T&gt;&gt;::sub_assign (8 samples, 0.17%)</title><rect x="28.3748%" y="69" width="0.1747%" height="15" fill="rgb(221,10,30)" fg:x="1299" fg:w="8"/><text x="28.6248%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (18 samples, 0.39%)</title><rect x="28.5496%" y="69" width="0.3932%" height="15" fill="rgb(210,229,1)" fg:x="1307" fg:w="18"/><text x="28.7996%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (22 samples, 0.48%)</title><rect x="28.9428%" y="69" width="0.4806%" height="15" fill="rgb(222,148,37)" fg:x="1325" fg:w="22"/><text x="29.1928%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (96 samples, 2.10%)</title><rect x="29.4233%" y="69" width="2.0970%" height="15" fill="rgb(234,67,33)" fg:x="1347" fg:w="96"/><text x="29.6733%" y="79.50">b..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (3 samples, 0.07%)</title><rect x="31.5203%" y="69" width="0.0655%" height="15" fill="rgb(247,98,35)" fg:x="1443" fg:w="3"/><text x="31.7703%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (27 samples, 0.59%)</title><rect x="31.5858%" y="69" width="0.5898%" height="15" fill="rgb(247,138,52)" fg:x="1446" fg:w="27"/><text x="31.8358%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (20 samples, 0.44%)</title><rect x="32.1756%" y="69" width="0.4369%" height="15" fill="rgb(213,79,30)" fg:x="1473" fg:w="20"/><text x="32.4256%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (230 samples, 5.02%)</title><rect x="27.6103%" y="85" width="5.0240%" height="15" fill="rgb(246,177,23)" fg:x="1264" fg:w="230"/><text x="27.8603%" y="95.50">bench_..</text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="32.6125%" y="69" width="0.0218%" height="15" fill="rgb(230,62,27)" fg:x="1493" fg:w="1"/><text x="32.8625%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="32.6125%" y="53" width="0.0218%" height="15" fill="rgb(216,154,8)" fg:x="1493" fg:w="1"/><text x="32.8625%" y="63.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (236 samples, 5.16%)</title><rect x="27.5448%" y="101" width="5.1551%" height="15" fill="rgb(244,35,45)" fg:x="1261" fg:w="236"/><text x="27.7948%" y="111.50">bench_..</text></g><g><title>bench_maxpool-5e935bdab8467421`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.07%)</title><rect x="32.6343%" y="85" width="0.0655%" height="15" fill="rgb(251,115,12)" fg:x="1494" fg:w="3"/><text x="32.8843%" y="95.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ff::fields::AdditiveGroup&gt;::double_in_place (2 samples, 0.04%)</title><rect x="32.6999%" y="101" width="0.0437%" height="15" fill="rgb(240,54,50)" fg:x="1497" fg:w="2"/><text x="32.9499%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (2 samples, 0.04%)</title><rect x="32.7436%" y="101" width="0.0437%" height="15" fill="rgb(233,84,52)" fg:x="1499" fg:w="2"/><text x="32.9936%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::VariableBaseMSM::msm_unchecked (243 samples, 5.31%)</title><rect x="27.5229%" y="133" width="5.3080%" height="15" fill="rgb(207,117,47)" fg:x="1260" fg:w="243"/><text x="27.7729%" y="143.50">bench_..</text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::msm_bigint_wnaf (243 samples, 5.31%)</title><rect x="27.5229%" y="117" width="5.3080%" height="15" fill="rgb(249,43,39)" fg:x="1260" fg:w="243"/><text x="27.7729%" y="127.50">bench_..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (2 samples, 0.04%)</title><rect x="32.7872%" y="101" width="0.0437%" height="15" fill="rgb(209,38,44)" fg:x="1501" fg:w="2"/><text x="33.0372%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="32.8309%" y="133" width="0.0218%" height="15" fill="rgb(236,212,23)" fg:x="1503" fg:w="1"/><text x="33.0809%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="32.8309%" y="117" width="0.0218%" height="15" fill="rgb(242,79,21)" fg:x="1503" fg:w="1"/><text x="33.0809%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;pcs::hyrax_kzg::hyrax_kzg_1::HyraxKzgPCS1&lt;E&gt; as pcs::PolynomialCommitmentScheme&lt;E&gt;&gt;::open (257 samples, 5.61%)</title><rect x="27.2608%" y="149" width="5.6138%" height="15" fill="rgb(211,96,35)" fg:x="1248" fg:w="257"/><text x="27.5108%" y="159.50">bench_m..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="32.8528%" y="133" width="0.0218%" height="15" fill="rgb(253,215,40)" fg:x="1504" fg:w="1"/><text x="33.1028%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`DYLD-STUB$$free (2 samples, 0.04%)</title><rect x="32.8746%" y="149" width="0.0437%" height="15" fill="rgb(211,81,21)" fg:x="1505" fg:w="2"/><text x="33.1246%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.04%)</title><rect x="32.9183%" y="149" width="0.0437%" height="15" fill="rgb(208,190,38)" fg:x="1507" fg:w="2"/><text x="33.1683%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`arithmetic::multilinear_poly::new_eq (6 samples, 0.13%)</title><rect x="32.9620%" y="149" width="0.1311%" height="15" fill="rgb(235,213,38)" fg:x="1509" fg:w="6"/><text x="33.2120%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (6 samples, 0.13%)</title><rect x="32.9620%" y="133" width="0.1311%" height="15" fill="rgb(237,122,38)" fg:x="1509" fg:w="6"/><text x="33.2120%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`core::hash::BuildHasher::hash_one (2 samples, 0.04%)</title><rect x="33.0931%" y="149" width="0.0437%" height="15" fill="rgb(244,218,35)" fg:x="1515" fg:w="2"/><text x="33.3431%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.02%)</title><rect x="33.1367%" y="149" width="0.0218%" height="15" fill="rgb(240,68,47)" fg:x="1517" fg:w="1"/><text x="33.3867%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="33.1367%" y="133" width="0.0218%" height="15" fill="rgb(210,16,53)" fg:x="1517" fg:w="1"/><text x="33.3867%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`__rdl_alloc (1 samples, 0.02%)</title><rect x="33.7484%" y="117" width="0.0218%" height="15" fill="rgb(235,124,12)" fg:x="1545" fg:w="1"/><text x="33.9984%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="33.7702%" y="117" width="0.0218%" height="15" fill="rgb(224,169,11)" fg:x="1546" fg:w="1"/><text x="34.0202%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="33.7920%" y="117" width="0.0218%" height="15" fill="rgb(250,166,2)" fg:x="1547" fg:w="1"/><text x="34.0420%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (10 samples, 0.22%)</title><rect x="33.6828%" y="133" width="0.2184%" height="15" fill="rgb(242,216,29)" fg:x="1542" fg:w="10"/><text x="33.9328%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.09%)</title><rect x="33.8139%" y="117" width="0.0874%" height="15" fill="rgb(230,116,27)" fg:x="1548" fg:w="4"/><text x="34.0639%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (9 samples, 0.20%)</title><rect x="33.9013%" y="133" width="0.1966%" height="15" fill="rgb(228,99,48)" fg:x="1552" fg:w="9"/><text x="34.1513%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`poly_iop::sum_check::SumCheck::prove (44 samples, 0.96%)</title><rect x="33.1586%" y="149" width="0.9611%" height="15" fill="rgb(253,11,6)" fg:x="1518" fg:w="44"/><text x="33.4086%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="34.0979%" y="133" width="0.0218%" height="15" fill="rgb(247,143,39)" fg:x="1561" fg:w="1"/><text x="34.3479%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="34.0979%" y="117" width="0.0218%" height="15" fill="rgb(236,97,10)" fg:x="1561" fg:w="1"/><text x="34.3479%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.04%)</title><rect x="34.1197%" y="149" width="0.0437%" height="15" fill="rgb(233,208,19)" fg:x="1562" fg:w="2"/><text x="34.3697%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`logup::prover::_&lt;impl logup::Logup&gt;::prove (1,558 samples, 34.03%)</title><rect x="0.4369%" y="165" width="34.0323%" height="15" fill="rgb(216,164,2)" fg:x="20" fg:w="1558"/><text x="0.6869%" y="175.50">bench_maxpool-5e935bdab8467421`logup::prover::_&lt;impl lo..</text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.31%)</title><rect x="34.1634%" y="149" width="0.3058%" height="15" fill="rgb(220,129,5)" fg:x="1564" fg:w="14"/><text x="34.4134%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::prove_inequalities (1,562 samples, 34.12%)</title><rect x="0.3932%" y="181" width="34.1197%" height="15" fill="rgb(242,17,10)" fg:x="18" fg:w="1562"/><text x="0.6432%" y="191.50">bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover:..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.04%)</title><rect x="34.4692%" y="165" width="0.0437%" height="15" fill="rgb(242,107,0)" fg:x="1578" fg:w="2"/><text x="34.7192%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::construct_sumcheck_poly (1 samples, 0.02%)</title><rect x="34.6221%" y="165" width="0.0218%" height="15" fill="rgb(251,28,31)" fg:x="1585" fg:w="1"/><text x="34.8721%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::diff_mle (1 samples, 0.02%)</title><rect x="34.6221%" y="149" width="0.0218%" height="15" fill="rgb(233,223,10)" fg:x="1585" fg:w="1"/><text x="34.8721%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::evaluate_y1_slices (1 samples, 0.02%)</title><rect x="34.6439%" y="165" width="0.0218%" height="15" fill="rgb(215,21,27)" fg:x="1586" fg:w="1"/><text x="34.8939%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::partial_eval_y1 (1 samples, 0.02%)</title><rect x="34.6439%" y="149" width="0.0218%" height="15" fill="rgb(232,23,21)" fg:x="1586" fg:w="1"/><text x="34.8939%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::prove_sumcheck (8 samples, 0.17%)</title><rect x="34.5129%" y="181" width="0.1747%" height="15" fill="rgb(244,5,23)" fg:x="1580" fg:w="8"/><text x="34.7629%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="34.6658%" y="165" width="0.0218%" height="15" fill="rgb(226,81,46)" fg:x="1587" fg:w="1"/><text x="34.9158%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_should_clear (1 samples, 0.02%)</title><rect x="34.6658%" y="149" width="0.0218%" height="15" fill="rgb(247,70,30)" fg:x="1587" fg:w="1"/><text x="34.9158%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (2 samples, 0.04%)</title><rect x="34.6876%" y="101" width="0.0437%" height="15" fill="rgb(212,68,19)" fg:x="1588" fg:w="2"/><text x="34.9376%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::bn::g2::G2Prepared&lt;P&gt; as core::convert::From&lt;ark_ec::models::short_weierstrass::affine::Affine&lt;&lt;P as ark_ec::models::bn::BnConfig&gt;::G2Config&gt;&gt;&gt;::from (3 samples, 0.07%)</title><rect x="34.6876%" y="117" width="0.0655%" height="15" fill="rgb(240,187,13)" fg:x="1588" fg:w="3"/><text x="34.9376%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::models::bn::g2::G2HomProjective&lt;P&gt;::add_in_place (1 samples, 0.02%)</title><rect x="34.7313%" y="101" width="0.0218%" height="15" fill="rgb(223,113,26)" fg:x="1590" fg:w="1"/><text x="34.9813%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (3 samples, 0.07%)</title><rect x="34.7532%" y="117" width="0.0655%" height="15" fill="rgb(206,192,2)" fg:x="1591" fg:w="3"/><text x="35.0032%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (2 samples, 0.04%)</title><rect x="34.8187%" y="85" width="0.0437%" height="15" fill="rgb(241,108,4)" fg:x="1594" fg:w="2"/><text x="35.0687%" y="95.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (3 samples, 0.07%)</title><rect x="34.8187%" y="101" width="0.0655%" height="15" fill="rgb(247,173,49)" fg:x="1594" fg:w="3"/><text x="35.0687%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::quadratic_extension::QuadExtField&lt;P&gt; as ark_ff::fields::Field&gt;::square_in_place (1 samples, 0.02%)</title><rect x="34.8624%" y="85" width="0.0218%" height="15" fill="rgb(224,114,35)" fg:x="1596" fg:w="1"/><text x="35.1124%" y="95.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.22%)</title><rect x="34.6876%" y="133" width="0.2184%" height="15" fill="rgb(245,159,27)" fg:x="1588" fg:w="10"/><text x="34.9376%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::windowed_mul (4 samples, 0.09%)</title><rect x="34.8187%" y="117" width="0.0874%" height="15" fill="rgb(245,172,44)" fg:x="1594" fg:w="4"/><text x="35.0687%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (1 samples, 0.02%)</title><rect x="34.8842%" y="101" width="0.0218%" height="15" fill="rgb(236,23,11)" fg:x="1597" fg:w="1"/><text x="35.1342%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (1 samples, 0.02%)</title><rect x="34.9061%" y="101" width="0.0218%" height="15" fill="rgb(205,117,38)" fg:x="1598" fg:w="1"/><text x="35.1561%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (2 samples, 0.04%)</title><rect x="34.9279%" y="101" width="0.0437%" height="15" fill="rgb(237,72,25)" fg:x="1599" fg:w="2"/><text x="35.1779%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::cubic_extension::CubicExtField&lt;P&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::cubic_extension::CubicExtField&lt;P&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="34.9716%" y="85" width="0.0218%" height="15" fill="rgb(244,70,9)" fg:x="1601" fg:w="1"/><text x="35.2216%" y="95.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::quadratic_extension::QuadExtField&lt;P&gt; as ark_ff::fields::Field&gt;::square_in_place (3 samples, 0.07%)</title><rect x="34.9716%" y="101" width="0.0655%" height="15" fill="rgb(217,125,39)" fg:x="1601" fg:w="3"/><text x="35.2216%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (2 samples, 0.04%)</title><rect x="34.9934%" y="85" width="0.0437%" height="15" fill="rgb(235,36,10)" fg:x="1602" fg:w="2"/><text x="35.2434%" y="95.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (3 samples, 0.07%)</title><rect x="35.0808%" y="85" width="0.0655%" height="15" fill="rgb(251,123,47)" fg:x="1606" fg:w="3"/><text x="35.3308%" y="95.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.26%)</title><rect x="34.9061%" y="117" width="0.2621%" height="15" fill="rgb(221,13,13)" fg:x="1598" fg:w="12"/><text x="35.1561%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ff::fields::models::fp12_2over3over2::_&lt;impl ark_ff::fields::models::quadratic_extension::QuadExtField&lt;ark_ff::fields::models::fp12_2over3over2::Fp12ConfigWrapper&lt;P&gt;&gt;&gt;::mul_by_034 (6 samples, 0.13%)</title><rect x="35.0371%" y="101" width="0.1311%" height="15" fill="rgb(238,131,9)" fg:x="1604" fg:w="6"/><text x="35.2871%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::quadratic_extension::QuadExtField&lt;P&gt; as ark_ff::fields::AdditiveGroup&gt;::double_in_place (1 samples, 0.02%)</title><rect x="35.1464%" y="85" width="0.0218%" height="15" fill="rgb(211,50,8)" fg:x="1609" fg:w="1"/><text x="35.3964%" y="95.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::pairing::Pairing::multi_pairing (13 samples, 0.28%)</title><rect x="34.9061%" y="133" width="0.2840%" height="15" fill="rgb(245,182,24)" fg:x="1598" fg:w="13"/><text x="35.1561%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ff::fields::cyclotomic::exp_loop (1 samples, 0.02%)</title><rect x="35.1682%" y="117" width="0.0218%" height="15" fill="rgb(242,14,37)" fg:x="1610" fg:w="1"/><text x="35.4182%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::quadratic_extension::QuadExtField&lt;P&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::quadratic_extension::QuadExtField&lt;P&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="35.1682%" y="101" width="0.0218%" height="15" fill="rgb(246,228,12)" fg:x="1610" fg:w="1"/><text x="35.4182%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (1 samples, 0.02%)</title><rect x="35.1682%" y="85" width="0.0218%" height="15" fill="rgb(213,55,15)" fg:x="1610" fg:w="1"/><text x="35.4182%" y="95.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.04%)</title><rect x="35.1900%" y="117" width="0.0437%" height="15" fill="rgb(209,9,3)" fg:x="1611" fg:w="2"/><text x="35.4400%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (2 samples, 0.04%)</title><rect x="35.1900%" y="101" width="0.0437%" height="15" fill="rgb(230,59,30)" fg:x="1611" fg:w="2"/><text x="35.4400%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ff::fields::serial_batch_inversion_and_mul (2 samples, 0.04%)</title><rect x="35.1900%" y="85" width="0.0437%" height="15" fill="rgb(209,121,21)" fg:x="1611" fg:w="2"/><text x="35.4400%" y="95.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::inverse (2 samples, 0.04%)</title><rect x="35.1900%" y="69" width="0.0437%" height="15" fill="rgb(220,109,13)" fg:x="1611" fg:w="2"/><text x="35.4400%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (2 samples, 0.04%)</title><rect x="35.2337%" y="101" width="0.0437%" height="15" fill="rgb(232,18,1)" fg:x="1613" fg:w="2"/><text x="35.4837%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (3 samples, 0.07%)</title><rect x="35.2337%" y="117" width="0.0655%" height="15" fill="rgb(215,41,42)" fg:x="1613" fg:w="3"/><text x="35.4837%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (1 samples, 0.02%)</title><rect x="35.2774%" y="101" width="0.0218%" height="15" fill="rgb(224,123,36)" fg:x="1615" fg:w="1"/><text x="35.5274%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (1 samples, 0.02%)</title><rect x="35.2993%" y="117" width="0.0218%" height="15" fill="rgb(240,125,3)" fg:x="1616" fg:w="1"/><text x="35.5493%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::with_num_scalars_and_scalar_size (8 samples, 0.17%)</title><rect x="35.1900%" y="133" width="0.1747%" height="15" fill="rgb(205,98,50)" fg:x="1611" fg:w="8"/><text x="35.4400%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (2 samples, 0.04%)</title><rect x="35.3211%" y="117" width="0.0437%" height="15" fill="rgb(205,185,37)" fg:x="1617" fg:w="2"/><text x="35.5711%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (1 samples, 0.02%)</title><rect x="35.3648%" y="69" width="0.0218%" height="15" fill="rgb(238,207,15)" fg:x="1619" fg:w="1"/><text x="35.6148%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;pcs::hyrax_kzg::hyrax_kzg_1::HyraxKzgPCS1&lt;E&gt; as pcs::PolynomialCommitmentScheme&lt;E&gt;&gt;::verify (33 samples, 0.72%)</title><rect x="34.6876%" y="149" width="0.7208%" height="15" fill="rgb(213,199,42)" fg:x="1588" fg:w="33"/><text x="34.9376%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::VariableBaseMSM::msm_unchecked (2 samples, 0.04%)</title><rect x="35.3648%" y="133" width="0.0437%" height="15" fill="rgb(235,201,11)" fg:x="1619" fg:w="2"/><text x="35.6148%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::msm_bigint_wnaf (2 samples, 0.04%)</title><rect x="35.3648%" y="117" width="0.0437%" height="15" fill="rgb(207,46,11)" fg:x="1619" fg:w="2"/><text x="35.6148%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.04%)</title><rect x="35.3648%" y="101" width="0.0437%" height="15" fill="rgb(241,35,35)" fg:x="1619" fg:w="2"/><text x="35.6148%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.04%)</title><rect x="35.3648%" y="85" width="0.0437%" height="15" fill="rgb(243,32,47)" fg:x="1619" fg:w="2"/><text x="35.6148%" y="95.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="35.3866%" y="69" width="0.0218%" height="15" fill="rgb(247,202,23)" fg:x="1620" fg:w="1"/><text x="35.6366%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`arithmetic::multilinear_poly::evaluate_on_point (1 samples, 0.02%)</title><rect x="35.4085%" y="149" width="0.0218%" height="15" fill="rgb(219,102,11)" fg:x="1621" fg:w="1"/><text x="35.6585%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (1 samples, 0.02%)</title><rect x="35.4085%" y="133" width="0.0218%" height="15" fill="rgb(243,110,44)" fg:x="1621" fg:w="1"/><text x="35.6585%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ff::fields::models::fp::montgomery_backend::MontConfig::inverse (3 samples, 0.07%)</title><rect x="35.4303%" y="149" width="0.0655%" height="15" fill="rgb(222,74,54)" fg:x="1622" fg:w="3"/><text x="35.6803%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::verifier::Verifier::verify_inequalities (38 samples, 0.83%)</title><rect x="34.6876%" y="181" width="0.8301%" height="15" fill="rgb(216,99,12)" fg:x="1588" fg:w="38"/><text x="34.9376%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`logup::verifier::_&lt;impl logup::Logup&gt;::verify (38 samples, 0.83%)</title><rect x="34.6876%" y="165" width="0.8301%" height="15" fill="rgb(226,22,26)" fg:x="1588" fg:w="38"/><text x="34.9376%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`poly_iop::sum_check::SumCheck::verify (1 samples, 0.02%)</title><rect x="35.4958%" y="149" width="0.0218%" height="15" fill="rgb(217,163,10)" fg:x="1625" fg:w="1"/><text x="35.7458%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`utils::get_and_append_challenge (1 samples, 0.02%)</title><rect x="35.4958%" y="133" width="0.0218%" height="15" fill="rgb(213,25,53)" fg:x="1625" fg:w="1"/><text x="35.7458%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ff::fields::models::fp::montgomery_backend::MontConfig::from_bigint (1 samples, 0.02%)</title><rect x="35.4958%" y="117" width="0.0218%" height="15" fill="rgb(252,105,26)" fg:x="1625" fg:w="1"/><text x="35.7458%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,614 samples, 35.26%)</title><rect x="0.2840%" y="229" width="35.2556%" height="15" fill="rgb(220,39,43)" fg:x="13" fg:w="1614"/><text x="0.5340%" y="239.50">bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as all..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,614 samples, 35.26%)</title><rect x="0.2840%" y="213" width="35.2556%" height="15" fill="rgb(229,68,48)" fg:x="13" fg:w="1614"/><text x="0.5340%" y="223.50">bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map..</text></g><g><title>bench_maxpool-5e935bdab8467421`criterion::bencher::Bencher&lt;M&gt;::iter (1,614 samples, 35.26%)</title><rect x="0.2840%" y="197" width="35.2556%" height="15" fill="rgb(252,8,32)" fg:x="13" fg:w="1614"/><text x="0.5340%" y="207.50">bench_maxpool-5e935bdab8467421`criterion::bencher::Benche..</text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="35.5177%" y="181" width="0.0218%" height="15" fill="rgb(223,20,43)" fg:x="1626" fg:w="1"/><text x="35.7677%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="35.5177%" y="165" width="0.0218%" height="15" fill="rgb(229,81,49)" fg:x="1626" fg:w="1"/><text x="35.7677%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (1,615 samples, 35.28%)</title><rect x="0.2840%" y="245" width="35.2774%" height="15" fill="rgb(236,28,36)" fg:x="13" fg:w="1615"/><text x="0.5340%" y="255.50">bench_maxpool-5e935bdab8467421`criterion::benchmark_group..</text></g><g><title>bench_maxpool-5e935bdab8467421`criterion::report::BenchmarkId::new (1 samples, 0.02%)</title><rect x="35.5395%" y="229" width="0.0218%" height="15" fill="rgb(249,185,26)" fg:x="1627" fg:w="1"/><text x="35.7895%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="35.5395%" y="213" width="0.0218%" height="15" fill="rgb(249,174,33)" fg:x="1627" fg:w="1"/><text x="35.7895%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`criterion::html::Html::new (1 samples, 0.02%)</title><rect x="35.5614%" y="245" width="0.0218%" height="15" fill="rgb(233,201,37)" fg:x="1628" fg:w="1"/><text x="35.8114%" y="255.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.04%)</title><rect x="35.5832%" y="229" width="0.0437%" height="15" fill="rgb(221,78,26)" fg:x="1629" fg:w="2"/><text x="35.8332%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ff::fields::models::fp::montgomery_backend::MontConfig::from_bigint (2 samples, 0.04%)</title><rect x="35.5832%" y="213" width="0.0437%" height="15" fill="rgb(250,127,30)" fg:x="1629" fg:w="2"/><text x="35.8332%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="35.6269%" y="229" width="0.0218%" height="15" fill="rgb(230,49,44)" fg:x="1631" fg:w="1"/><text x="35.8769%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::prime::PrimeField&gt;::into_bigint (1 samples, 0.02%)</title><rect x="35.6488%" y="165" width="0.0218%" height="15" fill="rgb(229,67,23)" fg:x="1632" fg:w="1"/><text x="35.8988%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (1 samples, 0.02%)</title><rect x="35.9327%" y="117" width="0.0218%" height="15" fill="rgb(249,83,47)" fg:x="1645" fg:w="1"/><text x="36.1827%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (1 samples, 0.02%)</title><rect x="36.0638%" y="101" width="0.0218%" height="15" fill="rgb(215,43,3)" fg:x="1651" fg:w="1"/><text x="36.3138%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (6 samples, 0.13%)</title><rect x="36.0856%" y="101" width="0.1311%" height="15" fill="rgb(238,154,13)" fg:x="1652" fg:w="6"/><text x="36.3356%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (7 samples, 0.15%)</title><rect x="36.2167%" y="101" width="0.1529%" height="15" fill="rgb(219,56,2)" fg:x="1658" fg:w="7"/><text x="36.4667%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 0.46%)</title><rect x="35.9546%" y="117" width="0.4587%" height="15" fill="rgb(233,0,4)" fg:x="1646" fg:w="21"/><text x="36.2046%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (2 samples, 0.04%)</title><rect x="36.3696%" y="101" width="0.0437%" height="15" fill="rgb(235,30,7)" fg:x="1665" fg:w="2"/><text x="36.6196%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (39 samples, 0.85%)</title><rect x="35.6706%" y="133" width="0.8519%" height="15" fill="rgb(250,79,13)" fg:x="1633" fg:w="39"/><text x="35.9206%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.11%)</title><rect x="36.4133%" y="117" width="0.1092%" height="15" fill="rgb(211,146,34)" fg:x="1667" fg:w="5"/><text x="36.6633%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (41 samples, 0.90%)</title><rect x="35.6488%" y="197" width="0.8956%" height="15" fill="rgb(228,22,38)" fg:x="1632" fg:w="41"/><text x="35.8988%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (41 samples, 0.90%)</title><rect x="35.6488%" y="181" width="0.8956%" height="15" fill="rgb(235,168,5)" fg:x="1632" fg:w="41"/><text x="35.8988%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::VariableBaseMSM::msm_unchecked (40 samples, 0.87%)</title><rect x="35.6706%" y="165" width="0.8737%" height="15" fill="rgb(221,155,16)" fg:x="1633" fg:w="40"/><text x="35.9206%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::msm_bigint_wnaf (40 samples, 0.87%)</title><rect x="35.6706%" y="149" width="0.8737%" height="15" fill="rgb(215,215,53)" fg:x="1633" fg:w="40"/><text x="35.9206%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="36.5225%" y="133" width="0.0218%" height="15" fill="rgb(223,4,10)" fg:x="1672" fg:w="1"/><text x="36.7725%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="36.5225%" y="117" width="0.0218%" height="15" fill="rgb(234,103,6)" fg:x="1672" fg:w="1"/><text x="36.7725%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;pcs::hyrax_kzg::hyrax_kzg_1::HyraxKzgPCS1&lt;E&gt; as pcs::PolynomialCommitmentScheme&lt;E&gt;&gt;::commit (43 samples, 0.94%)</title><rect x="35.6488%" y="213" width="0.9393%" height="15" fill="rgb(227,97,0)" fg:x="1632" fg:w="43"/><text x="35.8988%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`pcs::utils::vector_to_matrix (2 samples, 0.04%)</title><rect x="36.5443%" y="197" width="0.0437%" height="15" fill="rgb(234,150,53)" fg:x="1673" fg:w="2"/><text x="36.7943%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (24 samples, 0.52%)</title><rect x="36.6317%" y="181" width="0.5242%" height="15" fill="rgb(228,201,54)" fg:x="1677" fg:w="24"/><text x="36.8817%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::prime::PrimeField&gt;::into_bigint (1 samples, 0.02%)</title><rect x="37.1560%" y="181" width="0.0218%" height="15" fill="rgb(222,22,37)" fg:x="1701" fg:w="1"/><text x="37.4060%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (10 samples, 0.22%)</title><rect x="37.1778%" y="181" width="0.2184%" height="15" fill="rgb(237,53,32)" fg:x="1702" fg:w="10"/><text x="37.4278%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.04%)</title><rect x="37.3962%" y="181" width="0.0437%" height="15" fill="rgb(233,25,53)" fg:x="1712" fg:w="2"/><text x="37.6462%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`DYLD-STUB$$free (1 samples, 0.02%)</title><rect x="37.4399%" y="181" width="0.0218%" height="15" fill="rgb(210,40,34)" fg:x="1714" fg:w="1"/><text x="37.6899%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.07%)</title><rect x="39.0782%" y="117" width="0.0655%" height="15" fill="rgb(241,220,44)" fg:x="1789" fg:w="3"/><text x="39.3282%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (2 samples, 0.04%)</title><rect x="39.1874%" y="101" width="0.0437%" height="15" fill="rgb(235,28,35)" fg:x="1794" fg:w="2"/><text x="39.4374%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="39.2529%" y="85" width="0.0218%" height="15" fill="rgb(210,56,17)" fg:x="1797" fg:w="1"/><text x="39.5029%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.09%)</title><rect x="39.2748%" y="85" width="0.0874%" height="15" fill="rgb(224,130,29)" fg:x="1798" fg:w="4"/><text x="39.5248%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.02%)</title><rect x="39.3622%" y="85" width="0.0218%" height="15" fill="rgb(235,212,8)" fg:x="1802" fg:w="1"/><text x="39.6122%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.09%)</title><rect x="39.4059%" y="69" width="0.0874%" height="15" fill="rgb(223,33,50)" fg:x="1804" fg:w="4"/><text x="39.6559%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (6 samples, 0.13%)</title><rect x="39.3840%" y="85" width="0.1311%" height="15" fill="rgb(219,149,13)" fg:x="1803" fg:w="6"/><text x="39.6340%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (1 samples, 0.02%)</title><rect x="39.4932%" y="69" width="0.0218%" height="15" fill="rgb(250,156,29)" fg:x="1808" fg:w="1"/><text x="39.7432%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (1 samples, 0.02%)</title><rect x="39.4932%" y="53" width="0.0218%" height="15" fill="rgb(216,193,19)" fg:x="1808" fg:w="1"/><text x="39.7432%" y="63.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (26 samples, 0.57%)</title><rect x="39.0127%" y="149" width="0.5679%" height="15" fill="rgb(216,135,14)" fg:x="1786" fg:w="26"/><text x="39.2627%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::finish_grow (26 samples, 0.57%)</title><rect x="39.0127%" y="133" width="0.5679%" height="15" fill="rgb(241,47,5)" fg:x="1786" fg:w="26"/><text x="39.2627%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`realloc (20 samples, 0.44%)</title><rect x="39.1437%" y="117" width="0.4369%" height="15" fill="rgb(233,42,35)" fg:x="1792" fg:w="20"/><text x="39.3937%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (16 samples, 0.35%)</title><rect x="39.2311%" y="101" width="0.3495%" height="15" fill="rgb(231,13,6)" fg:x="1796" fg:w="16"/><text x="39.4811%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.07%)</title><rect x="39.5151%" y="85" width="0.0655%" height="15" fill="rgb(207,181,40)" fg:x="1809" fg:w="3"/><text x="39.7651%" y="95.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (54 samples, 1.18%)</title><rect x="38.4447%" y="165" width="1.1796%" height="15" fill="rgb(254,173,49)" fg:x="1760" fg:w="54"/><text x="38.6947%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::finish_grow (2 samples, 0.04%)</title><rect x="39.5806%" y="149" width="0.0437%" height="15" fill="rgb(221,1,38)" fg:x="1812" fg:w="2"/><text x="39.8306%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (188 samples, 4.11%)</title><rect x="39.6243%" y="165" width="4.1066%" height="15" fill="rgb(206,124,46)" fg:x="1814" fg:w="188"/><text x="39.8743%" y="175.50">benc..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (47 samples, 1.03%)</title><rect x="43.7309%" y="165" width="1.0266%" height="15" fill="rgb(249,21,11)" fg:x="2002" fg:w="47"/><text x="43.9809%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (118 samples, 2.58%)</title><rect x="44.7575%" y="165" width="2.5775%" height="15" fill="rgb(222,201,40)" fg:x="2049" fg:w="118"/><text x="45.0075%" y="175.50">be..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (582 samples, 12.71%)</title><rect x="47.3351%" y="165" width="12.7130%" height="15" fill="rgb(235,61,29)" fg:x="2167" fg:w="582"/><text x="47.5851%" y="175.50">bench_maxpool-5e935..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (93 samples, 2.03%)</title><rect x="60.0481%" y="165" width="2.0315%" height="15" fill="rgb(219,207,3)" fg:x="2749" fg:w="93"/><text x="60.2981%" y="175.50">b..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (102 samples, 2.23%)</title><rect x="62.0795%" y="165" width="2.2280%" height="15" fill="rgb(222,56,46)" fg:x="2842" fg:w="102"/><text x="62.3295%" y="175.50">b..</text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="64.3076%" y="165" width="0.0218%" height="15" fill="rgb(239,76,54)" fg:x="2944" fg:w="1"/><text x="64.5576%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.04%)</title><rect x="64.3294%" y="165" width="0.0437%" height="15" fill="rgb(231,124,27)" fg:x="2945" fg:w="2"/><text x="64.5794%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::windowed_mul (1,233 samples, 26.93%)</title><rect x="37.4618%" y="181" width="26.9332%" height="15" fill="rgb(249,195,6)" fg:x="1715" fg:w="1233"/><text x="37.7118%" y="191.50">bench_maxpool-5e935bdab8467421`ark_ec::scal..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="64.3731%" y="165" width="0.0218%" height="15" fill="rgb(237,174,47)" fg:x="2947" fg:w="1"/><text x="64.6231%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.02%)</title><rect x="64.3949%" y="181" width="0.0218%" height="15" fill="rgb(206,201,31)" fg:x="2948" fg:w="1"/><text x="64.6449%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,274 samples, 27.83%)</title><rect x="36.6099%" y="197" width="27.8287%" height="15" fill="rgb(231,57,52)" fg:x="1676" fg:w="1274"/><text x="36.8599%" y="207.50">bench_maxpool-5e935bdab8467421`&lt;alloc::vec::V..</text></g><g><title>libsystem_malloc.dylib`nanov2_try_free_default (1 samples, 0.02%)</title><rect x="64.4168%" y="181" width="0.0218%" height="15" fill="rgb(248,177,22)" fg:x="2949" fg:w="1"/><text x="64.6668%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (10 samples, 0.22%)</title><rect x="64.5042%" y="165" width="0.2184%" height="15" fill="rgb(215,211,37)" fg:x="2953" fg:w="10"/><text x="64.7542%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.31%)</title><rect x="64.5042%" y="181" width="0.3058%" height="15" fill="rgb(241,128,51)" fg:x="2953" fg:w="14"/><text x="64.7542%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.09%)</title><rect x="64.7226%" y="165" width="0.0874%" height="15" fill="rgb(227,165,31)" fg:x="2963" fg:w="4"/><text x="64.9726%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (5 samples, 0.11%)</title><rect x="64.8100%" y="181" width="0.1092%" height="15" fill="rgb(228,167,24)" fg:x="2967" fg:w="5"/><text x="65.0600%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (30 samples, 0.66%)</title><rect x="64.4386%" y="197" width="0.6553%" height="15" fill="rgb(228,143,12)" fg:x="2950" fg:w="30"/><text x="64.6886%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (8 samples, 0.17%)</title><rect x="64.9192%" y="181" width="0.1747%" height="15" fill="rgb(249,149,8)" fg:x="2972" fg:w="8"/><text x="65.1692%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (2 samples, 0.04%)</title><rect x="65.0939%" y="197" width="0.0437%" height="15" fill="rgb(243,35,44)" fg:x="2980" fg:w="2"/><text x="65.3439%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (36 samples, 0.79%)</title><rect x="65.1376%" y="197" width="0.7864%" height="15" fill="rgb(246,89,9)" fg:x="2982" fg:w="36"/><text x="65.3876%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (10 samples, 0.22%)</title><rect x="65.9240%" y="197" width="0.2184%" height="15" fill="rgb(233,213,13)" fg:x="3018" fg:w="10"/><text x="66.1740%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.09%)</title><rect x="66.1424%" y="197" width="0.0874%" height="15" fill="rgb(233,141,41)" fg:x="3028" fg:w="4"/><text x="66.3924%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::vec::in_place_collect::from_iter_in_place (1 samples, 0.02%)</title><rect x="66.2298%" y="197" width="0.0218%" height="15" fill="rgb(239,167,4)" fg:x="3032" fg:w="1"/><text x="66.4798%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (3 samples, 0.07%)</title><rect x="66.2516%" y="133" width="0.0655%" height="15" fill="rgb(209,217,16)" fg:x="3033" fg:w="3"/><text x="66.5016%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (1 samples, 0.02%)</title><rect x="66.3172%" y="133" width="0.0218%" height="15" fill="rgb(219,88,35)" fg:x="3036" fg:w="1"/><text x="66.5672%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.13%)</title><rect x="66.2516%" y="149" width="0.1311%" height="15" fill="rgb(220,193,23)" fg:x="3033" fg:w="6"/><text x="66.5016%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.04%)</title><rect x="66.3390%" y="133" width="0.0437%" height="15" fill="rgb(230,90,52)" fg:x="3037" fg:w="2"/><text x="66.5890%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (2 samples, 0.04%)</title><rect x="66.3827%" y="149" width="0.0437%" height="15" fill="rgb(252,106,19)" fg:x="3039" fg:w="2"/><text x="66.6327%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.20%)</title><rect x="66.2516%" y="181" width="0.1966%" height="15" fill="rgb(206,74,20)" fg:x="3033" fg:w="9"/><text x="66.5016%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (9 samples, 0.20%)</title><rect x="66.2516%" y="165" width="0.1966%" height="15" fill="rgb(230,138,44)" fg:x="3033" fg:w="9"/><text x="66.5016%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (1 samples, 0.02%)</title><rect x="66.4264%" y="149" width="0.0218%" height="15" fill="rgb(235,182,43)" fg:x="3041" fg:w="1"/><text x="66.6764%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (4 samples, 0.09%)</title><rect x="66.4482%" y="181" width="0.0874%" height="15" fill="rgb(242,16,51)" fg:x="3042" fg:w="4"/><text x="66.6982%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (1 samples, 0.02%)</title><rect x="66.5138%" y="165" width="0.0218%" height="15" fill="rgb(248,9,4)" fg:x="3045" fg:w="1"/><text x="66.7638%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (2 samples, 0.04%)</title><rect x="66.5356%" y="181" width="0.0437%" height="15" fill="rgb(210,31,22)" fg:x="3046" fg:w="2"/><text x="66.7856%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (3 samples, 0.07%)</title><rect x="66.5793%" y="181" width="0.0655%" height="15" fill="rgb(239,54,39)" fg:x="3048" fg:w="3"/><text x="66.8293%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (6 samples, 0.13%)</title><rect x="66.6448%" y="181" width="0.1311%" height="15" fill="rgb(230,99,41)" fg:x="3051" fg:w="6"/><text x="66.8948%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="66.7759%" y="181" width="0.0218%" height="15" fill="rgb(253,106,12)" fg:x="3057" fg:w="1"/><text x="67.0259%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::with_num_scalars_and_scalar_size (27 samples, 0.59%)</title><rect x="66.2516%" y="197" width="0.5898%" height="15" fill="rgb(213,46,41)" fg:x="3033" fg:w="27"/><text x="66.5016%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (2 samples, 0.04%)</title><rect x="66.7977%" y="181" width="0.0437%" height="15" fill="rgb(215,133,35)" fg:x="3058" fg:w="2"/><text x="67.0477%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ff::fields::AdditiveGroup&gt;::double_in_place (1 samples, 0.02%)</title><rect x="66.8414%" y="181" width="0.0218%" height="15" fill="rgb(213,28,5)" fg:x="3060" fg:w="1"/><text x="67.0914%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (1 samples, 0.02%)</title><rect x="66.8633%" y="181" width="0.0218%" height="15" fill="rgb(215,77,49)" fg:x="3061" fg:w="1"/><text x="67.1133%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::glv::GLVConfig::glv_mul_projective (4 samples, 0.09%)</title><rect x="66.8414%" y="197" width="0.0874%" height="15" fill="rgb(248,100,22)" fg:x="3060" fg:w="4"/><text x="67.0914%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (2 samples, 0.04%)</title><rect x="66.8851%" y="181" width="0.0437%" height="15" fill="rgb(208,67,9)" fg:x="3062" fg:w="2"/><text x="67.1351%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ff::fields::serial_batch_inversion_and_mul (3 samples, 0.07%)</title><rect x="66.9288%" y="197" width="0.0655%" height="15" fill="rgb(219,133,21)" fg:x="3064" fg:w="3"/><text x="67.1788%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`pcs::utils::eq_extension (5 samples, 0.11%)</title><rect x="66.9943%" y="197" width="0.1092%" height="15" fill="rgb(246,46,29)" fg:x="3067" fg:w="5"/><text x="67.2443%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`pcs::utils::remove_dummy_variable (1 samples, 0.02%)</title><rect x="67.1035%" y="197" width="0.0218%" height="15" fill="rgb(246,185,52)" fg:x="3072" fg:w="1"/><text x="67.3535%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="67.1035%" y="181" width="0.0218%" height="15" fill="rgb(252,136,11)" fg:x="3072" fg:w="1"/><text x="67.3535%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.02%)</title><rect x="67.1254%" y="197" width="0.0218%" height="15" fill="rgb(219,138,53)" fg:x="3073" fg:w="1"/><text x="67.3754%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="67.1254%" y="181" width="0.0218%" height="15" fill="rgb(211,51,23)" fg:x="3073" fg:w="1"/><text x="67.3754%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;pcs::multilinear_kzg::data_structures::MultilinearUniversalParams&lt;E&gt; as pcs::StructuredReferenceString&lt;E&gt;&gt;::gen_srs (1,401 samples, 30.60%)</title><rect x="36.5880%" y="213" width="30.6029%" height="15" fill="rgb(247,221,28)" fg:x="1675" fg:w="1401"/><text x="36.8380%" y="223.50">bench_maxpool-5e935bdab8467421`&lt;pcs::multilinear_..</text></g><g><title>libsystem_malloc.dylib`free_medium (2 samples, 0.04%)</title><rect x="67.1472%" y="197" width="0.0437%" height="15" fill="rgb(251,222,45)" fg:x="3074" fg:w="2"/><text x="67.3972%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.04%)</title><rect x="67.1472%" y="181" width="0.0437%" height="15" fill="rgb(217,162,53)" fg:x="3074" fg:w="2"/><text x="67.3972%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`logup::Logup::process (1,448 samples, 31.63%)</title><rect x="35.6488%" y="229" width="31.6295%" height="15" fill="rgb(229,93,14)" fg:x="1632" fg:w="1448"/><text x="35.8988%" y="239.50">bench_maxpool-5e935bdab8467421`logup::Logup::process</text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.09%)</title><rect x="67.1909%" y="213" width="0.0874%" height="15" fill="rgb(209,67,49)" fg:x="3076" fg:w="4"/><text x="67.4409%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::process_inequalities (1,452 samples, 31.72%)</title><rect x="35.5832%" y="245" width="31.7169%" height="15" fill="rgb(213,87,29)" fg:x="1629" fg:w="1452"/><text x="35.8332%" y="255.50">bench_maxpool-5e935bdab8467421`zkconv::maxpool::pro..</text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::evaluate_y1_slices (1 samples, 0.02%)</title><rect x="67.2783%" y="229" width="0.0218%" height="15" fill="rgb(205,151,52)" fg:x="3080" fg:w="1"/><text x="67.5283%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::partial_eval_y1 (1 samples, 0.02%)</title><rect x="67.2783%" y="213" width="0.0218%" height="15" fill="rgb(253,215,39)" fg:x="3080" fg:w="1"/><text x="67.5283%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="67.3001%" y="229" width="0.0218%" height="15" fill="rgb(221,220,41)" fg:x="3081" fg:w="1"/><text x="67.5501%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.07%)</title><rect x="67.3220%" y="213" width="0.0655%" height="15" fill="rgb(218,133,21)" fg:x="3082" fg:w="3"/><text x="67.5720%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.07%)</title><rect x="67.3220%" y="197" width="0.0655%" height="15" fill="rgb(221,193,43)" fg:x="3082" fg:w="3"/><text x="67.5720%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="67.3657%" y="181" width="0.0218%" height="15" fill="rgb(240,128,52)" fg:x="3084" fg:w="1"/><text x="67.6157%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::add_assign (3 samples, 0.07%)</title><rect x="67.3875%" y="213" width="0.0655%" height="15" fill="rgb(253,114,12)" fg:x="3085" fg:w="3"/><text x="67.6375%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (46 samples, 1.00%)</title><rect x="67.4530%" y="213" width="1.0048%" height="15" fill="rgb(215,223,47)" fg:x="3088" fg:w="46"/><text x="67.7030%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (9 samples, 0.20%)</title><rect x="68.4578%" y="213" width="0.1966%" height="15" fill="rgb(248,225,23)" fg:x="3134" fg:w="9"/><text x="68.7078%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::prime::PrimeField&gt;::into_bigint (1 samples, 0.02%)</title><rect x="68.6544%" y="165" width="0.0218%" height="15" fill="rgb(250,108,0)" fg:x="3143" fg:w="1"/><text x="68.9044%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (2 samples, 0.04%)</title><rect x="69.2661%" y="117" width="0.0437%" height="15" fill="rgb(228,208,7)" fg:x="3171" fg:w="2"/><text x="69.5161%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (1 samples, 0.02%)</title><rect x="69.3097%" y="117" width="0.0218%" height="15" fill="rgb(244,45,10)" fg:x="3173" fg:w="1"/><text x="69.5597%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::SubAssign&lt;T&gt;&gt;::sub_assign (3 samples, 0.07%)</title><rect x="69.3316%" y="117" width="0.0655%" height="15" fill="rgb(207,125,25)" fg:x="3174" fg:w="3"/><text x="69.5816%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (35 samples, 0.76%)</title><rect x="69.8777%" y="101" width="0.7645%" height="15" fill="rgb(210,195,18)" fg:x="3199" fg:w="35"/><text x="70.1277%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (86 samples, 1.88%)</title><rect x="70.6422%" y="101" width="1.8785%" height="15" fill="rgb(249,80,12)" fg:x="3234" fg:w="86"/><text x="70.8922%" y="111.50">b..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::SubAssign&lt;T&gt;&gt;::sub_assign (87 samples, 1.90%)</title><rect x="72.5208%" y="101" width="1.9004%" height="15" fill="rgb(221,65,9)" fg:x="3320" fg:w="87"/><text x="72.7708%" y="111.50">b..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (58 samples, 1.27%)</title><rect x="74.4211%" y="101" width="1.2669%" height="15" fill="rgb(235,49,36)" fg:x="3407" fg:w="58"/><text x="74.6711%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (131 samples, 2.86%)</title><rect x="75.6881%" y="101" width="2.8615%" height="15" fill="rgb(225,32,20)" fg:x="3465" fg:w="131"/><text x="75.9381%" y="111.50">be..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (426 samples, 9.31%)</title><rect x="78.5496%" y="101" width="9.3054%" height="15" fill="rgb(215,141,46)" fg:x="3596" fg:w="426"/><text x="78.7996%" y="111.50">bench_maxpool..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (6 samples, 0.13%)</title><rect x="87.8550%" y="101" width="0.1311%" height="15" fill="rgb(250,160,47)" fg:x="4022" fg:w="6"/><text x="88.1050%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (112 samples, 2.45%)</title><rect x="87.9860%" y="101" width="2.4465%" height="15" fill="rgb(216,222,40)" fg:x="4028" fg:w="112"/><text x="88.2360%" y="111.50">be..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,063 samples, 23.22%)</title><rect x="69.3971%" y="117" width="23.2197%" height="15" fill="rgb(234,217,39)" fg:x="3177" fg:w="1063"/><text x="69.6471%" y="127.50">bench_maxpool-5e935bdab8467421`&lt;core:..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (100 samples, 2.18%)</title><rect x="90.4325%" y="101" width="2.1844%" height="15" fill="rgb(207,178,40)" fg:x="4140" fg:w="100"/><text x="90.6825%" y="111.50">b..</text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="92.6169%" y="117" width="0.0218%" height="15" fill="rgb(221,136,13)" fg:x="4240" fg:w="1"/><text x="92.8669%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="92.6169%" y="101" width="0.0218%" height="15" fill="rgb(249,199,10)" fg:x="4240" fg:w="1"/><text x="92.8669%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.02%)</title><rect x="92.6169%" y="85" width="0.0218%" height="15" fill="rgb(249,222,13)" fg:x="4240" fg:w="1"/><text x="92.8669%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.02%)</title><rect x="92.6169%" y="69" width="0.0218%" height="15" fill="rgb(244,185,38)" fg:x="4240" fg:w="1"/><text x="92.8669%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (16 samples, 0.35%)</title><rect x="92.6387%" y="117" width="0.3495%" height="15" fill="rgb(236,202,9)" fg:x="4241" fg:w="16"/><text x="92.8887%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::VariableBaseMSM::msm_unchecked (1,114 samples, 24.33%)</title><rect x="68.6763%" y="165" width="24.3338%" height="15" fill="rgb(250,229,37)" fg:x="3144" fg:w="1114"/><text x="68.9263%" y="175.50">bench_maxpool-5e935bdab8467421`ark_ec::..</text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::msm_bigint_wnaf (1,114 samples, 24.33%)</title><rect x="68.6763%" y="149" width="24.3338%" height="15" fill="rgb(206,174,23)" fg:x="3144" fg:w="1114"/><text x="68.9263%" y="159.50">bench_maxpool-5e935bdab8467421`ark_ec::..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,114 samples, 24.33%)</title><rect x="68.6763%" y="133" width="24.3338%" height="15" fill="rgb(211,33,43)" fg:x="3144" fg:w="1114"/><text x="68.9263%" y="143.50">bench_maxpool-5e935bdab8467421`&lt;alloc::..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="92.9882%" y="117" width="0.0218%" height="15" fill="rgb(245,58,50)" fg:x="4257" fg:w="1"/><text x="93.2382%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (1 samples, 0.02%)</title><rect x="92.9882%" y="101" width="0.0218%" height="15" fill="rgb(244,68,36)" fg:x="4257" fg:w="1"/><text x="93.2382%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (1 samples, 0.02%)</title><rect x="92.9882%" y="85" width="0.0218%" height="15" fill="rgb(232,229,15)" fg:x="4257" fg:w="1"/><text x="93.2382%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (1 samples, 0.02%)</title><rect x="92.9882%" y="69" width="0.0218%" height="15" fill="rgb(254,30,23)" fg:x="4257" fg:w="1"/><text x="93.2382%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,116 samples, 24.38%)</title><rect x="68.6544%" y="197" width="24.3775%" height="15" fill="rgb(235,160,14)" fg:x="3143" fg:w="1116"/><text x="68.9044%" y="207.50">bench_maxpool-5e935bdab8467421`&lt;alloc::..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,116 samples, 24.38%)</title><rect x="68.6544%" y="181" width="24.3775%" height="15" fill="rgb(212,155,44)" fg:x="3143" fg:w="1116"/><text x="68.9044%" y="191.50">bench_maxpool-5e935bdab8467421`&lt;core::i..</text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="93.0100%" y="165" width="0.0218%" height="15" fill="rgb(226,2,50)" fg:x="4258" fg:w="1"/><text x="93.2600%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="93.0100%" y="149" width="0.0218%" height="15" fill="rgb(234,177,6)" fg:x="4258" fg:w="1"/><text x="93.2600%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`pcs::utils::vector_to_matrix (2 samples, 0.04%)</title><rect x="93.0319%" y="197" width="0.0437%" height="15" fill="rgb(217,24,9)" fg:x="4259" fg:w="2"/><text x="93.2819%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="93.0537%" y="181" width="0.0218%" height="15" fill="rgb(220,13,46)" fg:x="4260" fg:w="1"/><text x="93.3037%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;pcs::hyrax_kzg::hyrax_kzg_1::HyraxKzgPCS1&lt;E&gt; as pcs::PolynomialCommitmentScheme&lt;E&gt;&gt;::commit (1,119 samples, 24.44%)</title><rect x="68.6544%" y="213" width="24.4430%" height="15" fill="rgb(239,221,27)" fg:x="3143" fg:w="1119"/><text x="68.9044%" y="223.50">bench_maxpool-5e935bdab8467421`&lt;pcs::hy..</text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="93.0756%" y="197" width="0.0218%" height="15" fill="rgb(222,198,25)" fg:x="4261" fg:w="1"/><text x="93.3256%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="93.0756%" y="181" width="0.0218%" height="15" fill="rgb(211,99,13)" fg:x="4261" fg:w="1"/><text x="93.3256%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::prime::PrimeField&gt;::into_bigint (1 samples, 0.02%)</title><rect x="93.1193%" y="197" width="0.0218%" height="15" fill="rgb(232,111,31)" fg:x="4263" fg:w="1"/><text x="93.3693%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (6 samples, 0.13%)</title><rect x="93.1411%" y="197" width="0.1311%" height="15" fill="rgb(245,82,37)" fg:x="4264" fg:w="6"/><text x="93.3911%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (2 samples, 0.04%)</title><rect x="93.2722%" y="197" width="0.0437%" height="15" fill="rgb(227,149,46)" fg:x="4270" fg:w="2"/><text x="93.5222%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`arithmetic::multilinear_poly::bind_vars (4 samples, 0.09%)</title><rect x="93.3159%" y="197" width="0.0874%" height="15" fill="rgb(218,36,50)" fg:x="4272" fg:w="4"/><text x="93.5659%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (1 samples, 0.02%)</title><rect x="93.5125%" y="149" width="0.0218%" height="15" fill="rgb(226,80,48)" fg:x="4281" fg:w="1"/><text x="93.7625%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (11 samples, 0.24%)</title><rect x="93.6217%" y="133" width="0.2403%" height="15" fill="rgb(238,224,15)" fg:x="4286" fg:w="11"/><text x="93.8717%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (19 samples, 0.42%)</title><rect x="93.8619%" y="133" width="0.4150%" height="15" fill="rgb(241,136,10)" fg:x="4297" fg:w="19"/><text x="94.1119%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::SubAssign&lt;T&gt;&gt;::sub_assign (17 samples, 0.37%)</title><rect x="94.2770%" y="133" width="0.3713%" height="15" fill="rgb(208,32,45)" fg:x="4316" fg:w="17"/><text x="94.5270%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (13 samples, 0.28%)</title><rect x="94.6483%" y="133" width="0.2840%" height="15" fill="rgb(207,135,9)" fg:x="4333" fg:w="13"/><text x="94.8983%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (22 samples, 0.48%)</title><rect x="94.9323%" y="133" width="0.4806%" height="15" fill="rgb(206,86,44)" fg:x="4346" fg:w="22"/><text x="95.1823%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (91 samples, 1.99%)</title><rect x="95.4128%" y="133" width="1.9878%" height="15" fill="rgb(245,177,15)" fg:x="4368" fg:w="91"/><text x="95.6628%" y="143.50">b..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (3 samples, 0.07%)</title><rect x="97.4006%" y="133" width="0.0655%" height="15" fill="rgb(206,64,50)" fg:x="4459" fg:w="3"/><text x="97.6506%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (21 samples, 0.46%)</title><rect x="97.4661%" y="133" width="0.4587%" height="15" fill="rgb(234,36,40)" fg:x="4462" fg:w="21"/><text x="97.7161%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (17 samples, 0.37%)</title><rect x="97.9249%" y="133" width="0.3713%" height="15" fill="rgb(213,64,8)" fg:x="4483" fg:w="17"/><text x="98.1749%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (219 samples, 4.78%)</title><rect x="93.5343%" y="149" width="4.7837%" height="15" fill="rgb(210,75,36)" fg:x="4282" fg:w="219"/><text x="93.7843%" y="159.50">bench_..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="98.2962%" y="133" width="0.0218%" height="15" fill="rgb(229,88,21)" fg:x="4500" fg:w="1"/><text x="98.5462%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (1 samples, 0.02%)</title><rect x="98.2962%" y="117" width="0.0218%" height="15" fill="rgb(252,204,47)" fg:x="4500" fg:w="1"/><text x="98.5462%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (227 samples, 4.96%)</title><rect x="93.4032%" y="165" width="4.9585%" height="15" fill="rgb(208,77,27)" fg:x="4276" fg:w="227"/><text x="93.6532%" y="175.50">bench_..</text></g><g><title>bench_maxpool-5e935bdab8467421`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.04%)</title><rect x="98.3180%" y="149" width="0.0437%" height="15" fill="rgb(221,76,26)" fg:x="4501" fg:w="2"/><text x="98.5680%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (2 samples, 0.04%)</title><rect x="98.3617%" y="165" width="0.0437%" height="15" fill="rgb(225,139,18)" fg:x="4503" fg:w="2"/><text x="98.6117%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (2 samples, 0.04%)</title><rect x="98.4054%" y="165" width="0.0437%" height="15" fill="rgb(230,137,11)" fg:x="4505" fg:w="2"/><text x="98.6554%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::VariableBaseMSM::msm_unchecked (232 samples, 5.07%)</title><rect x="93.4032%" y="197" width="5.0677%" height="15" fill="rgb(212,28,1)" fg:x="4276" fg:w="232"/><text x="93.6532%" y="207.50">bench_..</text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::msm_bigint_wnaf (232 samples, 5.07%)</title><rect x="93.4032%" y="181" width="5.0677%" height="15" fill="rgb(248,164,17)" fg:x="4276" fg:w="232"/><text x="93.6532%" y="191.50">bench_..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (1 samples, 0.02%)</title><rect x="98.4491%" y="165" width="0.0218%" height="15" fill="rgb(222,171,42)" fg:x="4507" fg:w="1"/><text x="98.6991%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;pcs::hyrax_kzg::hyrax_kzg_1::HyraxKzgPCS1&lt;E&gt; as pcs::PolynomialCommitmentScheme&lt;E&gt;&gt;::open (247 samples, 5.40%)</title><rect x="93.0974%" y="213" width="5.3954%" height="15" fill="rgb(243,84,45)" fg:x="4262" fg:w="247"/><text x="93.3474%" y="223.50">bench_m..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="98.4709%" y="197" width="0.0218%" height="15" fill="rgb(252,49,23)" fg:x="4508" fg:w="1"/><text x="98.7209%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (3 samples, 0.07%)</title><rect x="98.4928%" y="197" width="0.0655%" height="15" fill="rgb(215,19,7)" fg:x="4509" fg:w="3"/><text x="98.7428%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`arithmetic::multilinear_poly::new_eq (6 samples, 0.13%)</title><rect x="98.4928%" y="213" width="0.1311%" height="15" fill="rgb(238,81,41)" fg:x="4509" fg:w="6"/><text x="98.7428%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (3 samples, 0.07%)</title><rect x="98.5583%" y="197" width="0.0655%" height="15" fill="rgb(210,199,37)" fg:x="4512" fg:w="3"/><text x="98.8083%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.02%)</title><rect x="98.6239%" y="213" width="0.0218%" height="15" fill="rgb(244,192,49)" fg:x="4515" fg:w="1"/><text x="98.8739%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`DYLD-STUB$$malloc (1 samples, 0.02%)</title><rect x="99.0607%" y="181" width="0.0218%" height="15" fill="rgb(226,211,11)" fg:x="4535" fg:w="1"/><text x="99.3107%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::finish_grow (3 samples, 0.07%)</title><rect x="99.0826%" y="181" width="0.0655%" height="15" fill="rgb(236,162,54)" fg:x="4536" fg:w="3"/><text x="99.3326%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.15%)</title><rect x="99.1481%" y="181" width="0.1529%" height="15" fill="rgb(220,229,9)" fg:x="4539" fg:w="7"/><text x="99.3981%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (20 samples, 0.44%)</title><rect x="99.0389%" y="197" width="0.4369%" height="15" fill="rgb(250,87,22)" fg:x="4534" fg:w="20"/><text x="99.2889%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.17%)</title><rect x="99.3010%" y="181" width="0.1747%" height="15" fill="rgb(239,43,17)" fg:x="4546" fg:w="8"/><text x="99.5510%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`poly_iop::sum_check::SumCheck::prove (51 samples, 1.11%)</title><rect x="98.6457%" y="213" width="1.1140%" height="15" fill="rgb(231,177,25)" fg:x="4516" fg:w="51"/><text x="98.8957%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (13 samples, 0.28%)</title><rect x="99.4758%" y="197" width="0.2840%" height="15" fill="rgb(219,179,1)" fg:x="4554" fg:w="13"/><text x="99.7258%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="99.7597%" y="213" width="0.0218%" height="15" fill="rgb(238,219,53)" fg:x="4567" fg:w="1"/><text x="100.0097%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::prove_inequalities (1,490 samples, 32.55%)</title><rect x="67.3001%" y="245" width="32.5470%" height="15" fill="rgb(232,167,36)" fg:x="3081" fg:w="1490"/><text x="67.5501%" y="255.50">bench_maxpool-5e935bdab8467421`zkconv::maxpool::prove..</text></g><g><title>bench_maxpool-5e935bdab8467421`logup::prover::_&lt;impl logup::Logup&gt;::prove (1,489 samples, 32.53%)</title><rect x="67.3220%" y="229" width="32.5251%" height="15" fill="rgb(244,19,51)" fg:x="3082" fg:w="1489"/><text x="67.5720%" y="239.50">bench_maxpool-5e935bdab8467421`logup::prover::_&lt;impl ..</text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.07%)</title><rect x="99.7816%" y="213" width="0.0655%" height="15" fill="rgb(224,6,22)" fg:x="4568" fg:w="3"/><text x="100.0316%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::prove_sumcheck (5 samples, 0.11%)</title><rect x="99.8471%" y="245" width="0.1092%" height="15" fill="rgb(224,145,5)" fg:x="4571" fg:w="5"/><text x="100.0971%" y="255.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::construct_sumcheck_poly (1 samples, 0.02%)</title><rect x="99.9345%" y="229" width="0.0218%" height="15" fill="rgb(234,130,49)" fg:x="4575" fg:w="1"/><text x="100.1845%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::diff_mle (1 samples, 0.02%)</title><rect x="99.9345%" y="213" width="0.0218%" height="15" fill="rgb(254,6,2)" fg:x="4575" fg:w="1"/><text x="100.1845%" y="223.50"></text></g><g><title>dyld`start (4,577 samples, 99.98%)</title><rect x="0.0000%" y="341" width="99.9782%" height="15" fill="rgb(208,96,46)" fg:x="0" fg:w="4577"/><text x="0.2500%" y="351.50">dyld`start</text></g><g><title>bench_maxpool-5e935bdab8467421`main (4,577 samples, 99.98%)</title><rect x="0.0000%" y="325" width="99.9782%" height="15" fill="rgb(239,3,39)" fg:x="0" fg:w="4577"/><text x="0.2500%" y="335.50">bench_maxpool-5e935bdab8467421`main</text></g><g><title>bench_maxpool-5e935bdab8467421`std::rt::lang_start_internal (4,577 samples, 99.98%)</title><rect x="0.0000%" y="309" width="99.9782%" height="15" fill="rgb(233,210,1)" fg:x="0" fg:w="4577"/><text x="0.2500%" y="319.50">bench_maxpool-5e935bdab8467421`std::rt::lang_start_internal</text></g><g><title>bench_maxpool-5e935bdab8467421`std::rt::lang_start::_{{closure}} (4,577 samples, 99.98%)</title><rect x="0.0000%" y="293" width="99.9782%" height="15" fill="rgb(244,137,37)" fg:x="0" fg:w="4577"/><text x="0.2500%" y="303.50">bench_maxpool-5e935bdab8467421`std::rt::lang_start::_{{closure}}</text></g><g><title>bench_maxpool-5e935bdab8467421`std::sys::backtrace::__rust_begin_short_backtrace (4,577 samples, 99.98%)</title><rect x="0.0000%" y="277" width="99.9782%" height="15" fill="rgb(240,136,2)" fg:x="0" fg:w="4577"/><text x="0.2500%" y="287.50">bench_maxpool-5e935bdab8467421`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>bench_maxpool-5e935bdab8467421`bench_maxpool::main (4,575 samples, 99.93%)</title><rect x="0.0437%" y="261" width="99.9345%" height="15" fill="rgb(239,18,37)" fg:x="2" fg:w="4575"/><text x="0.2937%" y="271.50">bench_maxpool-5e935bdab8467421`bench_maxpool::main</text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="99.9563%" y="245" width="0.0218%" height="15" fill="rgb(218,185,22)" fg:x="4576" fg:w="1"/><text x="100.2063%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="99.9563%" y="229" width="0.0218%" height="15" fill="rgb(225,218,4)" fg:x="4576" fg:w="1"/><text x="100.2063%" y="239.50"></text></g><g><title>all (4,578 samples, 100%)</title><rect x="0.0000%" y="357" width="100.0000%" height="15" fill="rgb(230,182,32)" fg:x="0" fg:w="4578"/><text x="0.2500%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.02%)</title><rect x="99.9782%" y="341" width="0.0218%" height="15" fill="rgb(242,56,43)" fg:x="4577" fg:w="1"/><text x="100.2282%" y="351.50"></text></g></svg></svg>