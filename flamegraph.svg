<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="438" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="421.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="421.00"> </text><svg id="frames" x="10" width="1180" total_samples="91631"><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (25 samples, 0.03%)</title><rect x="0.0000%" y="373" width="0.0273%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="25"/><text x="0.2500%" y="383.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (141 samples, 0.15%)</title><rect x="0.1211%" y="149" width="0.1539%" height="15" fill="rgb(217,0,24)" fg:x="111" fg:w="141"/><text x="0.3711%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::prime::PrimeField&gt;::into_bigint (57 samples, 0.06%)</title><rect x="0.2750%" y="149" width="0.0622%" height="15" fill="rgb(221,193,54)" fg:x="252" fg:w="57"/><text x="0.5250%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (253 samples, 0.28%)</title><rect x="0.3372%" y="149" width="0.2761%" height="15" fill="rgb(248,212,6)" fg:x="309" fg:w="253"/><text x="0.5872%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (81 samples, 0.09%)</title><rect x="0.6133%" y="149" width="0.0884%" height="15" fill="rgb(208,68,35)" fg:x="562" fg:w="81"/><text x="0.8633%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (48 samples, 0.05%)</title><rect x="2.8364%" y="85" width="0.0524%" height="15" fill="rgb(232,128,0)" fg:x="2599" fg:w="48"/><text x="3.0864%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (13 samples, 0.01%)</title><rect x="2.9542%" y="69" width="0.0142%" height="15" fill="rgb(207,160,47)" fg:x="2707" fg:w="13"/><text x="3.2042%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (51 samples, 0.06%)</title><rect x="3.0361%" y="53" width="0.0557%" height="15" fill="rgb(228,23,34)" fg:x="2782" fg:w="51"/><text x="3.2861%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (53 samples, 0.06%)</title><rect x="3.0917%" y="53" width="0.0578%" height="15" fill="rgb(218,30,26)" fg:x="2833" fg:w="53"/><text x="3.3417%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (81 samples, 0.09%)</title><rect x="3.1954%" y="37" width="0.0884%" height="15" fill="rgb(220,122,19)" fg:x="2928" fg:w="81"/><text x="3.4454%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (134 samples, 0.15%)</title><rect x="3.1496%" y="53" width="0.1462%" height="15" fill="rgb(250,228,42)" fg:x="2886" fg:w="134"/><text x="3.3996%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (321 samples, 0.35%)</title><rect x="2.9684%" y="69" width="0.3503%" height="15" fill="rgb(240,193,28)" fg:x="2720" fg:w="321"/><text x="3.2184%" y="79.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (21 samples, 0.02%)</title><rect x="3.2958%" y="53" width="0.0229%" height="15" fill="rgb(216,20,37)" fg:x="3020" fg:w="21"/><text x="3.5458%" y="63.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`alloc::raw_vec::finish_grow (485 samples, 0.53%)</title><rect x="2.8135%" y="101" width="0.5293%" height="15" fill="rgb(206,188,39)" fg:x="2578" fg:w="485"/><text x="3.0635%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`realloc (416 samples, 0.45%)</title><rect x="2.8888%" y="85" width="0.4540%" height="15" fill="rgb(217,207,13)" fg:x="2647" fg:w="416"/><text x="3.1388%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (22 samples, 0.02%)</title><rect x="3.3187%" y="69" width="0.0240%" height="15" fill="rgb(231,73,38)" fg:x="3041" fg:w="22"/><text x="3.5687%" y="79.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (572 samples, 0.62%)</title><rect x="2.7371%" y="117" width="0.6242%" height="15" fill="rgb(225,20,46)" fg:x="2508" fg:w="572"/><text x="2.9871%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`realloc (17 samples, 0.02%)</title><rect x="3.3428%" y="101" width="0.0186%" height="15" fill="rgb(210,31,41)" fg:x="3063" fg:w="17"/><text x="3.5928%" y="111.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,539 samples, 1.68%)</title><rect x="1.6948%" y="133" width="1.6796%" height="15" fill="rgb(221,200,47)" fg:x="1553" fg:w="1539"/><text x="1.9448%" y="143.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`alloc::raw_vec::finish_grow (12 samples, 0.01%)</title><rect x="3.3613%" y="117" width="0.0131%" height="15" fill="rgb(226,26,5)" fg:x="3080" fg:w="12"/><text x="3.6113%" y="127.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (3,868 samples, 4.22%)</title><rect x="3.3744%" y="133" width="4.2213%" height="15" fill="rgb(249,33,26)" fg:x="3092" fg:w="3868"/><text x="3.6244%" y="143.50">bench..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (1,026 samples, 1.12%)</title><rect x="7.5957%" y="133" width="1.1197%" height="15" fill="rgb(235,183,28)" fg:x="6960" fg:w="1026"/><text x="7.8457%" y="143.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (2,345 samples, 2.56%)</title><rect x="8.7154%" y="133" width="2.5592%" height="15" fill="rgb(221,5,38)" fg:x="7986" fg:w="2345"/><text x="8.9654%" y="143.50">be..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (12,763 samples, 13.93%)</title><rect x="11.2746%" y="133" width="13.9287%" height="15" fill="rgb(247,18,42)" fg:x="10331" fg:w="12763"/><text x="11.5246%" y="143.50">bench_relu-dc1b9b0fc9..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (2,084 samples, 2.27%)</title><rect x="25.2033%" y="133" width="2.2743%" height="15" fill="rgb(241,131,45)" fg:x="23094" fg:w="2084"/><text x="25.4533%" y="143.50">b..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (2,000 samples, 2.18%)</title><rect x="27.4776%" y="133" width="2.1827%" height="15" fill="rgb(249,31,29)" fg:x="25178" fg:w="2000"/><text x="27.7276%" y="143.50">b..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (23 samples, 0.03%)</title><rect x="29.6734%" y="133" width="0.0251%" height="15" fill="rgb(225,111,53)" fg:x="27190" fg:w="23"/><text x="29.9234%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.02%)</title><rect x="29.6985%" y="133" width="0.0164%" height="15" fill="rgb(238,160,17)" fg:x="27213" fg:w="15"/><text x="29.9485%" y="143.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::windowed_mul (26,587 samples, 29.02%)</title><rect x="0.7039%" y="149" width="29.0153%" height="15" fill="rgb(214,148,48)" fg:x="645" fg:w="26587"/><text x="0.9539%" y="159.50">bench_relu-dc1b9b0fc918b8d4`ark_ec::scalar_mul:..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (27,187 samples, 29.67%)</title><rect x="0.0633%" y="165" width="29.6701%" height="15" fill="rgb(232,36,49)" fg:x="58" fg:w="27187"/><text x="0.3133%" y="175.50">bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; ..</text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.01%)</title><rect x="29.7225%" y="149" width="0.0109%" height="15" fill="rgb(209,103,24)" fg:x="27235" fg:w="10"/><text x="29.9725%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (245 samples, 0.27%)</title><rect x="29.8425%" y="133" width="0.2674%" height="15" fill="rgb(229,88,8)" fg:x="27345" fg:w="245"/><text x="30.0925%" y="143.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (92 samples, 0.10%)</title><rect x="30.1099%" y="133" width="0.1004%" height="15" fill="rgb(213,181,19)" fg:x="27590" fg:w="92"/><text x="30.3599%" y="143.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (339 samples, 0.37%)</title><rect x="29.8425%" y="149" width="0.3700%" height="15" fill="rgb(254,191,54)" fg:x="27345" fg:w="339"/><text x="30.0925%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (76 samples, 0.08%)</title><rect x="30.2125%" y="149" width="0.0829%" height="15" fill="rgb(241,83,37)" fg:x="27684" fg:w="76"/><text x="30.4625%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (135 samples, 0.15%)</title><rect x="30.2954%" y="149" width="0.1473%" height="15" fill="rgb(233,36,39)" fg:x="27760" fg:w="135"/><text x="30.5454%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (687 samples, 0.75%)</title><rect x="29.7334%" y="165" width="0.7497%" height="15" fill="rgb(226,3,54)" fg:x="27245" fg:w="687"/><text x="29.9834%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`ark_ff::fields::serial_batch_inversion_and_mul (37 samples, 0.04%)</title><rect x="30.4428%" y="149" width="0.0404%" height="15" fill="rgb(245,192,40)" fg:x="27895" fg:w="37"/><text x="30.6928%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (73 samples, 0.08%)</title><rect x="30.4831%" y="165" width="0.0797%" height="15" fill="rgb(238,167,29)" fg:x="27932" fg:w="73"/><text x="30.7331%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (1,506 samples, 1.64%)</title><rect x="30.5628%" y="165" width="1.6435%" height="15" fill="rgb(232,182,51)" fg:x="28005" fg:w="1506"/><text x="30.8128%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (241 samples, 0.26%)</title><rect x="32.2063%" y="165" width="0.2630%" height="15" fill="rgb(231,60,39)" fg:x="29511" fg:w="241"/><text x="32.4563%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (66 samples, 0.07%)</title><rect x="32.4694%" y="165" width="0.0720%" height="15" fill="rgb(208,69,12)" fg:x="29752" fg:w="66"/><text x="32.7194%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`alloc::vec::in_place_collect::from_iter_in_place (237 samples, 0.26%)</title><rect x="32.5414%" y="165" width="0.2586%" height="15" fill="rgb(235,93,37)" fg:x="29818" fg:w="237"/><text x="32.7914%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (35 samples, 0.04%)</title><rect x="32.8022%" y="101" width="0.0382%" height="15" fill="rgb(213,116,39)" fg:x="30057" fg:w="35"/><text x="33.0522%" y="111.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (49 samples, 0.05%)</title><rect x="32.8022%" y="117" width="0.0535%" height="15" fill="rgb(222,207,29)" fg:x="30057" fg:w="49"/><text x="33.0522%" y="127.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.02%)</title><rect x="32.8404%" y="101" width="0.0153%" height="15" fill="rgb(206,96,30)" fg:x="30092" fg:w="14"/><text x="33.0904%" y="111.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (11 samples, 0.01%)</title><rect x="32.8557%" y="117" width="0.0120%" height="15" fill="rgb(218,138,4)" fg:x="30106" fg:w="11"/><text x="33.1057%" y="127.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (17 samples, 0.02%)</title><rect x="32.8677%" y="117" width="0.0186%" height="15" fill="rgb(250,191,14)" fg:x="30117" fg:w="17"/><text x="33.1177%" y="127.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (80 samples, 0.09%)</title><rect x="32.8022%" y="149" width="0.0873%" height="15" fill="rgb(239,60,40)" fg:x="30057" fg:w="80"/><text x="33.0522%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (80 samples, 0.09%)</title><rect x="32.8022%" y="133" width="0.0873%" height="15" fill="rgb(206,27,48)" fg:x="30057" fg:w="80"/><text x="33.0522%" y="143.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (27 samples, 0.03%)</title><rect x="32.8895%" y="149" width="0.0295%" height="15" fill="rgb(225,35,8)" fg:x="30137" fg:w="27"/><text x="33.1395%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (13 samples, 0.01%)</title><rect x="32.9190%" y="149" width="0.0142%" height="15" fill="rgb(250,213,24)" fg:x="30164" fg:w="13"/><text x="33.1690%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (19 samples, 0.02%)</title><rect x="32.9332%" y="149" width="0.0207%" height="15" fill="rgb(247,123,22)" fg:x="30177" fg:w="19"/><text x="33.1832%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (108 samples, 0.12%)</title><rect x="32.9539%" y="149" width="0.1179%" height="15" fill="rgb(231,138,38)" fg:x="30196" fg:w="108"/><text x="33.2039%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (11 samples, 0.01%)</title><rect x="33.0783%" y="149" width="0.0120%" height="15" fill="rgb(231,145,46)" fg:x="30310" fg:w="11"/><text x="33.3283%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (17 samples, 0.02%)</title><rect x="33.0903%" y="149" width="0.0186%" height="15" fill="rgb(251,118,11)" fg:x="30321" fg:w="17"/><text x="33.3403%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::with_num_scalars_and_scalar_size (289 samples, 0.32%)</title><rect x="32.8022%" y="165" width="0.3154%" height="15" fill="rgb(217,147,25)" fg:x="30057" fg:w="289"/><text x="33.0522%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`ark_ff::fields::serial_batch_inversion_and_mul (24 samples, 0.03%)</title><rect x="33.1198%" y="165" width="0.0262%" height="15" fill="rgb(247,81,37)" fg:x="30348" fg:w="24"/><text x="33.3698%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`pcs::utils::eq_extension (190 samples, 0.21%)</title><rect x="33.1460%" y="165" width="0.2074%" height="15" fill="rgb(209,12,38)" fg:x="30372" fg:w="190"/><text x="33.3960%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`pcs::utils::remove_dummy_variable (15 samples, 0.02%)</title><rect x="33.3533%" y="165" width="0.0164%" height="15" fill="rgb(227,1,9)" fg:x="30562" fg:w="15"/><text x="33.6033%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (15 samples, 0.02%)</title><rect x="33.3533%" y="149" width="0.0164%" height="15" fill="rgb(248,47,43)" fg:x="30562" fg:w="15"/><text x="33.6033%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`madvise (23 samples, 0.03%)</title><rect x="33.3697%" y="149" width="0.0251%" height="15" fill="rgb(221,10,30)" fg:x="30577" fg:w="23"/><text x="33.6197%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (39 samples, 0.04%)</title><rect x="33.3697%" y="165" width="0.0426%" height="15" fill="rgb(210,229,1)" fg:x="30577" fg:w="39"/><text x="33.6197%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_large (16 samples, 0.02%)</title><rect x="33.3948%" y="149" width="0.0175%" height="15" fill="rgb(222,148,37)" fg:x="30600" fg:w="16"/><text x="33.6448%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (16 samples, 0.02%)</title><rect x="33.3948%" y="133" width="0.0175%" height="15" fill="rgb(234,67,33)" fg:x="30600" fg:w="16"/><text x="33.6448%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (16 samples, 0.02%)</title><rect x="33.3948%" y="117" width="0.0175%" height="15" fill="rgb(247,98,35)" fg:x="30600" fg:w="16"/><text x="33.6448%" y="127.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;pcs::multilinear_kzg::data_structures::MultilinearUniversalParams&lt;E&gt; as pcs::StructuredReferenceString&lt;E&gt;&gt;::gen_srs (30,606 samples, 33.40%)</title><rect x="0.0316%" y="181" width="33.4014%" height="15" fill="rgb(247,138,52)" fg:x="29" fg:w="30606"/><text x="0.2816%" y="191.50">bench_relu-dc1b9b0fc918b8d4`&lt;pcs::multilinear_kzg::dat..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.01%)</title><rect x="33.4188%" y="165" width="0.0142%" height="15" fill="rgb(213,79,30)" fg:x="30622" fg:w="13"/><text x="33.6688%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`logup::Logup::process (30,724 samples, 33.53%)</title><rect x="0.0295%" y="197" width="33.5301%" height="15" fill="rgb(246,177,23)" fg:x="27" fg:w="30724"/><text x="0.2795%" y="207.50">bench_relu-dc1b9b0fc918b8d4`logup::Logup::process</text></g><g><title>libsystem_platform.dylib`_platform_memmove (111 samples, 0.12%)</title><rect x="33.4385%" y="181" width="0.1211%" height="15" fill="rgb(230,62,27)" fg:x="30640" fg:w="111"/><text x="33.6885%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`ark_ec::pairing::Pairing::multi_pairing (10 samples, 0.01%)</title><rect x="33.5672%" y="165" width="0.0109%" height="15" fill="rgb(216,154,8)" fg:x="30758" fg:w="10"/><text x="33.8172%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::with_num_scalars_and_scalar_size (18 samples, 0.02%)</title><rect x="33.5782%" y="165" width="0.0196%" height="15" fill="rgb(244,35,45)" fg:x="30768" fg:w="18"/><text x="33.8282%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`logup::verifier::_&lt;impl logup::Logup&gt;::verify (36 samples, 0.04%)</title><rect x="33.5596%" y="197" width="0.0393%" height="15" fill="rgb(251,115,12)" fg:x="30751" fg:w="36"/><text x="33.8096%" y="207.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;pcs::hyrax_kzg::hyrax_kzg_1::HyraxKzgPCS1&lt;E&gt; as pcs::PolynomialCommitmentScheme&lt;E&gt;&gt;::verify (36 samples, 0.04%)</title><rect x="33.5596%" y="181" width="0.0393%" height="15" fill="rgb(240,54,50)" fg:x="30751" fg:w="36"/><text x="33.8096%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`criterion::bencher::Bencher&lt;M&gt;::iter (30,766 samples, 33.58%)</title><rect x="0.0295%" y="229" width="33.5760%" height="15" fill="rgb(233,84,52)" fg:x="27" fg:w="30766"/><text x="0.2795%" y="239.50">bench_relu-dc1b9b0fc918b8d4`criterion::bencher::Benche..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`zkconv::relu::verifier::Verifier::verify_step1_logup (30,766 samples, 33.58%)</title><rect x="0.0295%" y="213" width="33.5760%" height="15" fill="rgb(207,117,47)" fg:x="27" fg:w="30766"/><text x="0.2795%" y="223.50">bench_relu-dc1b9b0fc918b8d4`zkconv::relu::verifier::Ve..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (87 samples, 0.09%)</title><rect x="33.6480%" y="165" width="0.0949%" height="15" fill="rgb(249,43,39)" fg:x="30832" fg:w="87"/><text x="33.8980%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::prime::PrimeField&gt;::into_bigint (21 samples, 0.02%)</title><rect x="33.7429%" y="165" width="0.0229%" height="15" fill="rgb(209,38,44)" fg:x="30919" fg:w="21"/><text x="33.9929%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (127 samples, 0.14%)</title><rect x="33.7659%" y="165" width="0.1386%" height="15" fill="rgb(236,212,23)" fg:x="30940" fg:w="127"/><text x="34.0159%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 0.04%)</title><rect x="33.9045%" y="165" width="0.0404%" height="15" fill="rgb(242,79,21)" fg:x="31067" fg:w="37"/><text x="34.1545%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (21 samples, 0.02%)</title><rect x="34.9936%" y="101" width="0.0229%" height="15" fill="rgb(211,96,35)" fg:x="32065" fg:w="21"/><text x="35.2436%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (31 samples, 0.03%)</title><rect x="35.1093%" y="69" width="0.0338%" height="15" fill="rgb(253,215,40)" fg:x="32171" fg:w="31"/><text x="35.3593%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (25 samples, 0.03%)</title><rect x="35.1431%" y="69" width="0.0273%" height="15" fill="rgb(211,81,21)" fg:x="32202" fg:w="25"/><text x="35.3931%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (36 samples, 0.04%)</title><rect x="35.1911%" y="53" width="0.0393%" height="15" fill="rgb(208,190,38)" fg:x="32246" fg:w="36"/><text x="35.4411%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (64 samples, 0.07%)</title><rect x="35.1704%" y="69" width="0.0698%" height="15" fill="rgb(235,213,38)" fg:x="32227" fg:w="64"/><text x="35.4204%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (177 samples, 0.19%)</title><rect x="35.0624%" y="85" width="0.1932%" height="15" fill="rgb(237,122,38)" fg:x="32128" fg:w="177"/><text x="35.3124%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (14 samples, 0.02%)</title><rect x="35.2403%" y="69" width="0.0153%" height="15" fill="rgb(244,218,35)" fg:x="32291" fg:w="14"/><text x="35.4903%" y="79.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`alloc::raw_vec::finish_grow (259 samples, 0.28%)</title><rect x="34.9827%" y="117" width="0.2827%" height="15" fill="rgb(240,68,47)" fg:x="32055" fg:w="259"/><text x="35.2327%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`realloc (228 samples, 0.25%)</title><rect x="35.0165%" y="101" width="0.2488%" height="15" fill="rgb(210,16,53)" fg:x="32086" fg:w="228"/><text x="35.2665%" y="111.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (301 samples, 0.33%)</title><rect x="34.9456%" y="133" width="0.3285%" height="15" fill="rgb(235,124,12)" fg:x="32021" fg:w="301"/><text x="35.1956%" y="143.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (785 samples, 0.86%)</title><rect x="34.4228%" y="149" width="0.8567%" height="15" fill="rgb(224,169,11)" fg:x="31542" fg:w="785"/><text x="34.6728%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (1,899 samples, 2.07%)</title><rect x="35.2795%" y="149" width="2.0724%" height="15" fill="rgb(250,166,2)" fg:x="32327" fg:w="1899"/><text x="35.5295%" y="159.50">b..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (537 samples, 0.59%)</title><rect x="37.3520%" y="149" width="0.5860%" height="15" fill="rgb(242,216,29)" fg:x="34226" fg:w="537"/><text x="37.6020%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (1,157 samples, 1.26%)</title><rect x="37.9380%" y="149" width="1.2627%" height="15" fill="rgb(230,116,27)" fg:x="34763" fg:w="1157"/><text x="38.1880%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (6,561 samples, 7.16%)</title><rect x="39.2007%" y="149" width="7.1602%" height="15" fill="rgb(228,99,48)" fg:x="35920" fg:w="6561"/><text x="39.4507%" y="159.50">bench_relu..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (973 samples, 1.06%)</title><rect x="46.3609%" y="149" width="1.0619%" height="15" fill="rgb(253,11,6)" fg:x="42481" fg:w="973"/><text x="46.6109%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (969 samples, 1.06%)</title><rect x="47.4228%" y="149" width="1.0575%" height="15" fill="rgb(247,143,39)" fg:x="43454" fg:w="969"/><text x="47.6728%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::windowed_mul (13,348 samples, 14.57%)</title><rect x="33.9448%" y="165" width="14.5671%" height="15" fill="rgb(236,97,10)" fg:x="31104" fg:w="13348"/><text x="34.1948%" y="175.50">bench_relu-dc1b9b0fc91..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (11 samples, 0.01%)</title><rect x="48.5000%" y="149" width="0.0120%" height="15" fill="rgb(233,208,19)" fg:x="44441" fg:w="11"/><text x="48.7500%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13,648 samples, 14.89%)</title><rect x="33.6229%" y="181" width="14.8945%" height="15" fill="rgb(216,164,2)" fg:x="30809" fg:w="13648"/><text x="33.8729%" y="191.50">bench_relu-dc1b9b0fc918..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (123 samples, 0.13%)</title><rect x="48.5916%" y="149" width="0.1342%" height="15" fill="rgb(220,129,5)" fg:x="44525" fg:w="123"/><text x="48.8416%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (170 samples, 0.19%)</title><rect x="48.5916%" y="165" width="0.1855%" height="15" fill="rgb(242,17,10)" fg:x="44525" fg:w="170"/><text x="48.8416%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (47 samples, 0.05%)</title><rect x="48.7259%" y="149" width="0.0513%" height="15" fill="rgb(242,107,0)" fg:x="44648" fg:w="47"/><text x="48.9759%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (46 samples, 0.05%)</title><rect x="48.7772%" y="165" width="0.0502%" height="15" fill="rgb(251,28,31)" fg:x="44695" fg:w="46"/><text x="49.0272%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (66 samples, 0.07%)</title><rect x="48.8274%" y="165" width="0.0720%" height="15" fill="rgb(233,223,10)" fg:x="44741" fg:w="66"/><text x="49.0774%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (363 samples, 0.40%)</title><rect x="48.5174%" y="181" width="0.3962%" height="15" fill="rgb(215,21,27)" fg:x="44457" fg:w="363"/><text x="48.7674%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`ark_ff::fields::serial_batch_inversion_and_mul (13 samples, 0.01%)</title><rect x="48.8994%" y="165" width="0.0142%" height="15" fill="rgb(232,23,21)" fg:x="44807" fg:w="13"/><text x="49.1494%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (40 samples, 0.04%)</title><rect x="48.9136%" y="181" width="0.0437%" height="15" fill="rgb(244,5,23)" fg:x="44820" fg:w="40"/><text x="49.1636%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (744 samples, 0.81%)</title><rect x="48.9572%" y="181" width="0.8120%" height="15" fill="rgb(226,81,46)" fg:x="44860" fg:w="744"/><text x="49.2072%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (126 samples, 0.14%)</title><rect x="49.7692%" y="181" width="0.1375%" height="15" fill="rgb(247,70,30)" fg:x="45604" fg:w="126"/><text x="50.0192%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (37 samples, 0.04%)</title><rect x="49.9067%" y="181" width="0.0404%" height="15" fill="rgb(212,68,19)" fg:x="45730" fg:w="37"/><text x="50.1567%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`alloc::vec::in_place_collect::from_iter_in_place (90 samples, 0.10%)</title><rect x="49.9471%" y="181" width="0.0982%" height="15" fill="rgb(240,187,13)" fg:x="45767" fg:w="90"/><text x="50.1971%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (22 samples, 0.02%)</title><rect x="50.0475%" y="117" width="0.0240%" height="15" fill="rgb(223,113,26)" fg:x="45859" fg:w="22"/><text x="50.2975%" y="127.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 0.03%)</title><rect x="50.0475%" y="133" width="0.0273%" height="15" fill="rgb(206,192,2)" fg:x="45859" fg:w="25"/><text x="50.2975%" y="143.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (41 samples, 0.04%)</title><rect x="50.0453%" y="165" width="0.0447%" height="15" fill="rgb(241,108,4)" fg:x="45857" fg:w="41"/><text x="50.2953%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (41 samples, 0.04%)</title><rect x="50.0453%" y="149" width="0.0447%" height="15" fill="rgb(247,173,49)" fg:x="45857" fg:w="41"/><text x="50.2953%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (11 samples, 0.01%)</title><rect x="50.0900%" y="165" width="0.0120%" height="15" fill="rgb(224,114,35)" fg:x="45898" fg:w="11"/><text x="50.3400%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (10 samples, 0.01%)</title><rect x="50.1108%" y="165" width="0.0109%" height="15" fill="rgb(245,159,27)" fg:x="45917" fg:w="10"/><text x="50.3608%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (51 samples, 0.06%)</title><rect x="50.1217%" y="165" width="0.0557%" height="15" fill="rgb(245,172,44)" fg:x="45927" fg:w="51"/><text x="50.3717%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (15 samples, 0.02%)</title><rect x="50.1850%" y="165" width="0.0164%" height="15" fill="rgb(236,23,11)" fg:x="45985" fg:w="15"/><text x="50.4350%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::with_num_scalars_and_scalar_size (146 samples, 0.16%)</title><rect x="50.0453%" y="181" width="0.1593%" height="15" fill="rgb(205,117,38)" fg:x="45857" fg:w="146"/><text x="50.2953%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`pcs::utils::eq_extension (116 samples, 0.13%)</title><rect x="50.2123%" y="181" width="0.1266%" height="15" fill="rgb(237,72,25)" fg:x="46010" fg:w="116"/><text x="50.4623%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (12 samples, 0.01%)</title><rect x="50.3476%" y="165" width="0.0131%" height="15" fill="rgb(244,70,9)" fg:x="46134" fg:w="12"/><text x="50.5976%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (23 samples, 0.03%)</title><rect x="50.3476%" y="181" width="0.0251%" height="15" fill="rgb(217,125,39)" fg:x="46134" fg:w="23"/><text x="50.5976%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_large (11 samples, 0.01%)</title><rect x="50.3607%" y="165" width="0.0120%" height="15" fill="rgb(235,36,10)" fg:x="46146" fg:w="11"/><text x="50.6107%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (11 samples, 0.01%)</title><rect x="50.3607%" y="149" width="0.0120%" height="15" fill="rgb(251,123,47)" fg:x="46146" fg:w="11"/><text x="50.6107%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (11 samples, 0.01%)</title><rect x="50.3607%" y="133" width="0.0120%" height="15" fill="rgb(221,13,13)" fg:x="46146" fg:w="11"/><text x="50.6107%" y="143.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;pcs::multilinear_kzg::data_structures::MultilinearUniversalParams&lt;E&gt; as pcs::StructuredReferenceString&lt;E&gt;&gt;::gen_srs (15,370 samples, 16.77%)</title><rect x="33.6054%" y="197" width="16.7738%" height="15" fill="rgb(238,131,9)" fg:x="30793" fg:w="15370"/><text x="33.8554%" y="207.50">bench_relu-dc1b9b0fc918b8d..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`logup::Logup::process (15,425 samples, 16.83%)</title><rect x="33.6054%" y="213" width="16.8338%" height="15" fill="rgb(211,50,8)" fg:x="30793" fg:w="15425"/><text x="33.8554%" y="223.50">bench_relu-dc1b9b0fc918b8d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (53 samples, 0.06%)</title><rect x="50.3814%" y="197" width="0.0578%" height="15" fill="rgb(245,182,24)" fg:x="46165" fg:w="53"/><text x="50.6314%" y="207.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`zkconv::relu::prover::Prover::prove_step1_logup (15,434 samples, 16.84%)</title><rect x="33.6054%" y="229" width="16.8436%" height="15" fill="rgb(242,14,37)" fg:x="30793" fg:w="15434"/><text x="33.8554%" y="239.50">bench_relu-dc1b9b0fc918b8d..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (55 samples, 0.06%)</title><rect x="50.4949%" y="165" width="0.0600%" height="15" fill="rgb(246,228,12)" fg:x="46269" fg:w="55"/><text x="50.7449%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::prime::PrimeField&gt;::into_bigint (21 samples, 0.02%)</title><rect x="50.5549%" y="165" width="0.0229%" height="15" fill="rgb(213,55,15)" fg:x="46324" fg:w="21"/><text x="50.8049%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (123 samples, 0.13%)</title><rect x="50.5779%" y="165" width="0.1342%" height="15" fill="rgb(209,9,3)" fg:x="46345" fg:w="123"/><text x="50.8279%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (41 samples, 0.04%)</title><rect x="50.7121%" y="165" width="0.0447%" height="15" fill="rgb(230,59,30)" fg:x="46468" fg:w="41"/><text x="50.9621%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (25 samples, 0.03%)</title><rect x="51.8067%" y="101" width="0.0273%" height="15" fill="rgb(209,121,21)" fg:x="47471" fg:w="25"/><text x="52.0567%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (24 samples, 0.03%)</title><rect x="51.9104%" y="69" width="0.0262%" height="15" fill="rgb(220,109,13)" fg:x="47566" fg:w="24"/><text x="52.1604%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (27 samples, 0.03%)</title><rect x="51.9366%" y="69" width="0.0295%" height="15" fill="rgb(232,18,1)" fg:x="47590" fg:w="27"/><text x="52.1866%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (34 samples, 0.04%)</title><rect x="51.9759%" y="53" width="0.0371%" height="15" fill="rgb(215,41,42)" fg:x="47626" fg:w="34"/><text x="52.2259%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (50 samples, 0.05%)</title><rect x="51.9660%" y="69" width="0.0546%" height="15" fill="rgb(224,123,36)" fg:x="47617" fg:w="50"/><text x="52.2160%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (145 samples, 0.16%)</title><rect x="51.8744%" y="85" width="0.1582%" height="15" fill="rgb(240,125,3)" fg:x="47533" fg:w="145"/><text x="52.1244%" y="95.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.01%)</title><rect x="52.0206%" y="69" width="0.0120%" height="15" fill="rgb(205,98,50)" fg:x="47667" fg:w="11"/><text x="52.2706%" y="79.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`alloc::raw_vec::finish_grow (233 samples, 0.25%)</title><rect x="51.7892%" y="117" width="0.2543%" height="15" fill="rgb(205,185,37)" fg:x="47455" fg:w="233"/><text x="52.0392%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`realloc (192 samples, 0.21%)</title><rect x="51.8340%" y="101" width="0.2095%" height="15" fill="rgb(238,207,15)" fg:x="47496" fg:w="192"/><text x="52.0840%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (10 samples, 0.01%)</title><rect x="52.0326%" y="85" width="0.0109%" height="15" fill="rgb(213,199,42)" fg:x="47678" fg:w="10"/><text x="52.2826%" y="95.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (263 samples, 0.29%)</title><rect x="51.7641%" y="133" width="0.2870%" height="15" fill="rgb(235,201,11)" fg:x="47432" fg:w="263"/><text x="52.0141%" y="143.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (758 samples, 0.83%)</title><rect x="51.2261%" y="149" width="0.8272%" height="15" fill="rgb(207,46,11)" fg:x="46939" fg:w="758"/><text x="51.4761%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (1,916 samples, 2.09%)</title><rect x="52.0533%" y="149" width="2.0910%" height="15" fill="rgb(241,35,35)" fg:x="47697" fg:w="1916"/><text x="52.3033%" y="159.50">b..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (493 samples, 0.54%)</title><rect x="54.1443%" y="149" width="0.5380%" height="15" fill="rgb(243,32,47)" fg:x="49613" fg:w="493"/><text x="54.3943%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (1,175 samples, 1.28%)</title><rect x="54.6824%" y="149" width="1.2823%" height="15" fill="rgb(247,202,23)" fg:x="50106" fg:w="1175"/><text x="54.9324%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (6,431 samples, 7.02%)</title><rect x="55.9647%" y="149" width="7.0184%" height="15" fill="rgb(219,102,11)" fg:x="51281" fg:w="6431"/><text x="56.2147%" y="159.50">bench_rel..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (984 samples, 1.07%)</title><rect x="62.9831%" y="149" width="1.0739%" height="15" fill="rgb(243,110,44)" fg:x="57712" fg:w="984"/><text x="63.2331%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (1,019 samples, 1.11%)</title><rect x="64.0569%" y="149" width="1.1121%" height="15" fill="rgb(222,74,54)" fg:x="58696" fg:w="1019"/><text x="64.3069%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::windowed_mul (13,236 samples, 14.44%)</title><rect x="50.7590%" y="165" width="14.4449%" height="15" fill="rgb(216,99,12)" fg:x="46511" fg:w="13236"/><text x="51.0090%" y="175.50">bench_relu-dc1b9b0fc91..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13,514 samples, 14.75%)</title><rect x="50.4644%" y="181" width="14.7483%" height="15" fill="rgb(226,22,26)" fg:x="46241" fg:w="13514"/><text x="50.7144%" y="191.50">bench_relu-dc1b9b0fc91..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (123 samples, 0.13%)</title><rect x="65.2825%" y="149" width="0.1342%" height="15" fill="rgb(217,163,10)" fg:x="59819" fg:w="123"/><text x="65.5325%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (55 samples, 0.06%)</title><rect x="65.4167%" y="149" width="0.0600%" height="15" fill="rgb(213,25,53)" fg:x="59942" fg:w="55"/><text x="65.6667%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (179 samples, 0.20%)</title><rect x="65.2825%" y="165" width="0.1953%" height="15" fill="rgb(252,105,26)" fg:x="59819" fg:w="179"/><text x="65.5325%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (37 samples, 0.04%)</title><rect x="65.4778%" y="165" width="0.0404%" height="15" fill="rgb(220,39,43)" fg:x="59998" fg:w="37"/><text x="65.7278%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (63 samples, 0.07%)</title><rect x="65.5182%" y="165" width="0.0688%" height="15" fill="rgb(229,68,48)" fg:x="60035" fg:w="63"/><text x="65.7682%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (367 samples, 0.40%)</title><rect x="65.2126%" y="181" width="0.4005%" height="15" fill="rgb(252,8,32)" fg:x="59755" fg:w="367"/><text x="65.4626%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`ark_ff::fields::serial_batch_inversion_and_mul (24 samples, 0.03%)</title><rect x="65.5870%" y="165" width="0.0262%" height="15" fill="rgb(223,20,43)" fg:x="60098" fg:w="24"/><text x="65.8370%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (43 samples, 0.05%)</title><rect x="65.6132%" y="181" width="0.0469%" height="15" fill="rgb(229,81,49)" fg:x="60122" fg:w="43"/><text x="65.8632%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (756 samples, 0.83%)</title><rect x="65.6601%" y="181" width="0.8250%" height="15" fill="rgb(236,28,36)" fg:x="60165" fg:w="756"/><text x="65.9101%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (116 samples, 0.13%)</title><rect x="66.4851%" y="181" width="0.1266%" height="15" fill="rgb(249,185,26)" fg:x="60921" fg:w="116"/><text x="66.7351%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (44 samples, 0.05%)</title><rect x="66.6117%" y="181" width="0.0480%" height="15" fill="rgb(249,174,33)" fg:x="61037" fg:w="44"/><text x="66.8617%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`alloc::vec::in_place_collect::from_iter_in_place (120 samples, 0.13%)</title><rect x="66.6598%" y="181" width="0.1310%" height="15" fill="rgb(233,201,37)" fg:x="61081" fg:w="120"/><text x="66.9098%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (19 samples, 0.02%)</title><rect x="66.7918%" y="117" width="0.0207%" height="15" fill="rgb(221,78,26)" fg:x="61202" fg:w="19"/><text x="67.0418%" y="127.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 0.03%)</title><rect x="66.7918%" y="133" width="0.0273%" height="15" fill="rgb(250,127,30)" fg:x="61202" fg:w="25"/><text x="67.0418%" y="143.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (42 samples, 0.05%)</title><rect x="66.7907%" y="165" width="0.0458%" height="15" fill="rgb(230,49,44)" fg:x="61201" fg:w="42"/><text x="67.0407%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (42 samples, 0.05%)</title><rect x="66.7907%" y="149" width="0.0458%" height="15" fill="rgb(229,67,23)" fg:x="61201" fg:w="42"/><text x="67.0407%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (13 samples, 0.01%)</title><rect x="66.8366%" y="165" width="0.0142%" height="15" fill="rgb(249,83,47)" fg:x="61243" fg:w="13"/><text x="67.0866%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (10 samples, 0.01%)</title><rect x="66.8507%" y="165" width="0.0109%" height="15" fill="rgb(215,43,3)" fg:x="61256" fg:w="10"/><text x="67.1007%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (12 samples, 0.01%)</title><rect x="66.8617%" y="165" width="0.0131%" height="15" fill="rgb(238,154,13)" fg:x="61266" fg:w="12"/><text x="67.1117%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (54 samples, 0.06%)</title><rect x="66.8747%" y="165" width="0.0589%" height="15" fill="rgb(219,56,2)" fg:x="61278" fg:w="54"/><text x="67.1247%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (10 samples, 0.01%)</title><rect x="66.9359%" y="165" width="0.0109%" height="15" fill="rgb(233,0,4)" fg:x="61334" fg:w="10"/><text x="67.1859%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::with_num_scalars_and_scalar_size (151 samples, 0.16%)</title><rect x="66.7907%" y="181" width="0.1648%" height="15" fill="rgb(235,30,7)" fg:x="61201" fg:w="151"/><text x="67.0407%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`pcs::utils::eq_extension (119 samples, 0.13%)</title><rect x="66.9664%" y="181" width="0.1299%" height="15" fill="rgb(250,79,13)" fg:x="61362" fg:w="119"/><text x="67.2164%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (14 samples, 0.02%)</title><rect x="67.1028%" y="165" width="0.0153%" height="15" fill="rgb(211,146,34)" fg:x="61487" fg:w="14"/><text x="67.3528%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (21 samples, 0.02%)</title><rect x="67.1028%" y="181" width="0.0229%" height="15" fill="rgb(228,22,38)" fg:x="61487" fg:w="21"/><text x="67.3528%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;pcs::multilinear_kzg::data_structures::MultilinearUniversalParams&lt;E&gt; as pcs::StructuredReferenceString&lt;E&gt;&gt;::gen_srs (15,290 samples, 16.69%)</title><rect x="50.4502%" y="197" width="16.6865%" height="15" fill="rgb(235,168,5)" fg:x="46228" fg:w="15290"/><text x="50.7002%" y="207.50">bench_relu-dc1b9b0fc918b8d..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`logup::Logup::process (15,353 samples, 16.76%)</title><rect x="50.4491%" y="213" width="16.7552%" height="15" fill="rgb(221,155,16)" fg:x="46227" fg:w="15353"/><text x="50.6991%" y="223.50">bench_relu-dc1b9b0fc918b8d..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (60 samples, 0.07%)</title><rect x="67.1389%" y="197" width="0.0655%" height="15" fill="rgb(215,215,53)" fg:x="61520" fg:w="60"/><text x="67.3889%" y="207.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (61,559 samples, 67.18%)</title><rect x="0.0295%" y="245" width="67.1814%" height="15" fill="rgb(223,4,10)" fg:x="27" fg:w="61559"/><text x="0.2795%" y="255.50">bench_relu-dc1b9b0fc918b8d4`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fo..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`zkconv::relu::prover::Prover::prove_step2_logup (15,359 samples, 16.76%)</title><rect x="50.4491%" y="229" width="16.7618%" height="15" fill="rgb(234,103,6)" fg:x="46227" fg:w="15359"/><text x="50.6991%" y="239.50">bench_relu-dc1b9b0fc918b8d..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (66 samples, 0.07%)</title><rect x="67.2578%" y="165" width="0.0720%" height="15" fill="rgb(227,97,0)" fg:x="61629" fg:w="66"/><text x="67.5078%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::prime::PrimeField&gt;::into_bigint (20 samples, 0.02%)</title><rect x="67.3298%" y="165" width="0.0218%" height="15" fill="rgb(234,150,53)" fg:x="61695" fg:w="20"/><text x="67.5798%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (120 samples, 0.13%)</title><rect x="67.3517%" y="165" width="0.1310%" height="15" fill="rgb(228,201,54)" fg:x="61715" fg:w="120"/><text x="67.6017%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (38 samples, 0.04%)</title><rect x="67.4826%" y="165" width="0.0415%" height="15" fill="rgb(222,22,37)" fg:x="61835" fg:w="38"/><text x="67.7326%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (16 samples, 0.02%)</title><rect x="68.5565%" y="101" width="0.0175%" height="15" fill="rgb(237,53,32)" fg:x="62819" fg:w="16"/><text x="68.8065%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (36 samples, 0.04%)</title><rect x="68.6569%" y="69" width="0.0393%" height="15" fill="rgb(233,25,53)" fg:x="62911" fg:w="36"/><text x="68.9069%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (31 samples, 0.03%)</title><rect x="68.6962%" y="69" width="0.0338%" height="15" fill="rgb(210,40,34)" fg:x="62947" fg:w="31"/><text x="68.9462%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (41 samples, 0.04%)</title><rect x="68.7442%" y="53" width="0.0447%" height="15" fill="rgb(241,220,44)" fg:x="62991" fg:w="41"/><text x="68.9942%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (57 samples, 0.06%)</title><rect x="68.7300%" y="69" width="0.0622%" height="15" fill="rgb(235,28,35)" fg:x="62978" fg:w="57"/><text x="68.9800%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (155 samples, 0.17%)</title><rect x="68.6318%" y="85" width="0.1692%" height="15" fill="rgb(210,56,17)" fg:x="62888" fg:w="155"/><text x="68.8818%" y="95.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`alloc::raw_vec::finish_grow (238 samples, 0.26%)</title><rect x="68.5489%" y="117" width="0.2597%" height="15" fill="rgb(224,130,29)" fg:x="62812" fg:w="238"/><text x="68.7989%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`realloc (215 samples, 0.23%)</title><rect x="68.5740%" y="101" width="0.2346%" height="15" fill="rgb(235,212,8)" fg:x="62835" fg:w="215"/><text x="68.8240%" y="111.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (271 samples, 0.30%)</title><rect x="68.5150%" y="133" width="0.2958%" height="15" fill="rgb(223,33,50)" fg:x="62781" fg:w="271"/><text x="68.7650%" y="143.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (721 samples, 0.79%)</title><rect x="68.0305%" y="149" width="0.7869%" height="15" fill="rgb(219,149,13)" fg:x="62337" fg:w="721"/><text x="68.2805%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (1,852 samples, 2.02%)</title><rect x="68.8173%" y="149" width="2.0212%" height="15" fill="rgb(250,156,29)" fg:x="63058" fg:w="1852"/><text x="69.0673%" y="159.50">b..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (448 samples, 0.49%)</title><rect x="70.8385%" y="149" width="0.4889%" height="15" fill="rgb(216,193,19)" fg:x="64910" fg:w="448"/><text x="71.0885%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (1,215 samples, 1.33%)</title><rect x="71.3274%" y="149" width="1.3260%" height="15" fill="rgb(216,135,14)" fg:x="65358" fg:w="1215"/><text x="71.5774%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (6,331 samples, 6.91%)</title><rect x="72.6534%" y="149" width="6.9092%" height="15" fill="rgb(241,47,5)" fg:x="66573" fg:w="6331"/><text x="72.9034%" y="159.50">bench_rel..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (1,013 samples, 1.11%)</title><rect x="79.5626%" y="149" width="1.1055%" height="15" fill="rgb(233,42,35)" fg:x="72904" fg:w="1013"/><text x="79.8126%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (957 samples, 1.04%)</title><rect x="80.6681%" y="149" width="1.0444%" height="15" fill="rgb(231,13,6)" fg:x="73917" fg:w="957"/><text x="80.9181%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10 samples, 0.01%)</title><rect x="81.7245%" y="149" width="0.0109%" height="15" fill="rgb(207,181,40)" fg:x="74885" fg:w="10"/><text x="81.9745%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::windowed_mul (13,037 samples, 14.23%)</title><rect x="67.5241%" y="165" width="14.2277%" height="15" fill="rgb(254,173,49)" fg:x="61873" fg:w="13037"/><text x="67.7741%" y="175.50">bench_relu-dc1b9b0fc91..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13,318 samples, 14.53%)</title><rect x="67.2305%" y="181" width="14.5344%" height="15" fill="rgb(221,1,38)" fg:x="61604" fg:w="13318"/><text x="67.4805%" y="191.50">bench_relu-dc1b9b0fc91..</text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.01%)</title><rect x="81.7529%" y="165" width="0.0120%" height="15" fill="rgb(206,124,46)" fg:x="74911" fg:w="11"/><text x="82.0029%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (122 samples, 0.13%)</title><rect x="81.7900%" y="149" width="0.1331%" height="15" fill="rgb(249,21,11)" fg:x="74945" fg:w="122"/><text x="82.0400%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (46 samples, 0.05%)</title><rect x="81.9231%" y="149" width="0.0502%" height="15" fill="rgb(222,201,40)" fg:x="75067" fg:w="46"/><text x="82.1731%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (169 samples, 0.18%)</title><rect x="81.7900%" y="165" width="0.1844%" height="15" fill="rgb(235,61,29)" fg:x="74945" fg:w="169"/><text x="82.0400%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (40 samples, 0.04%)</title><rect x="81.9744%" y="165" width="0.0437%" height="15" fill="rgb(219,207,3)" fg:x="75114" fg:w="40"/><text x="82.2244%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (63 samples, 0.07%)</title><rect x="82.0181%" y="165" width="0.0688%" height="15" fill="rgb(222,56,46)" fg:x="75154" fg:w="63"/><text x="82.2681%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (311 samples, 0.34%)</title><rect x="81.7649%" y="181" width="0.3394%" height="15" fill="rgb(239,76,54)" fg:x="74922" fg:w="311"/><text x="82.0149%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`ark_ff::fields::serial_batch_inversion_and_mul (16 samples, 0.02%)</title><rect x="82.0868%" y="165" width="0.0175%" height="15" fill="rgb(231,124,27)" fg:x="75217" fg:w="16"/><text x="82.3368%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (39 samples, 0.04%)</title><rect x="82.1043%" y="181" width="0.0426%" height="15" fill="rgb(249,195,6)" fg:x="75233" fg:w="39"/><text x="82.3543%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (757 samples, 0.83%)</title><rect x="82.1469%" y="181" width="0.8261%" height="15" fill="rgb(237,174,47)" fg:x="75272" fg:w="757"/><text x="82.3969%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (137 samples, 0.15%)</title><rect x="82.9730%" y="181" width="0.1495%" height="15" fill="rgb(206,201,31)" fg:x="76029" fg:w="137"/><text x="83.2230%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (33 samples, 0.04%)</title><rect x="83.1225%" y="181" width="0.0360%" height="15" fill="rgb(231,57,52)" fg:x="76166" fg:w="33"/><text x="83.3725%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`alloc::vec::in_place_collect::from_iter_in_place (136 samples, 0.15%)</title><rect x="83.1585%" y="181" width="0.1484%" height="15" fill="rgb(248,177,22)" fg:x="76199" fg:w="136"/><text x="83.4085%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (17 samples, 0.02%)</title><rect x="83.3102%" y="117" width="0.0186%" height="15" fill="rgb(215,211,37)" fg:x="76338" fg:w="17"/><text x="83.5602%" y="127.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 samples, 0.03%)</title><rect x="83.3102%" y="133" width="0.0273%" height="15" fill="rgb(241,128,51)" fg:x="76338" fg:w="25"/><text x="83.5602%" y="143.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (42 samples, 0.05%)</title><rect x="83.3102%" y="165" width="0.0458%" height="15" fill="rgb(227,165,31)" fg:x="76338" fg:w="42"/><text x="83.5602%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (42 samples, 0.05%)</title><rect x="83.3102%" y="149" width="0.0458%" height="15" fill="rgb(228,167,24)" fg:x="76338" fg:w="42"/><text x="83.5602%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (12 samples, 0.01%)</title><rect x="83.3561%" y="165" width="0.0131%" height="15" fill="rgb(228,143,12)" fg:x="76380" fg:w="12"/><text x="83.6061%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (11 samples, 0.01%)</title><rect x="83.3757%" y="165" width="0.0120%" height="15" fill="rgb(249,149,8)" fg:x="76398" fg:w="11"/><text x="83.6257%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (63 samples, 0.07%)</title><rect x="83.3877%" y="165" width="0.0688%" height="15" fill="rgb(243,35,44)" fg:x="76409" fg:w="63"/><text x="83.6377%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (10 samples, 0.01%)</title><rect x="83.4630%" y="165" width="0.0109%" height="15" fill="rgb(246,89,9)" fg:x="76478" fg:w="10"/><text x="83.7130%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::with_num_scalars_and_scalar_size (157 samples, 0.17%)</title><rect x="83.3081%" y="181" width="0.1713%" height="15" fill="rgb(233,213,13)" fg:x="76336" fg:w="157"/><text x="83.5581%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`pcs::utils::eq_extension (120 samples, 0.13%)</title><rect x="83.4859%" y="181" width="0.1310%" height="15" fill="rgb(233,141,41)" fg:x="76499" fg:w="120"/><text x="83.7359%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (15 samples, 0.02%)</title><rect x="83.6245%" y="181" width="0.0164%" height="15" fill="rgb(239,167,4)" fg:x="76626" fg:w="15"/><text x="83.8745%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;pcs::multilinear_kzg::data_structures::MultilinearUniversalParams&lt;E&gt; as pcs::StructuredReferenceString&lt;E&gt;&gt;::gen_srs (15,062 samples, 16.44%)</title><rect x="67.2109%" y="197" width="16.4377%" height="15" fill="rgb(209,217,16)" fg:x="61586" fg:w="15062"/><text x="67.4609%" y="207.50">bench_relu-dc1b9b0fc918b8..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`logup::Logup::process (15,123 samples, 16.50%)</title><rect x="67.2109%" y="213" width="16.5042%" height="15" fill="rgb(219,88,35)" fg:x="61586" fg:w="15123"/><text x="67.4609%" y="223.50">bench_relu-dc1b9b0fc918b8..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (59 samples, 0.06%)</title><rect x="83.6507%" y="197" width="0.0644%" height="15" fill="rgb(220,193,23)" fg:x="76650" fg:w="59"/><text x="83.9007%" y="207.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`zkconv::relu::prover::Prover::prove_step1_logup (15,128 samples, 16.51%)</title><rect x="67.2109%" y="229" width="16.5097%" height="15" fill="rgb(230,90,52)" fg:x="61586" fg:w="15128"/><text x="67.4609%" y="239.50">bench_relu-dc1b9b0fc918b8..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (47 samples, 0.05%)</title><rect x="83.7577%" y="165" width="0.0513%" height="15" fill="rgb(252,106,19)" fg:x="76748" fg:w="47"/><text x="84.0077%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::prime::PrimeField&gt;::into_bigint (23 samples, 0.03%)</title><rect x="83.8090%" y="165" width="0.0251%" height="15" fill="rgb(206,74,20)" fg:x="76795" fg:w="23"/><text x="84.0590%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (139 samples, 0.15%)</title><rect x="83.8341%" y="165" width="0.1517%" height="15" fill="rgb(230,138,44)" fg:x="76818" fg:w="139"/><text x="84.0841%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (38 samples, 0.04%)</title><rect x="83.9858%" y="165" width="0.0415%" height="15" fill="rgb(235,182,43)" fg:x="76957" fg:w="38"/><text x="84.2358%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (35 samples, 0.04%)</title><rect x="85.0356%" y="101" width="0.0382%" height="15" fill="rgb(242,16,51)" fg:x="77919" fg:w="35"/><text x="85.2856%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (38 samples, 0.04%)</title><rect x="85.1524%" y="69" width="0.0415%" height="15" fill="rgb(248,9,4)" fg:x="78026" fg:w="38"/><text x="85.4024%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (32 samples, 0.03%)</title><rect x="85.1939%" y="69" width="0.0349%" height="15" fill="rgb(210,31,22)" fg:x="78064" fg:w="32"/><text x="85.4439%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (36 samples, 0.04%)</title><rect x="85.2408%" y="53" width="0.0393%" height="15" fill="rgb(239,54,39)" fg:x="78107" fg:w="36"/><text x="85.4908%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (59 samples, 0.06%)</title><rect x="85.2288%" y="69" width="0.0644%" height="15" fill="rgb(230,99,41)" fg:x="78096" fg:w="59"/><text x="85.4788%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (161 samples, 0.18%)</title><rect x="85.1262%" y="85" width="0.1757%" height="15" fill="rgb(253,106,12)" fg:x="78002" fg:w="161"/><text x="85.3762%" y="95.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`alloc::raw_vec::finish_grow (261 samples, 0.28%)</title><rect x="85.0236%" y="117" width="0.2848%" height="15" fill="rgb(213,46,41)" fg:x="77908" fg:w="261"/><text x="85.2736%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`realloc (215 samples, 0.23%)</title><rect x="85.0738%" y="101" width="0.2346%" height="15" fill="rgb(215,133,35)" fg:x="77954" fg:w="215"/><text x="85.3238%" y="111.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (307 samples, 0.34%)</title><rect x="84.9865%" y="133" width="0.3350%" height="15" fill="rgb(213,28,5)" fg:x="77874" fg:w="307"/><text x="85.2365%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`realloc (12 samples, 0.01%)</title><rect x="85.3085%" y="117" width="0.0131%" height="15" fill="rgb(215,77,49)" fg:x="78169" fg:w="12"/><text x="85.5585%" y="127.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (751 samples, 0.82%)</title><rect x="84.5074%" y="149" width="0.8196%" height="15" fill="rgb(248,100,22)" fg:x="77435" fg:w="751"/><text x="84.7574%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (1,844 samples, 2.01%)</title><rect x="85.3270%" y="149" width="2.0124%" height="15" fill="rgb(208,67,9)" fg:x="78186" fg:w="1844"/><text x="85.5770%" y="159.50">b..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (475 samples, 0.52%)</title><rect x="87.3394%" y="149" width="0.5184%" height="15" fill="rgb(219,133,21)" fg:x="80030" fg:w="475"/><text x="87.5894%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (1,202 samples, 1.31%)</title><rect x="87.8578%" y="149" width="1.3118%" height="15" fill="rgb(246,46,29)" fg:x="80505" fg:w="1202"/><text x="88.1078%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (6,169 samples, 6.73%)</title><rect x="89.1696%" y="149" width="6.7324%" height="15" fill="rgb(246,185,52)" fg:x="81707" fg:w="6169"/><text x="89.4196%" y="159.50">bench_rel..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (1,008 samples, 1.10%)</title><rect x="95.9020%" y="149" width="1.1001%" height="15" fill="rgb(252,136,11)" fg:x="87876" fg:w="1008"/><text x="96.1520%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (1,032 samples, 1.13%)</title><rect x="97.0021%" y="149" width="1.1263%" height="15" fill="rgb(219,138,53)" fg:x="88884" fg:w="1032"/><text x="97.2521%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::windowed_mul (12,944 samples, 14.13%)</title><rect x="84.0283%" y="165" width="14.1262%" height="15" fill="rgb(211,51,23)" fg:x="76996" fg:w="12944"/><text x="84.2783%" y="175.50">bench_relu-dc1b9b0fc9..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13,220 samples, 14.43%)</title><rect x="83.7369%" y="181" width="14.4274%" height="15" fill="rgb(247,221,28)" fg:x="76729" fg:w="13220"/><text x="83.9869%" y="191.50">bench_relu-dc1b9b0fc91..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (129 samples, 0.14%)</title><rect x="98.2058%" y="149" width="0.1408%" height="15" fill="rgb(251,222,45)" fg:x="89987" fg:w="129"/><text x="98.4558%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (42 samples, 0.05%)</title><rect x="98.3466%" y="149" width="0.0458%" height="15" fill="rgb(217,162,53)" fg:x="90116" fg:w="42"/><text x="98.5966%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (172 samples, 0.19%)</title><rect x="98.2058%" y="165" width="0.1877%" height="15" fill="rgb(229,93,14)" fg:x="89987" fg:w="172"/><text x="98.4558%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (41 samples, 0.04%)</title><rect x="98.3936%" y="165" width="0.0447%" height="15" fill="rgb(209,67,49)" fg:x="90159" fg:w="41"/><text x="98.6436%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (64 samples, 0.07%)</title><rect x="98.4383%" y="165" width="0.0698%" height="15" fill="rgb(213,87,29)" fg:x="90200" fg:w="64"/><text x="98.6883%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (334 samples, 0.36%)</title><rect x="98.1644%" y="181" width="0.3645%" height="15" fill="rgb(205,151,52)" fg:x="89949" fg:w="334"/><text x="98.4144%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`ark_ff::fields::serial_batch_inversion_and_mul (19 samples, 0.02%)</title><rect x="98.5081%" y="165" width="0.0207%" height="15" fill="rgb(253,215,39)" fg:x="90264" fg:w="19"/><text x="98.7581%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (38 samples, 0.04%)</title><rect x="98.5289%" y="181" width="0.0415%" height="15" fill="rgb(221,220,41)" fg:x="90283" fg:w="38"/><text x="98.7789%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (707 samples, 0.77%)</title><rect x="98.5704%" y="181" width="0.7716%" height="15" fill="rgb(218,133,21)" fg:x="90321" fg:w="707"/><text x="98.8204%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (134 samples, 0.15%)</title><rect x="99.3419%" y="181" width="0.1462%" height="15" fill="rgb(221,193,43)" fg:x="91028" fg:w="134"/><text x="99.5919%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (32 samples, 0.03%)</title><rect x="99.4882%" y="181" width="0.0349%" height="15" fill="rgb(240,128,52)" fg:x="91162" fg:w="32"/><text x="99.7382%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`alloc::vec::in_place_collect::from_iter_in_place (79 samples, 0.09%)</title><rect x="99.5231%" y="181" width="0.0862%" height="15" fill="rgb(253,114,12)" fg:x="91194" fg:w="79"/><text x="99.7731%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (20 samples, 0.02%)</title><rect x="99.6104%" y="117" width="0.0218%" height="15" fill="rgb(215,223,47)" fg:x="91274" fg:w="20"/><text x="99.8604%" y="127.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23 samples, 0.03%)</title><rect x="99.6104%" y="133" width="0.0251%" height="15" fill="rgb(248,225,23)" fg:x="91274" fg:w="23"/><text x="99.8604%" y="143.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (40 samples, 0.04%)</title><rect x="99.6093%" y="165" width="0.0437%" height="15" fill="rgb(250,108,0)" fg:x="91273" fg:w="40"/><text x="99.8593%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (40 samples, 0.04%)</title><rect x="99.6093%" y="149" width="0.0437%" height="15" fill="rgb(228,208,7)" fg:x="91273" fg:w="40"/><text x="99.8593%" y="159.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (10 samples, 0.01%)</title><rect x="99.6628%" y="165" width="0.0109%" height="15" fill="rgb(244,45,10)" fg:x="91322" fg:w="10"/><text x="99.9128%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (12 samples, 0.01%)</title><rect x="99.6737%" y="165" width="0.0131%" height="15" fill="rgb(207,125,25)" fg:x="91332" fg:w="12"/><text x="99.9237%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (42 samples, 0.05%)</title><rect x="99.6868%" y="165" width="0.0458%" height="15" fill="rgb(210,195,18)" fg:x="91344" fg:w="42"/><text x="99.9368%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (10 samples, 0.01%)</title><rect x="99.7424%" y="165" width="0.0109%" height="15" fill="rgb(249,80,12)" fg:x="91395" fg:w="10"/><text x="99.9924%" y="175.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::with_num_scalars_and_scalar_size (142 samples, 0.15%)</title><rect x="99.6093%" y="181" width="0.1550%" height="15" fill="rgb(221,65,9)" fg:x="91273" fg:w="142"/><text x="99.8593%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`ark_ff::fields::serial_batch_inversion_and_mul (11 samples, 0.01%)</title><rect x="99.7665%" y="181" width="0.0120%" height="15" fill="rgb(235,49,36)" fg:x="91417" fg:w="11"/><text x="100.0165%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`pcs::utils::eq_extension (107 samples, 0.12%)</title><rect x="99.7785%" y="181" width="0.1168%" height="15" fill="rgb(225,32,20)" fg:x="91428" fg:w="107"/><text x="100.0285%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (16 samples, 0.02%)</title><rect x="99.9018%" y="165" width="0.0175%" height="15" fill="rgb(215,141,46)" fg:x="91541" fg:w="16"/><text x="100.1518%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (24 samples, 0.03%)</title><rect x="99.9018%" y="181" width="0.0262%" height="15" fill="rgb(250,160,47)" fg:x="91541" fg:w="24"/><text x="100.1518%" y="191.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;pcs::multilinear_kzg::data_structures::MultilinearUniversalParams&lt;E&gt; as pcs::StructuredReferenceString&lt;E&gt;&gt;::gen_srs (14,855 samples, 16.21%)</title><rect x="83.7217%" y="197" width="16.2118%" height="15" fill="rgb(216,222,40)" fg:x="76715" fg:w="14855"/><text x="83.9717%" y="207.50">bench_relu-dc1b9b0fc918b8..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`logup::Logup::process (14,907 samples, 16.27%)</title><rect x="83.7206%" y="213" width="16.2685%" height="15" fill="rgb(234,217,39)" fg:x="76714" fg:w="14907"/><text x="83.9706%" y="223.50">bench_relu-dc1b9b0fc918b8..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (49 samples, 0.05%)</title><rect x="99.9356%" y="197" width="0.0535%" height="15" fill="rgb(207,178,40)" fg:x="91572" fg:w="49"/><text x="100.1856%" y="207.50"></text></g><g><title>bench_relu-dc1b9b0fc918b8d4`main (91,602 samples, 99.97%)</title><rect x="0.0273%" y="357" width="99.9684%" height="15" fill="rgb(221,136,13)" fg:x="25" fg:w="91602"/><text x="0.2773%" y="367.50">bench_relu-dc1b9b0fc918b8d4`main</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`std::rt::lang_start_internal (91,602 samples, 99.97%)</title><rect x="0.0273%" y="341" width="99.9684%" height="15" fill="rgb(249,199,10)" fg:x="25" fg:w="91602"/><text x="0.2773%" y="351.50">bench_relu-dc1b9b0fc918b8d4`std::rt::lang_start_internal</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`std::rt::lang_start::_{{closure}} (91,602 samples, 99.97%)</title><rect x="0.0273%" y="325" width="99.9684%" height="15" fill="rgb(249,222,13)" fg:x="25" fg:w="91602"/><text x="0.2773%" y="335.50">bench_relu-dc1b9b0fc918b8d4`std::rt::lang_start::_{{closure}}</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`std::sys::backtrace::__rust_begin_short_backtrace (91,602 samples, 99.97%)</title><rect x="0.0273%" y="309" width="99.9684%" height="15" fill="rgb(244,185,38)" fg:x="25" fg:w="91602"/><text x="0.2773%" y="319.50">bench_relu-dc1b9b0fc918b8d4`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`bench_relu::main (91,602 samples, 99.97%)</title><rect x="0.0273%" y="293" width="99.9684%" height="15" fill="rgb(236,202,9)" fg:x="25" fg:w="91602"/><text x="0.2773%" y="303.50">bench_relu-dc1b9b0fc918b8d4`bench_relu::main</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (91,600 samples, 99.97%)</title><rect x="0.0295%" y="277" width="99.9662%" height="15" fill="rgb(250,229,37)" fg:x="27" fg:w="91600"/><text x="0.2795%" y="287.50">bench_relu-dc1b9b0fc918b8d4`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (91,600 samples, 99.97%)</title><rect x="0.0295%" y="261" width="99.9662%" height="15" fill="rgb(206,174,23)" fg:x="27" fg:w="91600"/><text x="0.2795%" y="271.50">bench_relu-dc1b9b0fc918b8d4`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`criterion::bencher::Bencher&lt;M&gt;::iter (30,041 samples, 32.78%)</title><rect x="67.2109%" y="245" width="32.7848%" height="15" fill="rgb(211,33,43)" fg:x="61586" fg:w="30041"/><text x="67.4609%" y="255.50">bench_relu-dc1b9b0fc918b8d4`criterion::bencher::Bench..</text></g><g><title>bench_relu-dc1b9b0fc918b8d4`zkconv::relu::prover::Prover::prove_step2_logup (14,913 samples, 16.28%)</title><rect x="83.7206%" y="229" width="16.2751%" height="15" fill="rgb(245,58,50)" fg:x="76714" fg:w="14913"/><text x="83.9706%" y="239.50">bench_relu-dc1b9b0fc918b8..</text></g><g><title>dyld`start (91,603 samples, 99.97%)</title><rect x="0.0273%" y="373" width="99.9694%" height="15" fill="rgb(244,68,36)" fg:x="25" fg:w="91603"/><text x="0.2773%" y="383.50">dyld`start</text></g><g><title>all (91,631 samples, 100%)</title><rect x="0.0000%" y="389" width="100.0000%" height="15" fill="rgb(232,229,15)" fg:x="0" fg:w="91631"/><text x="0.2500%" y="399.50"></text></g></svg></svg>