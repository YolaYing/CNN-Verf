<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="438" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="421.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="421.00"> </text><svg id="frames" x="10" width="1180" total_samples="6107"><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::from_bigint (1 samples, 0.02%)</title><rect x="0.0000%" y="293" width="0.0164%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="303.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (6 samples, 0.10%)</title><rect x="0.0491%" y="277" width="0.0982%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="6"/><text x="0.2991%" y="287.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.02%)</title><rect x="0.1474%" y="261" width="0.0164%" height="15" fill="rgb(221,193,54)" fg:x="9" fg:w="1"/><text x="0.3974%" y="271.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`once_cell::imp::initialize_or_wait (1 samples, 0.02%)</title><rect x="0.1474%" y="245" width="0.0164%" height="15" fill="rgb(248,212,6)" fg:x="9" fg:w="1"/><text x="0.3974%" y="255.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.02%)</title><rect x="0.1474%" y="229" width="0.0164%" height="15" fill="rgb(208,68,35)" fg:x="9" fg:w="1"/><text x="0.3974%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="0.1474%" y="213" width="0.0164%" height="15" fill="rgb(232,128,0)" fg:x="9" fg:w="1"/><text x="0.3974%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.02%)</title><rect x="0.1474%" y="197" width="0.0164%" height="15" fill="rgb(207,160,47)" fg:x="9" fg:w="1"/><text x="0.3974%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`once_cell::imp::initialize_or_wait (1 samples, 0.02%)</title><rect x="0.1474%" y="181" width="0.0164%" height="15" fill="rgb(228,23,34)" fg:x="9" fg:w="1"/><text x="0.3974%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.02%)</title><rect x="0.1474%" y="165" width="0.0164%" height="15" fill="rgb(218,30,26)" fg:x="9" fg:w="1"/><text x="0.3974%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`criterion_plot::version (1 samples, 0.02%)</title><rect x="0.1474%" y="149" width="0.0164%" height="15" fill="rgb(220,122,19)" fg:x="9" fg:w="1"/><text x="0.3974%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`std::sys::pal::unix::process::process_inner::_&lt;impl std::sys::pal::unix::process::process_common::Command&gt;::spawn (1 samples, 0.02%)</title><rect x="0.1474%" y="133" width="0.0164%" height="15" fill="rgb(250,228,42)" fg:x="9" fg:w="1"/><text x="0.3974%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;criterion::Criterion as core::default::Default&gt;::default (2 samples, 0.03%)</title><rect x="0.1474%" y="277" width="0.0327%" height="15" fill="rgb(240,193,28)" fg:x="9" fg:w="2"/><text x="0.3974%" y="287.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`once_cell::imp::initialize_or_wait (1 samples, 0.02%)</title><rect x="0.1637%" y="261" width="0.0164%" height="15" fill="rgb(216,20,37)" fg:x="10" fg:w="1"/><text x="0.4137%" y="271.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="0.1801%" y="277" width="0.0164%" height="15" fill="rgb(206,188,39)" fg:x="11" fg:w="1"/><text x="0.4301%" y="287.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;criterion::measurement::WallTime as criterion::measurement::Measurement&gt;::start (1 samples, 0.02%)</title><rect x="0.1965%" y="229" width="0.0164%" height="15" fill="rgb(217,207,13)" fg:x="12" fg:w="1"/><text x="0.4465%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (5 samples, 0.08%)</title><rect x="0.2129%" y="213" width="0.0819%" height="15" fill="rgb(231,73,38)" fg:x="13" fg:w="5"/><text x="0.4629%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="0.2947%" y="197" width="0.0164%" height="15" fill="rgb(225,20,46)" fg:x="18" fg:w="1"/><text x="0.5447%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::inverse (1 samples, 0.02%)</title><rect x="0.3111%" y="181" width="0.0164%" height="15" fill="rgb(210,31,41)" fg:x="19" fg:w="1"/><text x="0.5611%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::prime::PrimeField&gt;::into_bigint (1 samples, 0.02%)</title><rect x="0.3275%" y="133" width="0.0164%" height="15" fill="rgb(221,200,47)" fg:x="20" fg:w="1"/><text x="0.5775%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (3 samples, 0.05%)</title><rect x="0.5076%" y="85" width="0.0491%" height="15" fill="rgb(226,26,5)" fg:x="31" fg:w="3"/><text x="0.7576%" y="95.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (1 samples, 0.02%)</title><rect x="0.5567%" y="85" width="0.0164%" height="15" fill="rgb(249,33,26)" fg:x="34" fg:w="1"/><text x="0.8067%" y="95.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (2 samples, 0.03%)</title><rect x="0.5731%" y="69" width="0.0327%" height="15" fill="rgb(235,183,28)" fg:x="35" fg:w="2"/><text x="0.8231%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (1 samples, 0.02%)</title><rect x="0.6059%" y="69" width="0.0164%" height="15" fill="rgb(221,5,38)" fg:x="37" fg:w="1"/><text x="0.8559%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (2 samples, 0.03%)</title><rect x="0.6222%" y="69" width="0.0327%" height="15" fill="rgb(247,18,42)" fg:x="38" fg:w="2"/><text x="0.8722%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (2 samples, 0.03%)</title><rect x="0.6550%" y="69" width="0.0327%" height="15" fill="rgb(241,131,45)" fg:x="40" fg:w="2"/><text x="0.9050%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (4 samples, 0.07%)</title><rect x="0.6877%" y="69" width="0.0655%" height="15" fill="rgb(249,31,29)" fg:x="42" fg:w="4"/><text x="0.9377%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="0.7532%" y="69" width="0.0164%" height="15" fill="rgb(225,111,53)" fg:x="46" fg:w="1"/><text x="1.0032%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (1 samples, 0.02%)</title><rect x="0.7696%" y="69" width="0.0164%" height="15" fill="rgb(238,160,17)" fg:x="47" fg:w="1"/><text x="1.0196%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.23%)</title><rect x="0.5731%" y="85" width="0.2292%" height="15" fill="rgb(214,148,48)" fg:x="35" fg:w="14"/><text x="0.8231%" y="95.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (1 samples, 0.02%)</title><rect x="0.7860%" y="69" width="0.0164%" height="15" fill="rgb(232,36,49)" fg:x="48" fg:w="1"/><text x="1.0360%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 0.52%)</title><rect x="0.3439%" y="101" width="0.5240%" height="15" fill="rgb(209,103,24)" fg:x="21" fg:w="32"/><text x="0.5939%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.07%)</title><rect x="0.8024%" y="85" width="0.0655%" height="15" fill="rgb(229,88,8)" fg:x="49" fg:w="4"/><text x="1.0524%" y="95.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (34 samples, 0.56%)</title><rect x="0.3275%" y="165" width="0.5567%" height="15" fill="rgb(213,181,19)" fg:x="20" fg:w="34"/><text x="0.5775%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (34 samples, 0.56%)</title><rect x="0.3275%" y="149" width="0.5567%" height="15" fill="rgb(254,191,54)" fg:x="20" fg:w="34"/><text x="0.5775%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::VariableBaseMSM::msm_unchecked (33 samples, 0.54%)</title><rect x="0.3439%" y="133" width="0.5404%" height="15" fill="rgb(241,83,37)" fg:x="21" fg:w="33"/><text x="0.5939%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::msm_bigint_wnaf (33 samples, 0.54%)</title><rect x="0.3439%" y="117" width="0.5404%" height="15" fill="rgb(233,36,39)" fg:x="21" fg:w="33"/><text x="0.5939%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="0.8679%" y="101" width="0.0164%" height="15" fill="rgb(226,3,54)" fg:x="53" fg:w="1"/><text x="1.1179%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;pcs::hyrax_kzg::hyrax_kzg_1::HyraxKzgPCS1&lt;E&gt; as pcs::PolynomialCommitmentScheme&lt;E&gt;&gt;::commit (35 samples, 0.57%)</title><rect x="0.3275%" y="181" width="0.5731%" height="15" fill="rgb(245,192,40)" fg:x="20" fg:w="35"/><text x="0.5775%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`pcs::utils::vector_to_matrix (1 samples, 0.02%)</title><rect x="0.8842%" y="165" width="0.0164%" height="15" fill="rgb(238,167,29)" fg:x="54" fg:w="1"/><text x="1.1342%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::prime::PrimeField&gt;::into_bigint (4 samples, 0.07%)</title><rect x="0.9006%" y="149" width="0.0655%" height="15" fill="rgb(232,182,51)" fg:x="55" fg:w="4"/><text x="1.1506%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (9 samples, 0.15%)</title><rect x="0.9661%" y="149" width="0.1474%" height="15" fill="rgb(231,60,39)" fg:x="59" fg:w="9"/><text x="1.2161%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`__rdl_realloc (1 samples, 0.02%)</title><rect x="1.9158%" y="101" width="0.0164%" height="15" fill="rgb(208,69,12)" fg:x="117" fg:w="1"/><text x="2.1658%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.03%)</title><rect x="1.9322%" y="85" width="0.0327%" height="15" fill="rgb(235,93,37)" fg:x="118" fg:w="2"/><text x="2.1822%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.03%)</title><rect x="2.0468%" y="53" width="0.0327%" height="15" fill="rgb(213,116,39)" fg:x="125" fg:w="2"/><text x="2.2968%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.03%)</title><rect x="2.0960%" y="37" width="0.0327%" height="15" fill="rgb(222,207,29)" fg:x="128" fg:w="2"/><text x="2.3460%" y="47.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::finish_grow (13 samples, 0.21%)</title><rect x="1.9322%" y="101" width="0.2129%" height="15" fill="rgb(206,96,30)" fg:x="118" fg:w="13"/><text x="2.1822%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`realloc (11 samples, 0.18%)</title><rect x="1.9650%" y="85" width="0.1801%" height="15" fill="rgb(218,138,4)" fg:x="120" fg:w="11"/><text x="2.2150%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (7 samples, 0.11%)</title><rect x="2.0305%" y="69" width="0.1146%" height="15" fill="rgb(250,191,14)" fg:x="124" fg:w="7"/><text x="2.2805%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (4 samples, 0.07%)</title><rect x="2.0796%" y="53" width="0.0655%" height="15" fill="rgb(239,60,40)" fg:x="127" fg:w="4"/><text x="2.3296%" y="63.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.02%)</title><rect x="2.1287%" y="37" width="0.0164%" height="15" fill="rgb(206,27,48)" fg:x="130" fg:w="1"/><text x="2.3787%" y="47.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (18 samples, 0.29%)</title><rect x="1.8667%" y="117" width="0.2947%" height="15" fill="rgb(225,35,8)" fg:x="114" fg:w="18"/><text x="2.1167%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.02%)</title><rect x="2.1451%" y="101" width="0.0164%" height="15" fill="rgb(250,213,24)" fg:x="131" fg:w="1"/><text x="2.3951%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (41 samples, 0.67%)</title><rect x="1.5065%" y="133" width="0.6714%" height="15" fill="rgb(247,123,22)" fg:x="92" fg:w="41"/><text x="1.7565%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="2.1615%" y="117" width="0.0164%" height="15" fill="rgb(231,138,38)" fg:x="132" fg:w="1"/><text x="2.4115%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (175 samples, 2.87%)</title><rect x="2.1778%" y="133" width="2.8656%" height="15" fill="rgb(231,145,46)" fg:x="133" fg:w="175"/><text x="2.4278%" y="143.50">be..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (38 samples, 0.62%)</title><rect x="5.0434%" y="133" width="0.6222%" height="15" fill="rgb(251,118,11)" fg:x="308" fg:w="38"/><text x="5.2934%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (101 samples, 1.65%)</title><rect x="5.6656%" y="133" width="1.6538%" height="15" fill="rgb(217,147,25)" fg:x="346" fg:w="101"/><text x="5.9156%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (308 samples, 5.04%)</title><rect x="7.3195%" y="133" width="5.0434%" height="15" fill="rgb(247,81,37)" fg:x="447" fg:w="308"/><text x="7.5695%" y="143.50">bench_..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (78 samples, 1.28%)</title><rect x="12.3629%" y="133" width="1.2772%" height="15" fill="rgb(209,12,38)" fg:x="755" fg:w="78"/><text x="12.6129%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (70 samples, 1.15%)</title><rect x="13.6401%" y="133" width="1.1462%" height="15" fill="rgb(227,1,9)" fg:x="833" fg:w="70"/><text x="13.8901%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (849 samples, 13.90%)</title><rect x="0.9006%" y="165" width="13.9021%" height="15" fill="rgb(248,47,43)" fg:x="55" fg:w="849"/><text x="1.1506%" y="175.50">bench_maxpool-5e935bd..</text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::windowed_mul (836 samples, 13.69%)</title><rect x="1.1135%" y="149" width="13.6892%" height="15" fill="rgb(221,10,30)" fg:x="68" fg:w="836"/><text x="1.3635%" y="159.50">bench_maxpool-5e935bd..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="14.7863%" y="133" width="0.0164%" height="15" fill="rgb(210,229,1)" fg:x="903" fg:w="1"/><text x="15.0363%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (6 samples, 0.10%)</title><rect x="14.8191%" y="133" width="0.0982%" height="15" fill="rgb(222,148,37)" fg:x="905" fg:w="6"/><text x="15.0691%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.16%)</title><rect x="14.8191%" y="149" width="0.1637%" height="15" fill="rgb(234,67,33)" fg:x="905" fg:w="10"/><text x="15.0691%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.07%)</title><rect x="14.9173%" y="133" width="0.0655%" height="15" fill="rgb(247,98,35)" fg:x="911" fg:w="4"/><text x="15.1673%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (3 samples, 0.05%)</title><rect x="14.9828%" y="149" width="0.0491%" height="15" fill="rgb(247,138,52)" fg:x="915" fg:w="3"/><text x="15.2328%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (18 samples, 0.29%)</title><rect x="14.8027%" y="165" width="0.2947%" height="15" fill="rgb(213,79,30)" fg:x="904" fg:w="18"/><text x="15.0527%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (4 samples, 0.07%)</title><rect x="15.0319%" y="149" width="0.0655%" height="15" fill="rgb(246,177,23)" fg:x="918" fg:w="4"/><text x="15.2819%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (2 samples, 0.03%)</title><rect x="15.0974%" y="165" width="0.0327%" height="15" fill="rgb(230,62,27)" fg:x="922" fg:w="2"/><text x="15.3474%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (39 samples, 0.64%)</title><rect x="15.1302%" y="165" width="0.6386%" height="15" fill="rgb(216,154,8)" fg:x="924" fg:w="39"/><text x="15.3802%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (8 samples, 0.13%)</title><rect x="15.7688%" y="165" width="0.1310%" height="15" fill="rgb(244,35,45)" fg:x="963" fg:w="8"/><text x="16.0188%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="15.8998%" y="165" width="0.0327%" height="15" fill="rgb(251,115,12)" fg:x="971" fg:w="2"/><text x="16.1498%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.02%)</title><rect x="15.9162%" y="149" width="0.0164%" height="15" fill="rgb(240,54,50)" fg:x="972" fg:w="1"/><text x="16.1662%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="15.9162%" y="133" width="0.0164%" height="15" fill="rgb(233,84,52)" fg:x="972" fg:w="1"/><text x="16.1662%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::vec::in_place_collect::from_iter_in_place (1 samples, 0.02%)</title><rect x="15.9325%" y="165" width="0.0164%" height="15" fill="rgb(207,117,47)" fg:x="973" fg:w="1"/><text x="16.1825%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (2 samples, 0.03%)</title><rect x="15.9489%" y="101" width="0.0327%" height="15" fill="rgb(249,43,39)" fg:x="974" fg:w="2"/><text x="16.1989%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.05%)</title><rect x="15.9489%" y="117" width="0.0491%" height="15" fill="rgb(209,38,44)" fg:x="974" fg:w="3"/><text x="16.1989%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="15.9817%" y="101" width="0.0164%" height="15" fill="rgb(236,212,23)" fg:x="976" fg:w="1"/><text x="16.2317%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="15.9980%" y="117" width="0.0164%" height="15" fill="rgb(242,79,21)" fg:x="977" fg:w="1"/><text x="16.2480%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (2 samples, 0.03%)</title><rect x="16.0144%" y="117" width="0.0327%" height="15" fill="rgb(211,96,35)" fg:x="978" fg:w="2"/><text x="16.2644%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.11%)</title><rect x="15.9489%" y="149" width="0.1146%" height="15" fill="rgb(253,215,40)" fg:x="974" fg:w="7"/><text x="16.1989%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (7 samples, 0.11%)</title><rect x="15.9489%" y="133" width="0.1146%" height="15" fill="rgb(211,81,21)" fg:x="974" fg:w="7"/><text x="16.1989%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ff::fields::serial_batch_inversion_and_mul (1 samples, 0.02%)</title><rect x="16.0472%" y="117" width="0.0164%" height="15" fill="rgb(208,190,38)" fg:x="980" fg:w="1"/><text x="16.2972%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="16.0472%" y="101" width="0.0164%" height="15" fill="rgb(235,213,38)" fg:x="980" fg:w="1"/><text x="16.2972%" y="111.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="16.0472%" y="85" width="0.0164%" height="15" fill="rgb(237,122,38)" fg:x="980" fg:w="1"/><text x="16.2972%" y="95.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (2 samples, 0.03%)</title><rect x="16.0635%" y="149" width="0.0327%" height="15" fill="rgb(244,218,35)" fg:x="981" fg:w="2"/><text x="16.3135%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (2 samples, 0.03%)</title><rect x="16.0963%" y="149" width="0.0327%" height="15" fill="rgb(240,68,47)" fg:x="983" fg:w="2"/><text x="16.3463%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (2 samples, 0.03%)</title><rect x="16.1290%" y="149" width="0.0327%" height="15" fill="rgb(210,16,53)" fg:x="985" fg:w="2"/><text x="16.3790%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (4 samples, 0.07%)</title><rect x="16.1618%" y="149" width="0.0655%" height="15" fill="rgb(235,124,12)" fg:x="987" fg:w="4"/><text x="16.4118%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (3 samples, 0.05%)</title><rect x="16.2273%" y="149" width="0.0491%" height="15" fill="rgb(224,169,11)" fg:x="991" fg:w="3"/><text x="16.4773%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::with_num_scalars_and_scalar_size (24 samples, 0.39%)</title><rect x="15.9489%" y="165" width="0.3930%" height="15" fill="rgb(250,166,2)" fg:x="974" fg:w="24"/><text x="16.1989%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (4 samples, 0.07%)</title><rect x="16.2764%" y="149" width="0.0655%" height="15" fill="rgb(242,216,29)" fg:x="994" fg:w="4"/><text x="16.5264%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ff::fields::serial_batch_inversion_and_mul (1 samples, 0.02%)</title><rect x="16.3419%" y="165" width="0.0164%" height="15" fill="rgb(230,116,27)" fg:x="998" fg:w="1"/><text x="16.5919%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`pcs::utils::eq_extension (4 samples, 0.07%)</title><rect x="16.3583%" y="165" width="0.0655%" height="15" fill="rgb(228,99,48)" fg:x="999" fg:w="4"/><text x="16.6083%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.02%)</title><rect x="16.4238%" y="165" width="0.0164%" height="15" fill="rgb(253,11,6)" fg:x="1003" fg:w="1"/><text x="16.6738%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="16.4238%" y="149" width="0.0164%" height="15" fill="rgb(247,143,39)" fg:x="1003" fg:w="1"/><text x="16.6738%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;pcs::multilinear_kzg::data_structures::MultilinearUniversalParams&lt;E&gt; as pcs::StructuredReferenceString&lt;E&gt;&gt;::gen_srs (951 samples, 15.57%)</title><rect x="0.9006%" y="181" width="15.5723%" height="15" fill="rgb(236,97,10)" fg:x="55" fg:w="951"/><text x="1.1506%" y="191.50">bench_maxpool-5e935bdab8..</text></g><g><title>libsystem_malloc.dylib`free_medium (2 samples, 0.03%)</title><rect x="16.4402%" y="165" width="0.0327%" height="15" fill="rgb(233,208,19)" fg:x="1004" fg:w="2"/><text x="16.6902%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.03%)</title><rect x="16.4402%" y="149" width="0.0327%" height="15" fill="rgb(216,164,2)" fg:x="1004" fg:w="2"/><text x="16.6902%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`logup::Logup::process (989 samples, 16.19%)</title><rect x="0.3111%" y="197" width="16.1945%" height="15" fill="rgb(220,129,5)" fg:x="19" fg:w="989"/><text x="0.5611%" y="207.50">bench_maxpool-5e935bdab84..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.03%)</title><rect x="16.4729%" y="181" width="0.0327%" height="15" fill="rgb(242,17,10)" fg:x="1006" fg:w="2"/><text x="16.7229%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.05%)</title><rect x="16.5056%" y="181" width="0.0491%" height="15" fill="rgb(242,107,0)" fg:x="1008" fg:w="3"/><text x="16.7556%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.05%)</title><rect x="16.5056%" y="165" width="0.0491%" height="15" fill="rgb(251,28,31)" fg:x="1008" fg:w="3"/><text x="16.7556%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::add_assign (2 samples, 0.03%)</title><rect x="16.5548%" y="181" width="0.0327%" height="15" fill="rgb(233,223,10)" fg:x="1011" fg:w="2"/><text x="16.8048%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (46 samples, 0.75%)</title><rect x="16.5875%" y="181" width="0.7532%" height="15" fill="rgb(215,21,27)" fg:x="1013" fg:w="46"/><text x="16.8375%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (19 samples, 0.31%)</title><rect x="17.3408%" y="181" width="0.3111%" height="15" fill="rgb(232,23,21)" fg:x="1059" fg:w="19"/><text x="17.5908%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::prime::PrimeField&gt;::into_bigint (1 samples, 0.02%)</title><rect x="17.6519%" y="133" width="0.0164%" height="15" fill="rgb(244,5,23)" fg:x="1078" fg:w="1"/><text x="17.9019%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (3 samples, 0.05%)</title><rect x="18.1922%" y="85" width="0.0491%" height="15" fill="rgb(226,81,46)" fg:x="1111" fg:w="3"/><text x="18.4422%" y="95.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (1 samples, 0.02%)</title><rect x="18.2414%" y="85" width="0.0164%" height="15" fill="rgb(247,70,30)" fg:x="1114" fg:w="1"/><text x="18.4914%" y="95.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::SubAssign&lt;T&gt;&gt;::sub_assign (1 samples, 0.02%)</title><rect x="18.2577%" y="85" width="0.0164%" height="15" fill="rgb(212,68,19)" fg:x="1115" fg:w="1"/><text x="18.5077%" y="95.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (31 samples, 0.51%)</title><rect x="18.7817%" y="69" width="0.5076%" height="15" fill="rgb(240,187,13)" fg:x="1147" fg:w="31"/><text x="19.0317%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (85 samples, 1.39%)</title><rect x="19.2893%" y="69" width="1.3918%" height="15" fill="rgb(223,113,26)" fg:x="1178" fg:w="85"/><text x="19.5393%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::SubAssign&lt;T&gt;&gt;::sub_assign (90 samples, 1.47%)</title><rect x="20.6812%" y="69" width="1.4737%" height="15" fill="rgb(206,192,2)" fg:x="1263" fg:w="90"/><text x="20.9312%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (67 samples, 1.10%)</title><rect x="22.1549%" y="69" width="1.0971%" height="15" fill="rgb(241,108,4)" fg:x="1353" fg:w="67"/><text x="22.4049%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (126 samples, 2.06%)</title><rect x="23.2520%" y="69" width="2.0632%" height="15" fill="rgb(247,173,49)" fg:x="1420" fg:w="126"/><text x="23.5020%" y="79.50">b..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (439 samples, 7.19%)</title><rect x="25.3152%" y="69" width="7.1885%" height="15" fill="rgb(224,114,35)" fg:x="1546" fg:w="439"/><text x="25.5652%" y="79.50">bench_maxp..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (9 samples, 0.15%)</title><rect x="32.5037%" y="69" width="0.1474%" height="15" fill="rgb(245,159,27)" fg:x="1985" fg:w="9"/><text x="32.7537%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (92 samples, 1.51%)</title><rect x="32.6511%" y="69" width="1.5065%" height="15" fill="rgb(245,172,44)" fg:x="1994" fg:w="92"/><text x="32.9011%" y="79.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (110 samples, 1.80%)</title><rect x="34.1575%" y="69" width="1.8012%" height="15" fill="rgb(236,23,11)" fg:x="2086" fg:w="110"/><text x="34.4075%" y="79.50">b..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,081 samples, 17.70%)</title><rect x="18.2741%" y="85" width="17.7010%" height="15" fill="rgb(205,117,38)" fg:x="1116" fg:w="1081"/><text x="18.5241%" y="95.50">bench_maxpool-5e935bdab84674..</text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="35.9587%" y="69" width="0.0164%" height="15" fill="rgb(237,72,25)" fg:x="2196" fg:w="1"/><text x="36.2087%" y="79.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="35.9587%" y="53" width="0.0164%" height="15" fill="rgb(244,70,9)" fg:x="2196" fg:w="1"/><text x="36.2087%" y="63.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,131 samples, 18.52%)</title><rect x="17.6682%" y="101" width="18.5197%" height="15" fill="rgb(217,125,39)" fg:x="1079" fg:w="1131"/><text x="17.9182%" y="111.50">bench_maxpool-5e935bdab846742..</text></g><g><title>bench_maxpool-5e935bdab8467421`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (13 samples, 0.21%)</title><rect x="35.9751%" y="85" width="0.2129%" height="15" fill="rgb(235,36,10)" fg:x="2197" fg:w="13"/><text x="36.2251%" y="95.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="36.1880%" y="101" width="0.0164%" height="15" fill="rgb(251,123,47)" fg:x="2210" fg:w="1"/><text x="36.4380%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;pcs::hyrax_kzg::hyrax_kzg_1::HyraxKzgPCS1&lt;E&gt; as pcs::PolynomialCommitmentScheme&lt;E&gt;&gt;::commit (1,134 samples, 18.57%)</title><rect x="17.6519%" y="181" width="18.5689%" height="15" fill="rgb(221,13,13)" fg:x="1078" fg:w="1134"/><text x="17.9019%" y="191.50">bench_maxpool-5e935bdab846742..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,134 samples, 18.57%)</title><rect x="17.6519%" y="165" width="18.5689%" height="15" fill="rgb(238,131,9)" fg:x="1078" fg:w="1134"/><text x="17.9019%" y="175.50">bench_maxpool-5e935bdab846742..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,134 samples, 18.57%)</title><rect x="17.6519%" y="149" width="18.5689%" height="15" fill="rgb(211,50,8)" fg:x="1078" fg:w="1134"/><text x="17.9019%" y="159.50">bench_maxpool-5e935bdab846742..</text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::VariableBaseMSM::msm_unchecked (1,133 samples, 18.55%)</title><rect x="17.6682%" y="133" width="18.5525%" height="15" fill="rgb(245,182,24)" fg:x="1079" fg:w="1133"/><text x="17.9182%" y="143.50">bench_maxpool-5e935bdab846742..</text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::msm_bigint_wnaf (1,133 samples, 18.55%)</title><rect x="17.6682%" y="117" width="18.5525%" height="15" fill="rgb(242,14,37)" fg:x="1079" fg:w="1133"/><text x="17.9182%" y="127.50">bench_maxpool-5e935bdab846742..</text></g><g><title>bench_maxpool-5e935bdab8467421`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="36.2044%" y="101" width="0.0164%" height="15" fill="rgb(246,228,12)" fg:x="2211" fg:w="1"/><text x="36.4544%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (8 samples, 0.13%)</title><rect x="36.2207%" y="165" width="0.1310%" height="15" fill="rgb(213,55,15)" fg:x="2212" fg:w="8"/><text x="36.4707%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (2 samples, 0.03%)</title><rect x="36.3517%" y="165" width="0.0327%" height="15" fill="rgb(209,9,3)" fg:x="2220" fg:w="2"/><text x="36.6017%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`arithmetic::multilinear_poly::bind_vars (4 samples, 0.07%)</title><rect x="36.3845%" y="165" width="0.0655%" height="15" fill="rgb(230,59,30)" fg:x="2222" fg:w="4"/><text x="36.6345%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.02%)</title><rect x="36.4336%" y="149" width="0.0164%" height="15" fill="rgb(209,121,21)" fg:x="2225" fg:w="1"/><text x="36.6836%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_should_clear (1 samples, 0.02%)</title><rect x="36.4336%" y="133" width="0.0164%" height="15" fill="rgb(220,109,13)" fg:x="2225" fg:w="1"/><text x="36.6836%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_from_free_list (1 samples, 0.02%)</title><rect x="36.4336%" y="117" width="0.0164%" height="15" fill="rgb(232,18,1)" fg:x="2225" fg:w="1"/><text x="36.6836%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (2 samples, 0.03%)</title><rect x="36.5155%" y="117" width="0.0327%" height="15" fill="rgb(215,41,42)" fg:x="2230" fg:w="2"/><text x="36.7655%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (12 samples, 0.20%)</title><rect x="36.6301%" y="101" width="0.1965%" height="15" fill="rgb(224,123,36)" fg:x="2237" fg:w="12"/><text x="36.8801%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (8 samples, 0.13%)</title><rect x="36.8266%" y="101" width="0.1310%" height="15" fill="rgb(240,125,3)" fg:x="2249" fg:w="8"/><text x="37.0766%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::SubAssign&lt;T&gt;&gt;::sub_assign (16 samples, 0.26%)</title><rect x="36.9576%" y="101" width="0.2620%" height="15" fill="rgb(205,98,50)" fg:x="2257" fg:w="16"/><text x="37.2076%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (14 samples, 0.23%)</title><rect x="37.2196%" y="101" width="0.2292%" height="15" fill="rgb(205,185,37)" fg:x="2273" fg:w="14"/><text x="37.4696%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (37 samples, 0.61%)</title><rect x="37.4488%" y="101" width="0.6059%" height="15" fill="rgb(238,207,15)" fg:x="2287" fg:w="37"/><text x="37.6988%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (91 samples, 1.49%)</title><rect x="38.0547%" y="101" width="1.4901%" height="15" fill="rgb(213,199,42)" fg:x="2324" fg:w="91"/><text x="38.3047%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (5 samples, 0.08%)</title><rect x="39.5448%" y="101" width="0.0819%" height="15" fill="rgb(235,201,11)" fg:x="2415" fg:w="5"/><text x="39.7948%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (15 samples, 0.25%)</title><rect x="39.6267%" y="101" width="0.2456%" height="15" fill="rgb(207,46,11)" fg:x="2420" fg:w="15"/><text x="39.8767%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (224 samples, 3.67%)</title><rect x="36.5482%" y="117" width="3.6679%" height="15" fill="rgb(241,35,35)" fg:x="2232" fg:w="224"/><text x="36.7982%" y="127.50">benc..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (21 samples, 0.34%)</title><rect x="39.8723%" y="101" width="0.3439%" height="15" fill="rgb(243,32,47)" fg:x="2435" fg:w="21"/><text x="40.1223%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="40.2161%" y="117" width="0.0164%" height="15" fill="rgb(247,202,23)" fg:x="2456" fg:w="1"/><text x="40.4661%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="40.2161%" y="101" width="0.0164%" height="15" fill="rgb(219,102,11)" fg:x="2456" fg:w="1"/><text x="40.4661%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.02%)</title><rect x="40.2161%" y="85" width="0.0164%" height="15" fill="rgb(243,110,44)" fg:x="2456" fg:w="1"/><text x="40.4661%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.02%)</title><rect x="40.2161%" y="69" width="0.0164%" height="15" fill="rgb(222,74,54)" fg:x="2456" fg:w="1"/><text x="40.4661%" y="79.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="40.2161%" y="53" width="0.0164%" height="15" fill="rgb(216,99,12)" fg:x="2456" fg:w="1"/><text x="40.4661%" y="63.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (235 samples, 3.85%)</title><rect x="36.4500%" y="133" width="3.8480%" height="15" fill="rgb(226,22,26)" fg:x="2226" fg:w="235"/><text x="36.7000%" y="143.50">benc..</text></g><g><title>bench_maxpool-5e935bdab8467421`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.07%)</title><rect x="40.2325%" y="117" width="0.0655%" height="15" fill="rgb(217,163,10)" fg:x="2457" fg:w="4"/><text x="40.4825%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::VariableBaseMSM::msm_unchecked (238 samples, 3.90%)</title><rect x="36.4500%" y="165" width="3.8972%" height="15" fill="rgb(213,25,53)" fg:x="2226" fg:w="238"/><text x="36.7000%" y="175.50">benc..</text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::msm_bigint_wnaf (238 samples, 3.90%)</title><rect x="36.4500%" y="149" width="3.8972%" height="15" fill="rgb(252,105,26)" fg:x="2226" fg:w="238"/><text x="36.7000%" y="159.50">benc..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (3 samples, 0.05%)</title><rect x="40.2980%" y="133" width="0.0491%" height="15" fill="rgb(220,39,43)" fg:x="2461" fg:w="3"/><text x="40.5480%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;pcs::hyrax_kzg::hyrax_kzg_1::HyraxKzgPCS1&lt;E&gt; as pcs::PolynomialCommitmentScheme&lt;E&gt;&gt;::open (253 samples, 4.14%)</title><rect x="36.2207%" y="181" width="4.1428%" height="15" fill="rgb(229,68,48)" fg:x="2212" fg:w="253"/><text x="36.4707%" y="191.50">bench..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="40.3471%" y="165" width="0.0164%" height="15" fill="rgb(252,8,32)" fg:x="2464" fg:w="1"/><text x="40.5971%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="40.3635%" y="165" width="0.0327%" height="15" fill="rgb(223,20,43)" fg:x="2465" fg:w="2"/><text x="40.6135%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`arithmetic::multilinear_poly::new_eq (6 samples, 0.10%)</title><rect x="40.3635%" y="181" width="0.0982%" height="15" fill="rgb(229,81,49)" fg:x="2465" fg:w="6"/><text x="40.6135%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (4 samples, 0.07%)</title><rect x="40.3963%" y="165" width="0.0655%" height="15" fill="rgb(236,28,36)" fg:x="2467" fg:w="4"/><text x="40.6463%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.03%)</title><rect x="40.4618%" y="181" width="0.0327%" height="15" fill="rgb(249,185,26)" fg:x="2471" fg:w="2"/><text x="40.7118%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="40.4781%" y="165" width="0.0164%" height="15" fill="rgb(249,174,33)" fg:x="2472" fg:w="1"/><text x="40.7281%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`__rdl_alloc (1 samples, 0.02%)</title><rect x="40.9039%" y="149" width="0.0164%" height="15" fill="rgb(233,201,37)" fg:x="2498" fg:w="1"/><text x="41.1539%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="40.9203%" y="149" width="0.0164%" height="15" fill="rgb(221,78,26)" fg:x="2499" fg:w="1"/><text x="41.1703%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8 samples, 0.13%)</title><rect x="40.8711%" y="165" width="0.1310%" height="15" fill="rgb(250,127,30)" fg:x="2496" fg:w="8"/><text x="41.1211%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.07%)</title><rect x="40.9366%" y="149" width="0.0655%" height="15" fill="rgb(230,49,44)" fg:x="2500" fg:w="4"/><text x="41.1866%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`poly_iop::sum_check::SumCheck::prove (38 samples, 0.62%)</title><rect x="40.4945%" y="181" width="0.6222%" height="15" fill="rgb(229,67,23)" fg:x="2473" fg:w="38"/><text x="40.7445%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.11%)</title><rect x="41.0021%" y="165" width="0.1146%" height="15" fill="rgb(249,83,47)" fg:x="2504" fg:w="7"/><text x="41.2521%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="41.1168%" y="181" width="0.0164%" height="15" fill="rgb(215,43,3)" fg:x="2511" fg:w="1"/><text x="41.3668%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.16%)</title><rect x="41.1331%" y="181" width="0.1637%" height="15" fill="rgb(238,154,13)" fg:x="2512" fg:w="10"/><text x="41.3831%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::prove_inequalities (2,505 samples, 41.02%)</title><rect x="0.2947%" y="213" width="41.0185%" height="15" fill="rgb(219,56,2)" fg:x="18" fg:w="2505"/><text x="0.5447%" y="223.50">bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::pro..</text></g><g><title>bench_maxpool-5e935bdab8467421`logup::prover::_&lt;impl logup::Logup&gt;::prove (1,515 samples, 24.81%)</title><rect x="16.5056%" y="197" width="24.8076%" height="15" fill="rgb(233,0,4)" fg:x="1008" fg:w="1515"/><text x="16.7556%" y="207.50">bench_maxpool-5e935bdab8467421`logup::pr..</text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="41.2969%" y="181" width="0.0164%" height="15" fill="rgb(235,30,7)" fg:x="2522" fg:w="1"/><text x="41.5469%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="41.2969%" y="165" width="0.0164%" height="15" fill="rgb(250,79,13)" fg:x="2522" fg:w="1"/><text x="41.5469%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::prove_sumcheck (6 samples, 0.10%)</title><rect x="41.3132%" y="213" width="0.0982%" height="15" fill="rgb(211,146,34)" fg:x="2523" fg:w="6"/><text x="41.5632%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::construct_sumcheck_poly (1 samples, 0.02%)</title><rect x="41.3951%" y="197" width="0.0164%" height="15" fill="rgb(228,22,38)" fg:x="2528" fg:w="1"/><text x="41.6451%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::diff_mle (1 samples, 0.02%)</title><rect x="41.3951%" y="181" width="0.0164%" height="15" fill="rgb(235,168,5)" fg:x="2528" fg:w="1"/><text x="41.6451%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (1 samples, 0.02%)</title><rect x="41.4442%" y="133" width="0.0164%" height="15" fill="rgb(221,155,16)" fg:x="2531" fg:w="1"/><text x="41.6942%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::bn::g2::G2Prepared&lt;P&gt; as core::convert::From&lt;ark_ec::models::short_weierstrass::affine::Affine&lt;&lt;P as ark_ec::models::bn::BnConfig&gt;::G2Config&gt;&gt;&gt;::from (4 samples, 0.07%)</title><rect x="41.4115%" y="149" width="0.0655%" height="15" fill="rgb(215,215,53)" fg:x="2529" fg:w="4"/><text x="41.6615%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::models::bn::g2::G2HomProjective&lt;P&gt;::add_in_place (1 samples, 0.02%)</title><rect x="41.4606%" y="133" width="0.0164%" height="15" fill="rgb(223,4,10)" fg:x="2532" fg:w="1"/><text x="41.7106%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="41.4606%" y="117" width="0.0164%" height="15" fill="rgb(234,103,6)" fg:x="2532" fg:w="1"/><text x="41.7106%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (1 samples, 0.02%)</title><rect x="41.4770%" y="149" width="0.0164%" height="15" fill="rgb(227,97,0)" fg:x="2533" fg:w="1"/><text x="41.7270%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (3 samples, 0.05%)</title><rect x="41.4934%" y="133" width="0.0491%" height="15" fill="rgb(234,150,53)" fg:x="2534" fg:w="3"/><text x="41.7434%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (2 samples, 0.03%)</title><rect x="41.5097%" y="117" width="0.0327%" height="15" fill="rgb(228,201,54)" fg:x="2535" fg:w="2"/><text x="41.7597%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.16%)</title><rect x="41.4115%" y="165" width="0.1637%" height="15" fill="rgb(222,22,37)" fg:x="2529" fg:w="10"/><text x="41.6615%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::windowed_mul (5 samples, 0.08%)</title><rect x="41.4934%" y="149" width="0.0819%" height="15" fill="rgb(237,53,32)" fg:x="2534" fg:w="5"/><text x="41.7434%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (2 samples, 0.03%)</title><rect x="41.5425%" y="133" width="0.0327%" height="15" fill="rgb(233,25,53)" fg:x="2537" fg:w="2"/><text x="41.7925%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::models::short_weierstrass::SWCurveConfig::mul_affine (1 samples, 0.02%)</title><rect x="41.5752%" y="165" width="0.0164%" height="15" fill="rgb(210,40,34)" fg:x="2539" fg:w="1"/><text x="41.8252%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="41.5752%" y="149" width="0.0164%" height="15" fill="rgb(241,220,44)" fg:x="2539" fg:w="1"/><text x="41.8252%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::quadratic_extension::QuadExtField&lt;P&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::quadratic_extension::QuadExtField&lt;P&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="41.5916%" y="149" width="0.0164%" height="15" fill="rgb(235,28,35)" fg:x="2540" fg:w="1"/><text x="41.8416%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (1 samples, 0.02%)</title><rect x="41.5916%" y="133" width="0.0164%" height="15" fill="rgb(210,56,17)" fg:x="2540" fg:w="1"/><text x="41.8416%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::cubic_extension::CubicExtField&lt;P&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::cubic_extension::CubicExtField&lt;P&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="41.6080%" y="117" width="0.0164%" height="15" fill="rgb(224,130,29)" fg:x="2541" fg:w="1"/><text x="41.8580%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::quadratic_extension::QuadExtField&lt;P&gt; as ark_ff::fields::Field&gt;::square_in_place (2 samples, 0.03%)</title><rect x="41.6080%" y="133" width="0.0327%" height="15" fill="rgb(235,212,8)" fg:x="2541" fg:w="2"/><text x="41.8580%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (1 samples, 0.02%)</title><rect x="41.6244%" y="117" width="0.0164%" height="15" fill="rgb(223,33,50)" fg:x="2542" fg:w="1"/><text x="41.8744%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (2 samples, 0.03%)</title><rect x="41.6571%" y="117" width="0.0327%" height="15" fill="rgb(219,149,13)" fg:x="2544" fg:w="2"/><text x="41.9071%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (3 samples, 0.05%)</title><rect x="41.6899%" y="117" width="0.0491%" height="15" fill="rgb(250,156,29)" fg:x="2546" fg:w="3"/><text x="41.9399%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.18%)</title><rect x="41.6080%" y="149" width="0.1801%" height="15" fill="rgb(216,193,19)" fg:x="2541" fg:w="11"/><text x="41.8580%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ff::fields::models::fp12_2over3over2::_&lt;impl ark_ff::fields::models::quadratic_extension::QuadExtField&lt;ark_ff::fields::models::fp12_2over3over2::Fp12ConfigWrapper&lt;P&gt;&gt;&gt;::mul_by_034 (9 samples, 0.15%)</title><rect x="41.6407%" y="133" width="0.1474%" height="15" fill="rgb(216,135,14)" fg:x="2543" fg:w="9"/><text x="41.8907%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ff::fields::models::fp6_3over2::_&lt;impl ark_ff::fields::models::cubic_extension::CubicExtField&lt;ark_ff::fields::models::fp6_3over2::Fp6ConfigWrapper&lt;P&gt;&gt;&gt;::mul_by_01 (3 samples, 0.05%)</title><rect x="41.7390%" y="117" width="0.0491%" height="15" fill="rgb(241,47,5)" fg:x="2549" fg:w="3"/><text x="41.9890%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (1 samples, 0.02%)</title><rect x="41.7881%" y="133" width="0.0164%" height="15" fill="rgb(233,42,35)" fg:x="2552" fg:w="1"/><text x="42.0381%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::pairing::Pairing::multi_pairing (14 samples, 0.23%)</title><rect x="41.5916%" y="165" width="0.2292%" height="15" fill="rgb(231,13,6)" fg:x="2540" fg:w="14"/><text x="41.8416%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ff::fields::cyclotomic::exp_loop (2 samples, 0.03%)</title><rect x="41.7881%" y="149" width="0.0327%" height="15" fill="rgb(207,181,40)" fg:x="2552" fg:w="2"/><text x="42.0381%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::quadratic_extension::QuadExtField&lt;P&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::quadratic_extension::QuadExtField&lt;P&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="41.8045%" y="133" width="0.0164%" height="15" fill="rgb(254,173,49)" fg:x="2553" fg:w="1"/><text x="42.0545%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::cubic_extension::CubicExtField&lt;P&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::cubic_extension::CubicExtField&lt;P&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="41.8045%" y="117" width="0.0164%" height="15" fill="rgb(221,1,38)" fg:x="2553" fg:w="1"/><text x="42.0545%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="41.8209%" y="117" width="0.0164%" height="15" fill="rgb(206,124,46)" fg:x="2554" fg:w="1"/><text x="42.0709%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="41.8209%" y="101" width="0.0164%" height="15" fill="rgb(249,21,11)" fg:x="2554" fg:w="1"/><text x="42.0709%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="41.8209%" y="85" width="0.0164%" height="15" fill="rgb(222,201,40)" fg:x="2554" fg:w="1"/><text x="42.0709%" y="95.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.05%)</title><rect x="41.8209%" y="149" width="0.0491%" height="15" fill="rgb(235,61,29)" fg:x="2554" fg:w="3"/><text x="42.0709%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (3 samples, 0.05%)</title><rect x="41.8209%" y="133" width="0.0491%" height="15" fill="rgb(219,207,3)" fg:x="2554" fg:w="3"/><text x="42.0709%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ff::fields::serial_batch_inversion_and_mul (2 samples, 0.03%)</title><rect x="41.8372%" y="117" width="0.0327%" height="15" fill="rgb(222,56,46)" fg:x="2555" fg:w="2"/><text x="42.0872%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::inverse (2 samples, 0.03%)</title><rect x="41.8372%" y="101" width="0.0327%" height="15" fill="rgb(239,76,54)" fg:x="2555" fg:w="2"/><text x="42.0872%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ff::fields::AdditiveGroup&gt;::double_in_place (1 samples, 0.02%)</title><rect x="41.8700%" y="149" width="0.0164%" height="15" fill="rgb(231,124,27)" fg:x="2557" fg:w="1"/><text x="42.1200%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="41.8700%" y="133" width="0.0164%" height="15" fill="rgb(249,195,6)" fg:x="2557" fg:w="1"/><text x="42.1200%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="41.8864%" y="133" width="0.0164%" height="15" fill="rgb(237,174,47)" fg:x="2558" fg:w="1"/><text x="42.1364%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (2 samples, 0.03%)</title><rect x="41.8864%" y="149" width="0.0327%" height="15" fill="rgb(206,201,31)" fg:x="2558" fg:w="2"/><text x="42.1364%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (1 samples, 0.02%)</title><rect x="41.9027%" y="133" width="0.0164%" height="15" fill="rgb(231,57,52)" fg:x="2559" fg:w="1"/><text x="42.1527%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::with_num_scalars_and_scalar_size (7 samples, 0.11%)</title><rect x="41.8209%" y="165" width="0.1146%" height="15" fill="rgb(248,177,22)" fg:x="2554" fg:w="7"/><text x="42.0709%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (1 samples, 0.02%)</title><rect x="41.9191%" y="149" width="0.0164%" height="15" fill="rgb(215,211,37)" fg:x="2560" fg:w="1"/><text x="42.1691%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="41.9355%" y="133" width="0.0164%" height="15" fill="rgb(241,128,51)" fg:x="2561" fg:w="1"/><text x="42.1855%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="41.9355%" y="117" width="0.0164%" height="15" fill="rgb(227,165,31)" fg:x="2561" fg:w="1"/><text x="42.1855%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (1 samples, 0.02%)</title><rect x="41.9355%" y="101" width="0.0164%" height="15" fill="rgb(228,167,24)" fg:x="2561" fg:w="1"/><text x="42.1855%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (1 samples, 0.02%)</title><rect x="41.9519%" y="133" width="0.0164%" height="15" fill="rgb(228,143,12)" fg:x="2562" fg:w="1"/><text x="42.2019%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;pcs::hyrax_kzg::hyrax_kzg_1::HyraxKzgPCS1&lt;E&gt; as pcs::PolynomialCommitmentScheme&lt;E&gt;&gt;::verify (35 samples, 0.57%)</title><rect x="41.4115%" y="181" width="0.5731%" height="15" fill="rgb(249,149,8)" fg:x="2529" fg:w="35"/><text x="41.6615%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::VariableBaseMSM::msm_unchecked (3 samples, 0.05%)</title><rect x="41.9355%" y="165" width="0.0491%" height="15" fill="rgb(243,35,44)" fg:x="2561" fg:w="3"/><text x="42.1855%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::msm_bigint_wnaf (3 samples, 0.05%)</title><rect x="41.9355%" y="149" width="0.0491%" height="15" fill="rgb(246,89,9)" fg:x="2561" fg:w="3"/><text x="42.1855%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="41.9682%" y="133" width="0.0164%" height="15" fill="rgb(233,213,13)" fg:x="2563" fg:w="1"/><text x="42.2182%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`arithmetic::multilinear_poly::evaluate_on_point (2 samples, 0.03%)</title><rect x="41.9846%" y="181" width="0.0327%" height="15" fill="rgb(233,141,41)" fg:x="2564" fg:w="2"/><text x="42.2346%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (2 samples, 0.03%)</title><rect x="41.9846%" y="165" width="0.0327%" height="15" fill="rgb(239,167,4)" fg:x="2564" fg:w="2"/><text x="42.2346%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::verifier::Verifier::verify_inequalities (40 samples, 0.65%)</title><rect x="41.4115%" y="213" width="0.6550%" height="15" fill="rgb(209,217,16)" fg:x="2529" fg:w="40"/><text x="41.6615%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`logup::verifier::_&lt;impl logup::Logup&gt;::verify (40 samples, 0.65%)</title><rect x="41.4115%" y="197" width="0.6550%" height="15" fill="rgb(219,88,35)" fg:x="2529" fg:w="40"/><text x="41.6615%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ff::fields::models::fp::montgomery_backend::MontConfig::inverse (3 samples, 0.05%)</title><rect x="42.0174%" y="181" width="0.0491%" height="15" fill="rgb(220,193,23)" fg:x="2566" fg:w="3"/><text x="42.2674%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_function (2,558 samples, 41.89%)</title><rect x="0.1965%" y="277" width="41.8864%" height="15" fill="rgb(230,90,52)" fg:x="12" fg:w="2558"/><text x="0.4465%" y="287.50">bench_maxpool-5e935bdab8467421`criterion::benchmark_group::Benchmark..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,558 samples, 41.89%)</title><rect x="0.1965%" y="261" width="41.8864%" height="15" fill="rgb(252,106,19)" fg:x="12" fg:w="2558"/><text x="0.4465%" y="271.50">bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::sp..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,558 samples, 41.89%)</title><rect x="0.1965%" y="245" width="41.8864%" height="15" fill="rgb(206,74,20)" fg:x="12" fg:w="2558"/><text x="0.4465%" y="255.50">bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; ..</text></g><g><title>bench_maxpool-5e935bdab8467421`criterion::bencher::Bencher&lt;M&gt;::iter (2,557 samples, 41.87%)</title><rect x="0.2129%" y="229" width="41.8700%" height="15" fill="rgb(230,138,44)" fg:x="13" fg:w="2557"/><text x="0.4629%" y="239.50">bench_maxpool-5e935bdab8467421`criterion::bencher::Bencher&lt;M&gt;::iter</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="42.0665%" y="213" width="0.0164%" height="15" fill="rgb(235,182,43)" fg:x="2569" fg:w="1"/><text x="42.3165%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`rand::rng::Rng::gen_range (1 samples, 0.02%)</title><rect x="42.0829%" y="277" width="0.0164%" height="15" fill="rgb(242,16,51)" fg:x="2570" fg:w="1"/><text x="42.3329%" y="287.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="42.0992%" y="245" width="0.0164%" height="15" fill="rgb(248,9,4)" fg:x="2571" fg:w="1"/><text x="42.3492%" y="255.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.05%)</title><rect x="42.0992%" y="261" width="0.0491%" height="15" fill="rgb(210,31,22)" fg:x="2571" fg:w="3"/><text x="42.3492%" y="271.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ff::fields::models::fp::montgomery_backend::MontConfig::from_bigint (2 samples, 0.03%)</title><rect x="42.1156%" y="245" width="0.0327%" height="15" fill="rgb(239,54,39)" fg:x="2572" fg:w="2"/><text x="42.3656%" y="255.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (2 samples, 0.03%)</title><rect x="42.3285%" y="149" width="0.0327%" height="15" fill="rgb(230,99,41)" fg:x="2585" fg:w="2"/><text x="42.5785%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (3 samples, 0.05%)</title><rect x="42.3940%" y="133" width="0.0491%" height="15" fill="rgb(253,106,12)" fg:x="2589" fg:w="3"/><text x="42.6440%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (2 samples, 0.03%)</title><rect x="42.4431%" y="133" width="0.0327%" height="15" fill="rgb(213,46,41)" fg:x="2592" fg:w="2"/><text x="42.6931%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (1 samples, 0.02%)</title><rect x="42.4758%" y="133" width="0.0164%" height="15" fill="rgb(215,133,35)" fg:x="2594" fg:w="1"/><text x="42.7258%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (8 samples, 0.13%)</title><rect x="42.4922%" y="133" width="0.1310%" height="15" fill="rgb(213,28,5)" fg:x="2595" fg:w="8"/><text x="42.7422%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.29%)</title><rect x="42.3612%" y="149" width="0.2947%" height="15" fill="rgb(215,77,49)" fg:x="2587" fg:w="18"/><text x="42.6112%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (2 samples, 0.03%)</title><rect x="42.6232%" y="133" width="0.0327%" height="15" fill="rgb(248,100,22)" fg:x="2603" fg:w="2"/><text x="42.8732%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (33 samples, 0.54%)</title><rect x="42.1647%" y="165" width="0.5404%" height="15" fill="rgb(208,67,9)" fg:x="2575" fg:w="33"/><text x="42.4147%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.05%)</title><rect x="42.6560%" y="149" width="0.0491%" height="15" fill="rgb(219,133,21)" fg:x="2605" fg:w="3"/><text x="42.9060%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;pcs::hyrax_kzg::hyrax_kzg_1::HyraxKzgPCS1&lt;E&gt; as pcs::PolynomialCommitmentScheme&lt;E&gt;&gt;::commit (35 samples, 0.57%)</title><rect x="42.1484%" y="245" width="0.5731%" height="15" fill="rgb(246,46,29)" fg:x="2574" fg:w="35"/><text x="42.3984%" y="255.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (35 samples, 0.57%)</title><rect x="42.1484%" y="229" width="0.5731%" height="15" fill="rgb(246,185,52)" fg:x="2574" fg:w="35"/><text x="42.3984%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (35 samples, 0.57%)</title><rect x="42.1484%" y="213" width="0.5731%" height="15" fill="rgb(252,136,11)" fg:x="2574" fg:w="35"/><text x="42.3984%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::VariableBaseMSM::msm_unchecked (35 samples, 0.57%)</title><rect x="42.1484%" y="197" width="0.5731%" height="15" fill="rgb(219,138,53)" fg:x="2574" fg:w="35"/><text x="42.3984%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::msm_bigint_wnaf (34 samples, 0.56%)</title><rect x="42.1647%" y="181" width="0.5567%" height="15" fill="rgb(211,51,23)" fg:x="2575" fg:w="34"/><text x="42.4147%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="42.7051%" y="165" width="0.0164%" height="15" fill="rgb(247,221,28)" fg:x="2608" fg:w="1"/><text x="42.9551%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (7 samples, 0.11%)</title><rect x="42.7706%" y="213" width="0.1146%" height="15" fill="rgb(251,222,45)" fg:x="2612" fg:w="7"/><text x="43.0206%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::prime::PrimeField&gt;::into_bigint (1 samples, 0.02%)</title><rect x="42.8852%" y="213" width="0.0164%" height="15" fill="rgb(217,162,53)" fg:x="2619" fg:w="1"/><text x="43.1352%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (7 samples, 0.11%)</title><rect x="42.9016%" y="213" width="0.1146%" height="15" fill="rgb(229,93,14)" fg:x="2620" fg:w="7"/><text x="43.1516%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.03%)</title><rect x="43.0162%" y="213" width="0.0327%" height="15" fill="rgb(209,67,49)" fg:x="2627" fg:w="2"/><text x="43.2662%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.02%)</title><rect x="44.0478%" y="149" width="0.0164%" height="15" fill="rgb(213,87,29)" fg:x="2690" fg:w="1"/><text x="44.2978%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (1 samples, 0.02%)</title><rect x="44.1133%" y="133" width="0.0164%" height="15" fill="rgb(205,151,52)" fg:x="2694" fg:w="1"/><text x="44.3633%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="44.1624%" y="117" width="0.0164%" height="15" fill="rgb(253,215,39)" fg:x="2697" fg:w="1"/><text x="44.4124%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="44.1788%" y="117" width="0.0327%" height="15" fill="rgb(221,220,41)" fg:x="2698" fg:w="2"/><text x="44.4288%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.05%)</title><rect x="44.2116%" y="117" width="0.0491%" height="15" fill="rgb(218,133,21)" fg:x="2700" fg:w="3"/><text x="44.4616%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.02%)</title><rect x="44.2607%" y="101" width="0.0164%" height="15" fill="rgb(221,193,43)" fg:x="2703" fg:w="1"/><text x="44.5107%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.03%)</title><rect x="44.2607%" y="117" width="0.0327%" height="15" fill="rgb(240,128,52)" fg:x="2703" fg:w="2"/><text x="44.5107%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="44.2771%" y="101" width="0.0164%" height="15" fill="rgb(253,114,12)" fg:x="2704" fg:w="1"/><text x="44.5271%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (54 samples, 0.88%)</title><rect x="43.4256%" y="197" width="0.8842%" height="15" fill="rgb(215,223,47)" fg:x="2652" fg:w="54"/><text x="43.6756%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (18 samples, 0.29%)</title><rect x="44.0151%" y="181" width="0.2947%" height="15" fill="rgb(248,225,23)" fg:x="2688" fg:w="18"/><text x="44.2651%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::finish_grow (16 samples, 0.26%)</title><rect x="44.0478%" y="165" width="0.2620%" height="15" fill="rgb(250,108,0)" fg:x="2690" fg:w="16"/><text x="44.2978%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`realloc (15 samples, 0.25%)</title><rect x="44.0642%" y="149" width="0.2456%" height="15" fill="rgb(228,208,7)" fg:x="2691" fg:w="15"/><text x="44.3142%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (11 samples, 0.18%)</title><rect x="44.1297%" y="133" width="0.1801%" height="15" fill="rgb(244,45,10)" fg:x="2695" fg:w="11"/><text x="44.3797%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="44.2934%" y="117" width="0.0164%" height="15" fill="rgb(207,125,25)" fg:x="2705" fg:w="1"/><text x="44.5434%" y="127.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (145 samples, 2.37%)</title><rect x="44.3098%" y="197" width="2.3743%" height="15" fill="rgb(210,195,18)" fg:x="2706" fg:w="145"/><text x="44.5598%" y="207.50">be..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (1 samples, 0.02%)</title><rect x="46.6678%" y="181" width="0.0164%" height="15" fill="rgb(249,80,12)" fg:x="2850" fg:w="1"/><text x="46.9178%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (36 samples, 0.59%)</title><rect x="46.6841%" y="197" width="0.5895%" height="15" fill="rgb(221,65,9)" fg:x="2851" fg:w="36"/><text x="46.9341%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (102 samples, 1.67%)</title><rect x="47.2736%" y="197" width="1.6702%" height="15" fill="rgb(235,49,36)" fg:x="2887" fg:w="102"/><text x="47.5236%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (324 samples, 5.31%)</title><rect x="48.9438%" y="197" width="5.3054%" height="15" fill="rgb(225,32,20)" fg:x="2989" fg:w="324"/><text x="49.1938%" y="207.50">bench_..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (81 samples, 1.33%)</title><rect x="54.2492%" y="197" width="1.3263%" height="15" fill="rgb(215,141,46)" fg:x="3313" fg:w="81"/><text x="54.4992%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (75 samples, 1.23%)</title><rect x="55.5756%" y="197" width="1.2281%" height="15" fill="rgb(250,160,47)" fg:x="3394" fg:w="75"/><text x="55.8256%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1 samples, 0.02%)</title><rect x="56.8037%" y="197" width="0.0164%" height="15" fill="rgb(216,222,40)" fg:x="3469" fg:w="1"/><text x="57.0537%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.02%)</title><rect x="56.8200%" y="197" width="0.0164%" height="15" fill="rgb(234,217,39)" fg:x="3470" fg:w="1"/><text x="57.0700%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="56.8364%" y="197" width="0.0164%" height="15" fill="rgb(207,178,40)" fg:x="3471" fg:w="1"/><text x="57.0864%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::windowed_mul (845 samples, 13.84%)</title><rect x="43.0490%" y="213" width="13.8366%" height="15" fill="rgb(221,136,13)" fg:x="2629" fg:w="845"/><text x="43.2990%" y="223.50">bench_maxpool-5e935bd..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.03%)</title><rect x="56.8528%" y="197" width="0.0327%" height="15" fill="rgb(249,199,10)" fg:x="3472" fg:w="2"/><text x="57.1028%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (865 samples, 14.16%)</title><rect x="42.7378%" y="229" width="14.1641%" height="15" fill="rgb(249,222,13)" fg:x="2610" fg:w="865"/><text x="42.9878%" y="239.50">bench_maxpool-5e935bda..</text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="56.8855%" y="213" width="0.0164%" height="15" fill="rgb(244,185,38)" fg:x="3474" fg:w="1"/><text x="57.1355%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="56.8855%" y="197" width="0.0164%" height="15" fill="rgb(236,202,9)" fg:x="3474" fg:w="1"/><text x="57.1355%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (8 samples, 0.13%)</title><rect x="56.9183%" y="197" width="0.1310%" height="15" fill="rgb(250,229,37)" fg:x="3476" fg:w="8"/><text x="57.1683%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11 samples, 0.18%)</title><rect x="56.9183%" y="213" width="0.1801%" height="15" fill="rgb(206,174,23)" fg:x="3476" fg:w="11"/><text x="57.1683%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.05%)</title><rect x="57.0493%" y="197" width="0.0491%" height="15" fill="rgb(211,33,43)" fg:x="3484" fg:w="3"/><text x="57.2993%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (3 samples, 0.05%)</title><rect x="57.0984%" y="213" width="0.0491%" height="15" fill="rgb(245,58,50)" fg:x="3487" fg:w="3"/><text x="57.3484%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (19 samples, 0.31%)</title><rect x="56.9019%" y="229" width="0.3111%" height="15" fill="rgb(244,68,36)" fg:x="3475" fg:w="19"/><text x="57.1519%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (4 samples, 0.07%)</title><rect x="57.1475%" y="213" width="0.0655%" height="15" fill="rgb(232,229,15)" fg:x="3490" fg:w="4"/><text x="57.3975%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="57.2130%" y="229" width="0.0164%" height="15" fill="rgb(254,30,23)" fg:x="3494" fg:w="1"/><text x="57.4630%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (36 samples, 0.59%)</title><rect x="57.2294%" y="229" width="0.5895%" height="15" fill="rgb(235,160,14)" fg:x="3495" fg:w="36"/><text x="57.4794%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (4 samples, 0.07%)</title><rect x="57.8189%" y="229" width="0.0655%" height="15" fill="rgb(212,155,44)" fg:x="3531" fg:w="4"/><text x="58.0689%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="57.8844%" y="229" width="0.0164%" height="15" fill="rgb(226,2,50)" fg:x="3535" fg:w="1"/><text x="58.1344%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::vec::in_place_collect::from_iter_in_place (3 samples, 0.05%)</title><rect x="57.9008%" y="229" width="0.0491%" height="15" fill="rgb(234,177,6)" fg:x="3536" fg:w="3"/><text x="58.1508%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (2 samples, 0.03%)</title><rect x="57.9499%" y="165" width="0.0327%" height="15" fill="rgb(217,24,9)" fg:x="3539" fg:w="2"/><text x="58.1999%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.05%)</title><rect x="57.9499%" y="181" width="0.0491%" height="15" fill="rgb(220,13,46)" fg:x="3539" fg:w="3"/><text x="58.1999%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.02%)</title><rect x="57.9826%" y="165" width="0.0164%" height="15" fill="rgb(239,221,27)" fg:x="3541" fg:w="1"/><text x="58.2326%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="57.9990%" y="181" width="0.0164%" height="15" fill="rgb(222,198,25)" fg:x="3542" fg:w="1"/><text x="58.2490%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (2 samples, 0.03%)</title><rect x="58.0154%" y="181" width="0.0327%" height="15" fill="rgb(211,99,13)" fg:x="3543" fg:w="2"/><text x="58.2654%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.11%)</title><rect x="57.9499%" y="213" width="0.1146%" height="15" fill="rgb(232,111,31)" fg:x="3539" fg:w="7"/><text x="58.1999%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (7 samples, 0.11%)</title><rect x="57.9499%" y="197" width="0.1146%" height="15" fill="rgb(245,82,37)" fg:x="3539" fg:w="7"/><text x="58.1999%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ff::fields::serial_batch_inversion_and_mul (1 samples, 0.02%)</title><rect x="58.0481%" y="181" width="0.0164%" height="15" fill="rgb(227,149,46)" fg:x="3545" fg:w="1"/><text x="58.2981%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::inverse (1 samples, 0.02%)</title><rect x="58.0481%" y="165" width="0.0164%" height="15" fill="rgb(218,36,50)" fg:x="3545" fg:w="1"/><text x="58.2981%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (2 samples, 0.03%)</title><rect x="58.0645%" y="213" width="0.0327%" height="15" fill="rgb(226,80,48)" fg:x="3546" fg:w="2"/><text x="58.3145%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (3 samples, 0.05%)</title><rect x="58.0973%" y="213" width="0.0491%" height="15" fill="rgb(238,224,15)" fg:x="3548" fg:w="3"/><text x="58.3473%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (2 samples, 0.03%)</title><rect x="58.1464%" y="213" width="0.0327%" height="15" fill="rgb(241,136,10)" fg:x="3551" fg:w="2"/><text x="58.3964%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (9 samples, 0.15%)</title><rect x="58.1791%" y="213" width="0.1474%" height="15" fill="rgb(208,32,45)" fg:x="3553" fg:w="9"/><text x="58.4291%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::with_num_scalars_and_scalar_size (24 samples, 0.39%)</title><rect x="57.9499%" y="229" width="0.3930%" height="15" fill="rgb(207,135,9)" fg:x="3539" fg:w="24"/><text x="58.1999%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="58.3265%" y="213" width="0.0164%" height="15" fill="rgb(206,86,44)" fg:x="3562" fg:w="1"/><text x="58.5765%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::glv::GLVConfig::glv_mul_projective (1 samples, 0.02%)</title><rect x="58.3429%" y="229" width="0.0164%" height="15" fill="rgb(245,177,15)" fg:x="3563" fg:w="1"/><text x="58.5929%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="58.3429%" y="213" width="0.0164%" height="15" fill="rgb(206,64,50)" fg:x="3563" fg:w="1"/><text x="58.5929%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ff::fields::serial_batch_inversion_and_mul (3 samples, 0.05%)</title><rect x="58.3593%" y="229" width="0.0491%" height="15" fill="rgb(234,36,40)" fg:x="3564" fg:w="3"/><text x="58.6093%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (2 samples, 0.03%)</title><rect x="58.3756%" y="213" width="0.0327%" height="15" fill="rgb(213,64,8)" fg:x="3565" fg:w="2"/><text x="58.6256%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`madvise (2 samples, 0.03%)</title><rect x="58.3756%" y="197" width="0.0327%" height="15" fill="rgb(210,75,36)" fg:x="3565" fg:w="2"/><text x="58.6256%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`pcs::utils::eq_extension (8 samples, 0.13%)</title><rect x="58.4084%" y="229" width="0.1310%" height="15" fill="rgb(229,88,21)" fg:x="3567" fg:w="8"/><text x="58.6584%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`pcs::utils::remove_dummy_variable (1 samples, 0.02%)</title><rect x="58.5394%" y="229" width="0.0164%" height="15" fill="rgb(252,204,47)" fg:x="3575" fg:w="1"/><text x="58.7894%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="58.5394%" y="213" width="0.0164%" height="15" fill="rgb(208,77,27)" fg:x="3575" fg:w="1"/><text x="58.7894%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;pcs::multilinear_kzg::data_structures::MultilinearUniversalParams&lt;E&gt; as pcs::StructuredReferenceString&lt;E&gt;&gt;::gen_srs (968 samples, 15.85%)</title><rect x="42.7215%" y="245" width="15.8507%" height="15" fill="rgb(221,76,26)" fg:x="2609" fg:w="968"/><text x="42.9715%" y="255.50">bench_maxpool-5e935bdab8..</text></g><g><title>bench_maxpool-5e935bdab8467421`rand::rng::Rng::sample (1 samples, 0.02%)</title><rect x="58.5558%" y="229" width="0.0164%" height="15" fill="rgb(225,139,18)" fg:x="3576" fg:w="1"/><text x="58.8058%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::models::short_weierstrass::affine::Affine&lt;P&gt;::get_point_from_x_unchecked (1 samples, 0.02%)</title><rect x="58.5558%" y="213" width="0.0164%" height="15" fill="rgb(230,137,11)" fg:x="3576" fg:w="1"/><text x="58.8058%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::quadratic_extension::QuadExtField&lt;P&gt; as ark_ff::fields::Field&gt;::square_in_place (1 samples, 0.02%)</title><rect x="58.5558%" y="197" width="0.0164%" height="15" fill="rgb(212,28,1)" fg:x="3576" fg:w="1"/><text x="58.8058%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::process_inequalities (1,009 samples, 16.52%)</title><rect x="42.0992%" y="277" width="16.5220%" height="15" fill="rgb(248,164,17)" fg:x="2571" fg:w="1009"/><text x="42.3492%" y="287.50">bench_maxpool-5e935bdab846..</text></g><g><title>bench_maxpool-5e935bdab8467421`logup::Logup::process (1,006 samples, 16.47%)</title><rect x="42.1484%" y="261" width="16.4729%" height="15" fill="rgb(222,171,42)" fg:x="2574" fg:w="1006"/><text x="42.3984%" y="271.50">bench_maxpool-5e935bdab84..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.05%)</title><rect x="58.5721%" y="245" width="0.0491%" height="15" fill="rgb(243,84,45)" fg:x="3577" fg:w="3"/><text x="58.8221%" y="255.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="58.6213%" y="261" width="0.0164%" height="15" fill="rgb(252,49,23)" fg:x="3580" fg:w="1"/><text x="58.8713%" y="271.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (1 samples, 0.02%)</title><rect x="58.8505%" y="149" width="0.0164%" height="15" fill="rgb(215,19,7)" fg:x="3594" fg:w="1"/><text x="59.1005%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (2 samples, 0.03%)</title><rect x="58.9487%" y="133" width="0.0327%" height="15" fill="rgb(238,81,41)" fg:x="3600" fg:w="2"/><text x="59.1987%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (1 samples, 0.02%)</title><rect x="58.9815%" y="133" width="0.0164%" height="15" fill="rgb(210,199,37)" fg:x="3602" fg:w="1"/><text x="59.2315%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (5 samples, 0.08%)</title><rect x="58.9979%" y="133" width="0.0819%" height="15" fill="rgb(244,192,49)" fg:x="3603" fg:w="5"/><text x="59.2479%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (5 samples, 0.08%)</title><rect x="59.0797%" y="133" width="0.0819%" height="15" fill="rgb(226,211,11)" fg:x="3608" fg:w="5"/><text x="59.3297%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (19 samples, 0.31%)</title><rect x="58.8669%" y="149" width="0.3111%" height="15" fill="rgb(236,162,54)" fg:x="3595" fg:w="19"/><text x="59.1169%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (1 samples, 0.02%)</title><rect x="59.1616%" y="133" width="0.0164%" height="15" fill="rgb(220,229,9)" fg:x="3613" fg:w="1"/><text x="59.4116%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;pcs::hyrax_kzg::hyrax_kzg_1::HyraxKzgPCS1&lt;E&gt; as pcs::PolynomialCommitmentScheme&lt;E&gt;&gt;::commit (38 samples, 0.62%)</title><rect x="58.6376%" y="245" width="0.6222%" height="15" fill="rgb(250,87,22)" fg:x="3581" fg:w="38"/><text x="58.8876%" y="255.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (38 samples, 0.62%)</title><rect x="58.6376%" y="229" width="0.6222%" height="15" fill="rgb(239,43,17)" fg:x="3581" fg:w="38"/><text x="58.8876%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (38 samples, 0.62%)</title><rect x="58.6376%" y="213" width="0.6222%" height="15" fill="rgb(231,177,25)" fg:x="3581" fg:w="38"/><text x="58.8876%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::VariableBaseMSM::msm_unchecked (38 samples, 0.62%)</title><rect x="58.6376%" y="197" width="0.6222%" height="15" fill="rgb(219,179,1)" fg:x="3581" fg:w="38"/><text x="58.8876%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::msm_bigint_wnaf (38 samples, 0.62%)</title><rect x="58.6376%" y="181" width="0.6222%" height="15" fill="rgb(238,219,53)" fg:x="3581" fg:w="38"/><text x="58.8876%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (38 samples, 0.62%)</title><rect x="58.6376%" y="165" width="0.6222%" height="15" fill="rgb(232,167,36)" fg:x="3581" fg:w="38"/><text x="58.8876%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.08%)</title><rect x="59.1780%" y="149" width="0.0819%" height="15" fill="rgb(244,19,51)" fg:x="3614" fg:w="5"/><text x="59.4280%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (8 samples, 0.13%)</title><rect x="59.3090%" y="213" width="0.1310%" height="15" fill="rgb(224,6,22)" fg:x="3622" fg:w="8"/><text x="59.5590%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::prime::PrimeField&gt;::into_bigint (2 samples, 0.03%)</title><rect x="59.4400%" y="213" width="0.0327%" height="15" fill="rgb(224,145,5)" fg:x="3630" fg:w="2"/><text x="59.6900%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (8 samples, 0.13%)</title><rect x="59.4727%" y="213" width="0.1310%" height="15" fill="rgb(234,130,49)" fg:x="3632" fg:w="8"/><text x="59.7227%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.03%)</title><rect x="59.6037%" y="213" width="0.0327%" height="15" fill="rgb(254,6,2)" fg:x="3640" fg:w="2"/><text x="59.8537%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`__rdl_realloc (1 samples, 0.02%)</title><rect x="60.5371%" y="165" width="0.0164%" height="15" fill="rgb(208,96,46)" fg:x="3697" fg:w="1"/><text x="60.7871%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.02%)</title><rect x="60.5535%" y="149" width="0.0164%" height="15" fill="rgb(239,3,39)" fg:x="3698" fg:w="1"/><text x="60.8035%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.02%)</title><rect x="60.5862%" y="117" width="0.0164%" height="15" fill="rgb(233,210,1)" fg:x="3700" fg:w="1"/><text x="60.8362%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.02%)</title><rect x="60.6026%" y="117" width="0.0164%" height="15" fill="rgb(244,137,37)" fg:x="3701" fg:w="1"/><text x="60.8526%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.05%)</title><rect x="60.6353%" y="101" width="0.0491%" height="15" fill="rgb(240,136,2)" fg:x="3703" fg:w="3"/><text x="60.8853%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (12 samples, 0.20%)</title><rect x="60.5207%" y="181" width="0.1965%" height="15" fill="rgb(239,18,37)" fg:x="3696" fg:w="12"/><text x="60.7707%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::finish_grow (10 samples, 0.16%)</title><rect x="60.5535%" y="165" width="0.1637%" height="15" fill="rgb(218,185,22)" fg:x="3698" fg:w="10"/><text x="60.8035%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`realloc (9 samples, 0.15%)</title><rect x="60.5698%" y="149" width="0.1474%" height="15" fill="rgb(225,218,4)" fg:x="3699" fg:w="9"/><text x="60.8198%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (9 samples, 0.15%)</title><rect x="60.5698%" y="133" width="0.1474%" height="15" fill="rgb(230,182,32)" fg:x="3699" fg:w="9"/><text x="60.8198%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (6 samples, 0.10%)</title><rect x="60.6190%" y="117" width="0.0982%" height="15" fill="rgb(242,56,43)" fg:x="3702" fg:w="6"/><text x="60.8690%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.03%)</title><rect x="60.6845%" y="101" width="0.0327%" height="15" fill="rgb(233,99,24)" fg:x="3706" fg:w="2"/><text x="60.9345%" y="111.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (47 samples, 0.77%)</title><rect x="59.9640%" y="197" width="0.7696%" height="15" fill="rgb(234,209,42)" fg:x="3662" fg:w="47"/><text x="60.2140%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="60.7172%" y="181" width="0.0164%" height="15" fill="rgb(227,7,12)" fg:x="3708" fg:w="1"/><text x="60.9672%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (153 samples, 2.51%)</title><rect x="60.7336%" y="197" width="2.5053%" height="15" fill="rgb(245,203,43)" fg:x="3709" fg:w="153"/><text x="60.9836%" y="207.50">be..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (40 samples, 0.65%)</title><rect x="63.2389%" y="197" width="0.6550%" height="15" fill="rgb(238,205,33)" fg:x="3862" fg:w="40"/><text x="63.4889%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (97 samples, 1.59%)</title><rect x="63.8939%" y="197" width="1.5883%" height="15" fill="rgb(231,56,7)" fg:x="3902" fg:w="97"/><text x="64.1439%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (310 samples, 5.08%)</title><rect x="65.4822%" y="197" width="5.0761%" height="15" fill="rgb(244,186,29)" fg:x="3999" fg:w="310"/><text x="65.7322%" y="207.50">bench_..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (73 samples, 1.20%)</title><rect x="70.5584%" y="197" width="1.1953%" height="15" fill="rgb(234,111,31)" fg:x="4309" fg:w="73"/><text x="70.8084%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (85 samples, 1.39%)</title><rect x="71.7537%" y="197" width="1.3918%" height="15" fill="rgb(241,149,10)" fg:x="4382" fg:w="85"/><text x="72.0037%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::windowed_mul (826 samples, 13.53%)</title><rect x="59.6365%" y="213" width="13.5255%" height="15" fill="rgb(249,206,44)" fg:x="3642" fg:w="826"/><text x="59.8865%" y="223.50">bench_maxpool-5e935b..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.02%)</title><rect x="73.1456%" y="197" width="0.0164%" height="15" fill="rgb(251,153,30)" fg:x="4467" fg:w="1"/><text x="73.3956%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (851 samples, 13.93%)</title><rect x="59.2599%" y="229" width="13.9348%" height="15" fill="rgb(239,152,38)" fg:x="3619" fg:w="851"/><text x="59.5099%" y="239.50">bench_maxpool-5e935bd..</text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.03%)</title><rect x="73.1619%" y="213" width="0.0327%" height="15" fill="rgb(249,139,47)" fg:x="4468" fg:w="2"/><text x="73.4119%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (8 samples, 0.13%)</title><rect x="73.2274%" y="197" width="0.1310%" height="15" fill="rgb(244,64,35)" fg:x="4472" fg:w="8"/><text x="73.4774%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10 samples, 0.16%)</title><rect x="73.2274%" y="213" width="0.1637%" height="15" fill="rgb(216,46,15)" fg:x="4472" fg:w="10"/><text x="73.4774%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.03%)</title><rect x="73.3584%" y="197" width="0.0327%" height="15" fill="rgb(250,74,19)" fg:x="4480" fg:w="2"/><text x="73.6084%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (2 samples, 0.03%)</title><rect x="73.3912%" y="213" width="0.0327%" height="15" fill="rgb(249,42,33)" fg:x="4482" fg:w="2"/><text x="73.6412%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (19 samples, 0.31%)</title><rect x="73.1947%" y="229" width="0.3111%" height="15" fill="rgb(242,149,17)" fg:x="4470" fg:w="19"/><text x="73.4447%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (5 samples, 0.08%)</title><rect x="73.4239%" y="213" width="0.0819%" height="15" fill="rgb(244,29,21)" fg:x="4484" fg:w="5"/><text x="73.6739%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (3 samples, 0.05%)</title><rect x="73.5058%" y="229" width="0.0491%" height="15" fill="rgb(220,130,37)" fg:x="4489" fg:w="3"/><text x="73.7558%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (35 samples, 0.57%)</title><rect x="73.5549%" y="229" width="0.5731%" height="15" fill="rgb(211,67,2)" fg:x="4492" fg:w="35"/><text x="73.8049%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (10 samples, 0.16%)</title><rect x="74.1280%" y="229" width="0.1637%" height="15" fill="rgb(235,68,52)" fg:x="4527" fg:w="10"/><text x="74.3780%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::vec::in_place_collect::_&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.03%)</title><rect x="74.2918%" y="229" width="0.0327%" height="15" fill="rgb(246,142,3)" fg:x="4537" fg:w="2"/><text x="74.5418%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (1 samples, 0.02%)</title><rect x="74.3082%" y="213" width="0.0164%" height="15" fill="rgb(241,25,7)" fg:x="4538" fg:w="1"/><text x="74.5582%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="74.3082%" y="197" width="0.0164%" height="15" fill="rgb(242,119,39)" fg:x="4538" fg:w="1"/><text x="74.5582%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (3 samples, 0.05%)</title><rect x="74.3409%" y="165" width="0.0491%" height="15" fill="rgb(241,98,45)" fg:x="4540" fg:w="3"/><text x="74.5909%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.07%)</title><rect x="74.3409%" y="181" width="0.0655%" height="15" fill="rgb(254,28,30)" fg:x="4540" fg:w="4"/><text x="74.5909%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (1 samples, 0.02%)</title><rect x="74.3900%" y="165" width="0.0164%" height="15" fill="rgb(241,142,54)" fg:x="4543" fg:w="1"/><text x="74.6400%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (2 samples, 0.03%)</title><rect x="74.4064%" y="181" width="0.0327%" height="15" fill="rgb(222,85,15)" fg:x="4544" fg:w="2"/><text x="74.6564%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="74.4392%" y="181" width="0.0164%" height="15" fill="rgb(210,85,47)" fg:x="4546" fg:w="1"/><text x="74.6892%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.13%)</title><rect x="74.3409%" y="213" width="0.1310%" height="15" fill="rgb(224,206,25)" fg:x="4540" fg:w="8"/><text x="74.5909%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ec::scalar_mul::ScalarMul&gt;::batch_convert_to_mul_base (8 samples, 0.13%)</title><rect x="74.3409%" y="197" width="0.1310%" height="15" fill="rgb(243,201,19)" fg:x="4540" fg:w="8"/><text x="74.5909%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ff::fields::serial_batch_inversion_and_mul (1 samples, 0.02%)</title><rect x="74.4555%" y="181" width="0.0164%" height="15" fill="rgb(236,59,4)" fg:x="4547" fg:w="1"/><text x="74.7055%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="74.4555%" y="165" width="0.0164%" height="15" fill="rgb(254,179,45)" fg:x="4547" fg:w="1"/><text x="74.7055%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="74.4555%" y="149" width="0.0164%" height="15" fill="rgb(226,14,10)" fg:x="4547" fg:w="1"/><text x="74.7055%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (1 samples, 0.02%)</title><rect x="74.4719%" y="213" width="0.0164%" height="15" fill="rgb(244,27,41)" fg:x="4548" fg:w="1"/><text x="74.7219%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (1 samples, 0.02%)</title><rect x="74.4883%" y="213" width="0.0164%" height="15" fill="rgb(235,35,32)" fg:x="4549" fg:w="1"/><text x="74.7383%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (1 samples, 0.02%)</title><rect x="74.5047%" y="213" width="0.0164%" height="15" fill="rgb(218,68,31)" fg:x="4550" fg:w="1"/><text x="74.7547%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (9 samples, 0.15%)</title><rect x="74.5210%" y="213" width="0.1474%" height="15" fill="rgb(207,120,37)" fg:x="4551" fg:w="9"/><text x="74.7710%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (2 samples, 0.03%)</title><rect x="74.6684%" y="213" width="0.0327%" height="15" fill="rgb(227,98,0)" fg:x="4560" fg:w="2"/><text x="74.9184%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::BatchMulPreprocessing&lt;T&gt;::with_num_scalars_and_scalar_size (24 samples, 0.39%)</title><rect x="74.3245%" y="229" width="0.3930%" height="15" fill="rgb(207,7,3)" fg:x="4539" fg:w="24"/><text x="74.5745%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (1 samples, 0.02%)</title><rect x="74.7012%" y="213" width="0.0164%" height="15" fill="rgb(206,98,19)" fg:x="4562" fg:w="1"/><text x="74.9512%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::glv::GLVConfig::glv_mul_projective (1 samples, 0.02%)</title><rect x="74.7175%" y="229" width="0.0164%" height="15" fill="rgb(217,5,26)" fg:x="4563" fg:w="1"/><text x="74.9675%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ff::fields::AdditiveGroup&gt;::double_in_place (1 samples, 0.02%)</title><rect x="74.7175%" y="213" width="0.0164%" height="15" fill="rgb(235,190,38)" fg:x="4563" fg:w="1"/><text x="74.9675%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`pcs::utils::eq_extension (9 samples, 0.15%)</title><rect x="74.7339%" y="229" width="0.1474%" height="15" fill="rgb(247,86,24)" fg:x="4564" fg:w="9"/><text x="74.9839%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;pcs::multilinear_kzg::data_structures::MultilinearUniversalParams&lt;E&gt; as pcs::StructuredReferenceString&lt;E&gt;&gt;::gen_srs (955 samples, 15.64%)</title><rect x="59.2599%" y="245" width="15.6378%" height="15" fill="rgb(205,101,16)" fg:x="3619" fg:w="955"/><text x="59.5099%" y="255.50">bench_maxpool-5e935bdab8..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="74.8813%" y="229" width="0.0164%" height="15" fill="rgb(246,168,33)" fg:x="4573" fg:w="1"/><text x="75.1313%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`logup::Logup::process (995 samples, 16.29%)</title><rect x="58.6376%" y="261" width="16.2928%" height="15" fill="rgb(231,114,1)" fg:x="3581" fg:w="995"/><text x="58.8876%" y="271.50">bench_maxpool-5e935bdab84..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.03%)</title><rect x="74.8977%" y="245" width="0.0327%" height="15" fill="rgb(207,184,53)" fg:x="4574" fg:w="2"/><text x="75.1477%" y="255.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.02%)</title><rect x="74.9468%" y="245" width="0.0164%" height="15" fill="rgb(224,95,51)" fg:x="4577" fg:w="1"/><text x="75.1968%" y="255.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="74.9468%" y="229" width="0.0164%" height="15" fill="rgb(212,188,45)" fg:x="4577" fg:w="1"/><text x="75.1968%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::add_assign (1 samples, 0.02%)</title><rect x="74.9632%" y="245" width="0.0164%" height="15" fill="rgb(223,154,38)" fg:x="4578" fg:w="1"/><text x="75.2132%" y="255.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (46 samples, 0.75%)</title><rect x="74.9795%" y="245" width="0.7532%" height="15" fill="rgb(251,22,52)" fg:x="4579" fg:w="46"/><text x="75.2295%" y="255.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (5 samples, 0.08%)</title><rect x="75.7328%" y="245" width="0.0819%" height="15" fill="rgb(229,209,22)" fg:x="4625" fg:w="5"/><text x="75.9828%" y="255.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::prime::PrimeField&gt;::into_bigint (2 samples, 0.03%)</title><rect x="75.8146%" y="197" width="0.0327%" height="15" fill="rgb(234,138,34)" fg:x="4630" fg:w="2"/><text x="76.0646%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (3 samples, 0.05%)</title><rect x="76.4369%" y="149" width="0.0491%" height="15" fill="rgb(212,95,11)" fg:x="4668" fg:w="3"/><text x="76.6869%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (3 samples, 0.05%)</title><rect x="76.4860%" y="149" width="0.0491%" height="15" fill="rgb(240,179,47)" fg:x="4671" fg:w="3"/><text x="76.7360%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::SubAssign&lt;T&gt;&gt;::sub_assign (2 samples, 0.03%)</title><rect x="76.5351%" y="149" width="0.0327%" height="15" fill="rgb(240,163,11)" fg:x="4674" fg:w="2"/><text x="76.7851%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (32 samples, 0.52%)</title><rect x="77.0591%" y="133" width="0.5240%" height="15" fill="rgb(236,37,12)" fg:x="4706" fg:w="32"/><text x="77.3091%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (92 samples, 1.51%)</title><rect x="77.5831%" y="133" width="1.5065%" height="15" fill="rgb(232,164,16)" fg:x="4738" fg:w="92"/><text x="77.8331%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::SubAssign&lt;T&gt;&gt;::sub_assign (81 samples, 1.33%)</title><rect x="79.0896%" y="133" width="1.3263%" height="15" fill="rgb(244,205,15)" fg:x="4830" fg:w="81"/><text x="79.3396%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (54 samples, 0.88%)</title><rect x="80.4159%" y="133" width="0.8842%" height="15" fill="rgb(223,117,47)" fg:x="4911" fg:w="54"/><text x="80.6659%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (117 samples, 1.92%)</title><rect x="81.3001%" y="133" width="1.9158%" height="15" fill="rgb(244,107,35)" fg:x="4965" fg:w="117"/><text x="81.5501%" y="143.50">b..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (464 samples, 7.60%)</title><rect x="83.2160%" y="133" width="7.5978%" height="15" fill="rgb(205,140,8)" fg:x="5082" fg:w="464"/><text x="83.4660%" y="143.50">bench_maxp..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (5 samples, 0.08%)</title><rect x="90.8138%" y="133" width="0.0819%" height="15" fill="rgb(228,84,46)" fg:x="5546" fg:w="5"/><text x="91.0638%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (103 samples, 1.69%)</title><rect x="90.8957%" y="133" width="1.6866%" height="15" fill="rgb(254,188,9)" fg:x="5551" fg:w="103"/><text x="91.1457%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,083 samples, 17.73%)</title><rect x="76.5679%" y="149" width="17.7337%" height="15" fill="rgb(206,112,54)" fg:x="4676" fg:w="1083"/><text x="76.8179%" y="159.50">bench_maxpool-5e935bdab84674..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (105 samples, 1.72%)</title><rect x="92.5823%" y="133" width="1.7193%" height="15" fill="rgb(216,84,49)" fg:x="5654" fg:w="105"/><text x="92.8323%" y="143.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,140 samples, 18.67%)</title><rect x="75.8146%" y="229" width="18.6671%" height="15" fill="rgb(214,194,35)" fg:x="4630" fg:w="1140"/><text x="76.0646%" y="239.50">bench_maxpool-5e935bdab846742..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,140 samples, 18.67%)</title><rect x="75.8146%" y="213" width="18.6671%" height="15" fill="rgb(249,28,3)" fg:x="4630" fg:w="1140"/><text x="76.0646%" y="223.50">bench_maxpool-5e935bdab846742..</text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::VariableBaseMSM::msm_unchecked (1,138 samples, 18.63%)</title><rect x="75.8474%" y="197" width="18.6344%" height="15" fill="rgb(222,56,52)" fg:x="4632" fg:w="1138"/><text x="76.0974%" y="207.50">bench_maxpool-5e935bdab846742..</text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::msm_bigint_wnaf (1,138 samples, 18.63%)</title><rect x="75.8474%" y="181" width="18.6344%" height="15" fill="rgb(245,217,50)" fg:x="4632" fg:w="1138"/><text x="76.0974%" y="191.50">bench_maxpool-5e935bdab846742..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1,138 samples, 18.63%)</title><rect x="75.8474%" y="165" width="18.6344%" height="15" fill="rgb(213,201,24)" fg:x="4632" fg:w="1138"/><text x="76.0974%" y="175.50">bench_maxpool-5e935bdab846742..</text></g><g><title>bench_maxpool-5e935bdab8467421`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 0.18%)</title><rect x="94.3016%" y="149" width="0.1801%" height="15" fill="rgb(248,116,28)" fg:x="5759" fg:w="11"/><text x="94.5516%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;pcs::hyrax_kzg::hyrax_kzg_1::HyraxKzgPCS1&lt;E&gt; as pcs::PolynomialCommitmentScheme&lt;E&gt;&gt;::commit (1,142 samples, 18.70%)</title><rect x="75.8146%" y="245" width="18.6999%" height="15" fill="rgb(219,72,43)" fg:x="4630" fg:w="1142"/><text x="76.0646%" y="255.50">bench_maxpool-5e935bdab846742..</text></g><g><title>bench_maxpool-5e935bdab8467421`pcs::utils::vector_to_matrix (2 samples, 0.03%)</title><rect x="94.4817%" y="229" width="0.0327%" height="15" fill="rgb(209,138,14)" fg:x="5770" fg:w="2"/><text x="94.7317%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="94.4981%" y="213" width="0.0164%" height="15" fill="rgb(222,18,33)" fg:x="5771" fg:w="1"/><text x="94.7481%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (4 samples, 0.07%)</title><rect x="94.5309%" y="229" width="0.0655%" height="15" fill="rgb(213,199,7)" fg:x="5773" fg:w="4"/><text x="94.7809%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (4 samples, 0.07%)</title><rect x="94.5964%" y="229" width="0.0655%" height="15" fill="rgb(250,110,10)" fg:x="5777" fg:w="4"/><text x="94.8464%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`arithmetic::multilinear_poly::bind_vars (3 samples, 0.05%)</title><rect x="94.6619%" y="229" width="0.0491%" height="15" fill="rgb(248,123,6)" fg:x="5781" fg:w="3"/><text x="94.9119%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (2 samples, 0.03%)</title><rect x="94.7929%" y="181" width="0.0327%" height="15" fill="rgb(206,91,31)" fg:x="5789" fg:w="2"/><text x="95.0429%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;&amp;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt;&gt;&gt;::add_assign (11 samples, 0.18%)</title><rect x="94.8584%" y="165" width="0.1801%" height="15" fill="rgb(211,154,13)" fg:x="5793" fg:w="11"/><text x="95.1084%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (1 samples, 0.02%)</title><rect x="95.0221%" y="149" width="0.0164%" height="15" fill="rgb(225,148,7)" fg:x="5803" fg:w="1"/><text x="95.2721%" y="159.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::AddAssign&lt;T&gt;&gt;::add_assign (12 samples, 0.20%)</title><rect x="95.0385%" y="165" width="0.1965%" height="15" fill="rgb(220,160,43)" fg:x="5804" fg:w="12"/><text x="95.2885%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as core::ops::arith::SubAssign&lt;T&gt;&gt;::sub_assign (9 samples, 0.15%)</title><rect x="95.2350%" y="165" width="0.1474%" height="15" fill="rgb(213,52,39)" fg:x="5816" fg:w="9"/><text x="95.4850%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square (16 samples, 0.26%)</title><rect x="95.3823%" y="165" width="0.2620%" height="15" fill="rgb(243,137,7)" fg:x="5825" fg:w="16"/><text x="95.6323%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (31 samples, 0.51%)</title><rect x="95.6443%" y="165" width="0.5076%" height="15" fill="rgb(230,79,13)" fg:x="5841" fg:w="31"/><text x="95.8943%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (86 samples, 1.41%)</title><rect x="96.1520%" y="165" width="1.4082%" height="15" fill="rgb(247,105,23)" fg:x="5872" fg:w="86"/><text x="96.4020%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (7 samples, 0.11%)</title><rect x="97.5602%" y="165" width="0.1146%" height="15" fill="rgb(223,179,41)" fg:x="5958" fg:w="7"/><text x="97.8102%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (27 samples, 0.44%)</title><rect x="97.6748%" y="165" width="0.4421%" height="15" fill="rgb(218,9,34)" fg:x="5965" fg:w="27"/><text x="97.9248%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (221 samples, 3.62%)</title><rect x="94.8256%" y="181" width="3.6188%" height="15" fill="rgb(222,106,8)" fg:x="5791" fg:w="221"/><text x="95.0756%" y="191.50">benc..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sum_of_products (20 samples, 0.33%)</title><rect x="98.1169%" y="165" width="0.3275%" height="15" fill="rgb(211,220,0)" fg:x="5992" fg:w="20"/><text x="98.3669%" y="175.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (230 samples, 3.77%)</title><rect x="94.7110%" y="197" width="3.7662%" height="15" fill="rgb(229,52,16)" fg:x="5784" fg:w="230"/><text x="94.9610%" y="207.50">benc..</text></g><g><title>bench_maxpool-5e935bdab8467421`core::ops::function::impls::_&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (2 samples, 0.03%)</title><rect x="98.4444%" y="181" width="0.0327%" height="15" fill="rgb(212,155,18)" fg:x="6012" fg:w="2"/><text x="98.6944%" y="191.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ec::models::short_weierstrass::group::Projective&lt;P&gt; as ark_ff::fields::AdditiveGroup&gt;::double_in_place (1 samples, 0.02%)</title><rect x="98.4772%" y="197" width="0.0164%" height="15" fill="rgb(242,21,14)" fg:x="6014" fg:w="1"/><text x="98.7272%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_ff::fields::Field&gt;::square_in_place (2 samples, 0.03%)</title><rect x="98.4935%" y="197" width="0.0327%" height="15" fill="rgb(222,19,48)" fg:x="6015" fg:w="2"/><text x="98.7435%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as core::ops::arith::MulAssign&lt;&amp;ark_ff::fields::models::fp::Fp&lt;P,_&gt;&gt;&gt;::mul_assign (2 samples, 0.03%)</title><rect x="98.5263%" y="197" width="0.0327%" height="15" fill="rgb(232,45,27)" fg:x="6017" fg:w="2"/><text x="98.7763%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (1 samples, 0.02%)</title><rect x="98.5590%" y="197" width="0.0164%" height="15" fill="rgb(249,103,42)" fg:x="6019" fg:w="1"/><text x="98.8090%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;pcs::hyrax_kzg::hyrax_kzg_1::HyraxKzgPCS1&lt;E&gt; as pcs::PolynomialCommitmentScheme&lt;E&gt;&gt;::open (249 samples, 4.08%)</title><rect x="94.5145%" y="245" width="4.0773%" height="15" fill="rgb(246,81,33)" fg:x="5772" fg:w="249"/><text x="94.7645%" y="255.50">benc..</text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::VariableBaseMSM::msm_unchecked (237 samples, 3.88%)</title><rect x="94.7110%" y="229" width="3.8808%" height="15" fill="rgb(252,33,42)" fg:x="5784" fg:w="237"/><text x="94.9610%" y="239.50">benc..</text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ec::scalar_mul::variable_base::msm_bigint_wnaf (237 samples, 3.88%)</title><rect x="94.7110%" y="213" width="3.8808%" height="15" fill="rgb(209,212,41)" fg:x="5784" fg:w="237"/><text x="94.9610%" y="223.50">benc..</text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::sub_assign (1 samples, 0.02%)</title><rect x="98.5754%" y="197" width="0.0164%" height="15" fill="rgb(207,154,6)" fg:x="6020" fg:w="1"/><text x="98.8254%" y="207.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`arithmetic::multilinear_poly::new_eq (5 samples, 0.08%)</title><rect x="98.5918%" y="245" width="0.0819%" height="15" fill="rgb(223,64,47)" fg:x="6021" fg:w="5"/><text x="98.8418%" y="255.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;T,_&gt; as ark_ff::fields::models::fp::FpConfig&lt;_&gt;&gt;::mul_assign (5 samples, 0.08%)</title><rect x="98.5918%" y="229" width="0.0819%" height="15" fill="rgb(211,161,38)" fg:x="6021" fg:w="5"/><text x="98.8418%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ff::fields::models::fp::montgomery_backend::MontConfig::from_bigint (1 samples, 0.02%)</title><rect x="98.6737%" y="245" width="0.0164%" height="15" fill="rgb(219,138,40)" fg:x="6026" fg:w="1"/><text x="98.9237%" y="255.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`hashbrown::rustc_entry::_&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.02%)</title><rect x="98.6900%" y="245" width="0.0164%" height="15" fill="rgb(241,228,46)" fg:x="6027" fg:w="1"/><text x="98.9400%" y="255.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`core::hash::BuildHasher::hash_one (1 samples, 0.02%)</title><rect x="98.6900%" y="229" width="0.0164%" height="15" fill="rgb(223,209,38)" fg:x="6027" fg:w="1"/><text x="98.9400%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`__rdl_alloc (3 samples, 0.05%)</title><rect x="99.2959%" y="213" width="0.0491%" height="15" fill="rgb(236,164,45)" fg:x="6064" fg:w="3"/><text x="99.5459%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::finish_grow (3 samples, 0.05%)</title><rect x="99.3450%" y="213" width="0.0491%" height="15" fill="rgb(231,15,5)" fg:x="6067" fg:w="3"/><text x="99.5950%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.10%)</title><rect x="99.3941%" y="213" width="0.0982%" height="15" fill="rgb(252,35,15)" fg:x="6070" fg:w="6"/><text x="99.6441%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (18 samples, 0.29%)</title><rect x="99.2468%" y="229" width="0.2947%" height="15" fill="rgb(248,181,18)" fg:x="6061" fg:w="18"/><text x="99.4968%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.05%)</title><rect x="99.4924%" y="213" width="0.0491%" height="15" fill="rgb(233,39,42)" fg:x="6076" fg:w="3"/><text x="99.7424%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`utils::get_and_append_challenge (1 samples, 0.02%)</title><rect x="99.5415%" y="229" width="0.0164%" height="15" fill="rgb(238,110,33)" fg:x="6079" fg:w="1"/><text x="99.7915%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_ff::fields::models::fp::montgomery_backend::MontConfig::from_bigint (1 samples, 0.02%)</title><rect x="99.5415%" y="213" width="0.0164%" height="15" fill="rgb(233,195,10)" fg:x="6079" fg:w="1"/><text x="99.7915%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.02%)</title><rect x="99.5579%" y="229" width="0.0164%" height="15" fill="rgb(254,105,3)" fg:x="6080" fg:w="1"/><text x="99.8079%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.08%)</title><rect x="99.5743%" y="229" width="0.0819%" height="15" fill="rgb(221,225,9)" fg:x="6081" fg:w="5"/><text x="99.8243%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="99.6561%" y="229" width="0.0164%" height="15" fill="rgb(224,227,45)" fg:x="6086" fg:w="1"/><text x="99.9061%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="99.6561%" y="213" width="0.0164%" height="15" fill="rgb(229,198,43)" fg:x="6086" fg:w="1"/><text x="99.9061%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`poly_iop::sum_check::SumCheck::prove (61 samples, 1.00%)</title><rect x="98.7064%" y="245" width="0.9989%" height="15" fill="rgb(206,209,35)" fg:x="6028" fg:w="61"/><text x="98.9564%" y="255.50"></text></g><g><title>libsystem_platform.dylib`__bzero (2 samples, 0.03%)</title><rect x="99.6725%" y="229" width="0.0327%" height="15" fill="rgb(245,195,53)" fg:x="6087" fg:w="2"/><text x="99.9225%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`utils::append_serializable_element (1 samples, 0.02%)</title><rect x="99.7053%" y="245" width="0.0164%" height="15" fill="rgb(240,92,26)" fg:x="6089" fg:w="1"/><text x="99.9553%" y="255.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`ark_serialize::CanonicalSerialize::serialize_compressed (1 samples, 0.02%)</title><rect x="99.7053%" y="229" width="0.0164%" height="15" fill="rgb(207,40,23)" fg:x="6089" fg:w="1"/><text x="99.9553%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`&lt;ark_ff::fields::models::fp::Fp&lt;P,_&gt; as ark_serialize::CanonicalSerializeWithFlags&gt;::serialize_with_flags (1 samples, 0.02%)</title><rect x="99.7053%" y="213" width="0.0164%" height="15" fill="rgb(223,111,35)" fg:x="6089" fg:w="1"/><text x="99.9553%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.03%)</title><rect x="99.7216%" y="245" width="0.0327%" height="15" fill="rgb(229,147,28)" fg:x="6090" fg:w="2"/><text x="99.9716%" y="255.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`logup::prover::_&lt;impl logup::Logup&gt;::prove (1,517 samples, 24.84%)</title><rect x="74.9304%" y="261" width="24.8403%" height="15" fill="rgb(211,29,28)" fg:x="4576" fg:w="1517"/><text x="75.1804%" y="271.50">bench_maxpool-5e935bdab8467421`logup::pr..</text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="99.7544%" y="245" width="0.0164%" height="15" fill="rgb(228,72,33)" fg:x="6092" fg:w="1"/><text x="100.0044%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="99.7544%" y="229" width="0.0164%" height="15" fill="rgb(205,214,31)" fg:x="6092" fg:w="1"/><text x="100.0044%" y="239.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::prove_inequalities (2,514 samples, 41.17%)</title><rect x="58.6213%" y="277" width="41.1659%" height="15" fill="rgb(224,111,15)" fg:x="3580" fg:w="2514"/><text x="58.8713%" y="287.50">bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::pro..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.02%)</title><rect x="99.7708%" y="261" width="0.0164%" height="15" fill="rgb(253,21,26)" fg:x="6093" fg:w="1"/><text x="100.0208%" y="271.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`core::ptr::drop_in_place&lt;ark_sumcheck::ml_sumcheck::data_structures::ListOfProductsOfPolynomials&lt;ark_ff::fields::models::fp::Fp&lt;ark_ff::fields::models::fp::montgomery_backend::MontBackend&lt;ark_bn254::fields::fr::FrConfig,4_usize&gt;,4_usize&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="99.8526%" y="261" width="0.0164%" height="15" fill="rgb(245,139,43)" fg:x="6098" fg:w="1"/><text x="100.1026%" y="271.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`alloc::rc::Rc&lt;T,A&gt;::drop_slow (1 samples, 0.02%)</title><rect x="99.8526%" y="245" width="0.0164%" height="15" fill="rgb(252,170,7)" fg:x="6098" fg:w="1"/><text x="100.1026%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (1 samples, 0.02%)</title><rect x="99.8526%" y="229" width="0.0164%" height="15" fill="rgb(231,118,14)" fg:x="6098" fg:w="1"/><text x="100.1026%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (1 samples, 0.02%)</title><rect x="99.8526%" y="213" width="0.0164%" height="15" fill="rgb(238,83,0)" fg:x="6098" fg:w="1"/><text x="100.1026%" y="223.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::prove_sumcheck (6 samples, 0.10%)</title><rect x="99.7871%" y="277" width="0.0982%" height="15" fill="rgb(221,39,39)" fg:x="6094" fg:w="6"/><text x="100.0371%" y="287.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::evaluate_y1_slices (1 samples, 0.02%)</title><rect x="99.8690%" y="261" width="0.0164%" height="15" fill="rgb(222,119,46)" fg:x="6099" fg:w="1"/><text x="100.1190%" y="271.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`zkconv::maxpool::prover::Prover::partial_eval_y1 (1 samples, 0.02%)</title><rect x="99.8690%" y="245" width="0.0164%" height="15" fill="rgb(222,165,49)" fg:x="6099" fg:w="1"/><text x="100.1190%" y="255.50"></text></g><g><title>bench_maxpool-5e935bdab8467421`std::rt::lang_start_internal (6,105 samples, 99.97%)</title><rect x="0.0000%" y="341" width="99.9673%" height="15" fill="rgb(219,113,52)" fg:x="0" fg:w="6105"/><text x="0.2500%" y="351.50">bench_maxpool-5e935bdab8467421`std::rt::lang_start_internal</text></g><g><title>bench_maxpool-5e935bdab8467421`std::rt::lang_start::_{{closure}} (6,105 samples, 99.97%)</title><rect x="0.0000%" y="325" width="99.9673%" height="15" fill="rgb(214,7,15)" fg:x="0" fg:w="6105"/><text x="0.2500%" y="335.50">bench_maxpool-5e935bdab8467421`std::rt::lang_start::_{{closure}}</text></g><g><title>bench_maxpool-5e935bdab8467421`std::sys::backtrace::__rust_begin_short_backtrace (6,105 samples, 99.97%)</title><rect x="0.0000%" y="309" width="99.9673%" height="15" fill="rgb(235,32,4)" fg:x="0" fg:w="6105"/><text x="0.2500%" y="319.50">bench_maxpool-5e935bdab8467421`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>bench_maxpool-5e935bdab8467421`bench_maxpool::main (6,104 samples, 99.95%)</title><rect x="0.0164%" y="293" width="99.9509%" height="15" fill="rgb(238,90,54)" fg:x="1" fg:w="6104"/><text x="0.2664%" y="303.50">bench_maxpool-5e935bdab8467421`bench_maxpool::main</text></g><g><title>libsystem_malloc.dylib`free_medium (5 samples, 0.08%)</title><rect x="99.8854%" y="277" width="0.0819%" height="15" fill="rgb(213,208,19)" fg:x="6100" fg:w="5"/><text x="100.1354%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`madvise (5 samples, 0.08%)</title><rect x="99.8854%" y="261" width="0.0819%" height="15" fill="rgb(233,156,4)" fg:x="6100" fg:w="5"/><text x="100.1354%" y="271.50"></text></g><g><title>dyld`start (6,106 samples, 99.98%)</title><rect x="0.0000%" y="373" width="99.9836%" height="15" fill="rgb(207,194,5)" fg:x="0" fg:w="6106"/><text x="0.2500%" y="383.50">dyld`start</text></g><g><title>bench_maxpool-5e935bdab8467421`main (6,106 samples, 99.98%)</title><rect x="0.0000%" y="357" width="99.9836%" height="15" fill="rgb(206,111,30)" fg:x="0" fg:w="6106"/><text x="0.2500%" y="367.50">bench_maxpool-5e935bdab8467421`main</text></g><g><title>bench_maxpool-5e935bdab8467421`std::sys::pal::unix::stack_overflow::imp::make_handler (1 samples, 0.02%)</title><rect x="99.9673%" y="341" width="0.0164%" height="15" fill="rgb(243,70,54)" fg:x="6105" fg:w="1"/><text x="100.2173%" y="351.50"></text></g><g><title>all (6,107 samples, 100%)</title><rect x="0.0000%" y="389" width="100.0000%" height="15" fill="rgb(242,28,8)" fg:x="0" fg:w="6107"/><text x="0.2500%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 0.02%)</title><rect x="99.9836%" y="373" width="0.0164%" height="15" fill="rgb(219,106,18)" fg:x="6106" fg:w="1"/><text x="100.2336%" y="383.50"></text></g></svg></svg>